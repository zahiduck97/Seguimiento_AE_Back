{"version":3,"sources":["$_lazy_route_resource lazy namespace object","src/app/app.component.html","src/app/components/costos/costos.component.html","src/app/components/costos/modals/add-costo/add-costo.component.html","src/app/components/costos/modals/edit-costo/edit-costo.component.html","src/app/components/cotizacion/cotizacion.component.html","src/app/components/cotizacion/modals/add-cotizacion/add-cotizacion.component.html","src/app/components/cotizacion/modals/edit-cotizacion/edit-cotizacion.component.html","src/app/components/cotizacion/modals/informacion-cotizacion/informacion-cotizacion.component.html","src/app/components/empresas/empresas.component.html","src/app/components/empresas/modals/add-empresa/add-empresa.component.html","src/app/components/empresas/modals/edit-empresa/edit-empresa.component.html","src/app/components/index/index.component.html","src/app/components/login/login.component.html","src/app/components/movimientos/movimientos.component.html","src/app/components/navbar/navbar.component.html","src/app/components/normas/modals/add-norma/add-norma.component.html","src/app/components/normas/modals/edit-norma/edit-norma.component.html","src/app/components/normas/normas.component.html","src/app/components/prospectos/modals/add-prospecto/add-prospecto.component.html","src/app/components/prospectos/modals/edit-prospect/edit-prospect.component.html","src/app/components/prospectos/modals/validar-prospecto/validar-prospecto.component.html","src/app/components/prospectos/prospectos.component.html","src/app/components/servicios/modals/add-servicio/add-servicio.component.html","src/app/components/servicios/modals/validar-dos/validar-dos.component.html","src/app/components/servicios/modals/validar-tres/validar-tres.component.html","src/app/components/servicios/modals/validar-uno/validar-uno.component.html","src/app/components/servicios/servicios.component.html","src/app/components/tipo-servicio/modals/add-tipo-servicio/add-tipo-servicio.component.html","src/app/components/tipo-servicio/modals/edit-tipo-servicio/edit-tipo-servicio.component.html","src/app/components/tipo-servicio/tipo-servicio.component.html","src/app/components/usuarios/modals/add-usuario/add-usuario.component.html","src/app/components/usuarios/modals/edit-password/edit-password.component.html","src/app/components/usuarios/modals/edit-usuario/edit-usuario.component.html","src/app/components/usuarios/usuarios.component.html","node_modules/tslib/tslib.es6.js","src/app/app-routing.module.ts","src/app/app.component.css","src/app/app.component.ts","src/app/app.module.ts","src/app/components/costos/costos.component.css","src/app/components/costos/costos.component.ts","src/app/components/costos/modals/add-costo/add-costo.component.css","src/app/components/costos/modals/add-costo/add-costo.component.ts","src/app/components/costos/modals/edit-costo/edit-costo.component.css","src/app/components/costos/modals/edit-costo/edit-costo.component.ts","src/app/components/cotizacion/cotizacion.component.css","src/app/components/cotizacion/cotizacion.component.ts","src/app/components/cotizacion/modals/add-cotizacion/add-cotizacion.component.css","src/app/components/cotizacion/modals/add-cotizacion/add-cotizacion.component.ts","src/app/components/cotizacion/modals/edit-cotizacion/edit-cotizacion.component.css","src/app/components/cotizacion/modals/edit-cotizacion/edit-cotizacion.component.ts","src/app/components/cotizacion/modals/informacion-cotizacion/informacion-cotizacion.component.css","src/app/components/cotizacion/modals/informacion-cotizacion/informacion-cotizacion.component.ts","src/app/components/empresas/empresas.component.css","src/app/components/empresas/empresas.component.ts","src/app/components/empresas/modals/add-empresa/add-empresa.component.css","src/app/components/empresas/modals/add-empresa/add-empresa.component.ts","src/app/components/empresas/modals/edit-empresa/edit-empresa.component.css","src/app/components/empresas/modals/edit-empresa/edit-empresa.component.ts","src/app/components/index/index.component.css","src/app/components/index/index.component.ts","src/app/components/login/login.component.css","src/app/components/login/login.component.ts","src/app/components/movimientos/movimientos.component.css","src/app/components/movimientos/movimientos.component.ts","src/app/components/navbar/navbar.component.css","src/app/components/navbar/navbar.component.ts","src/app/components/normas/modals/add-norma/add-norma.component.css","src/app/components/normas/modals/add-norma/add-norma.component.ts","src/app/components/normas/modals/edit-norma/edit-norma.component.css","src/app/components/normas/modals/edit-norma/edit-norma.component.ts","src/app/components/normas/normas.component.css","src/app/components/normas/normas.component.ts","src/app/components/prospectos/modals/add-prospecto/add-prospecto.component.css","src/app/components/prospectos/modals/add-prospecto/add-prospecto.component.ts","src/app/components/prospectos/modals/edit-prospect/edit-prospect.component.css","src/app/components/prospectos/modals/edit-prospect/edit-prospect.component.ts","src/app/components/prospectos/modals/validar-prospecto/validar-prospecto.component.css","src/app/components/prospectos/modals/validar-prospecto/validar-prospecto.component.ts","src/app/components/prospectos/prospectos.component.css","src/app/components/prospectos/prospectos.component.ts","src/app/components/servicios/modals/add-servicio/add-servicio.component.css","src/app/components/servicios/modals/add-servicio/add-servicio.component.ts","src/app/components/servicios/modals/validar-dos/validar-dos.component.css","src/app/components/servicios/modals/validar-dos/validar-dos.component.ts","src/app/components/servicios/modals/validar-tres/validar-tres.component.css","src/app/components/servicios/modals/validar-tres/validar-tres.component.ts","src/app/components/servicios/modals/validar-uno/validar-uno.component.css","src/app/components/servicios/modals/validar-uno/validar-uno.component.ts","src/app/components/servicios/servicios.component.css","src/app/components/servicios/servicios.component.ts","src/app/components/tipo-servicio/modals/add-tipo-servicio/add-tipo-servicio.component.css","src/app/components/tipo-servicio/modals/add-tipo-servicio/add-tipo-servicio.component.ts","src/app/components/tipo-servicio/modals/edit-tipo-servicio/edit-tipo-servicio.component.css","src/app/components/tipo-servicio/modals/edit-tipo-servicio/edit-tipo-servicio.component.ts","src/app/components/tipo-servicio/tipo-servicio.component.css","src/app/components/tipo-servicio/tipo-servicio.component.ts","src/app/components/usuarios/modals/add-usuario/add-usuario.component.css","src/app/components/usuarios/modals/add-usuario/add-usuario.component.ts","src/app/components/usuarios/modals/edit-password/edit-password.component.css","src/app/components/usuarios/modals/edit-password/edit-password.component.ts","src/app/components/usuarios/modals/edit-usuario/edit-usuario.component.css","src/app/components/usuarios/modals/edit-usuario/edit-usuario.component.ts","src/app/components/usuarios/usuarios.component.css","src/app/components/usuarios/usuarios.component.ts","src/app/services/costos.service.ts","src/app/services/cotizaciones.service.ts","src/app/services/empresas.service.ts","src/app/services/login.service.ts","src/app/services/movimientos.service.ts","src/app/services/normas.service.ts","src/app/services/prospectos.service.ts","src/app/services/servicios.service.ts","src/app/services/tipo-servicio.service.ts","src/app/services/usuarios.service.ts","src/environments/environment.ts","src/main.ts","ws (ignored)"],"names":[],"mappings":"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","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<app-navbar></app-navbar>\\r\\n<router-outlet></router-outlet>\"","export default \"<div class=\\\"container card mt-5\\\">\\r\\n    <div>\\r\\n\\r\\n        <!-- Loader -->\\r\\n        <div style=\\\"padding: 5px 0px;\\\">\\r\\n            <mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"preloaderActivo\\\"></mat-progress-bar>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"w-100\\\">\\r\\n            <div class=\\\"text-center mt-3\\\">\\r\\n                <h3><strong class=\\\"colorAzul\\\">Costos</strong></h3>\\r\\n            </div>\\r\\n\\r\\n\\r\\n\\r\\n            <div class=\\\"d-flex justify-content-between\\\">\\r\\n                <div class=\\\"d-flex\\\">\\r\\n                    <button class=\\\"btn\\\" (click)=\\\"conectarServidor()\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Recargar Costos\\\" [disabled]=\\\"desactivado\\\">\\r\\n                        <i class=\\\"material-icons\\\">replay</i>\\r\\n                    </button>\\r\\n                    <mat-form-field>\\r\\n                        <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n\\r\\n                <div>\\r\\n                    <button class=\\\"btn botonAzul white-text\\\" (click)=\\\"nuevo()\\\" [disabled]=\\\"desactivado\\\"> Nuevo Costo</button>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div>\\r\\n\\r\\n            <table mat-table [dataSource]=\\\"dataSource\\\">\\r\\n\\r\\n                <ng-container matColumnDef=\\\"codificacion\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"botonAzul text-white text-center\\\" style=\\\"font-size: 20px;\\\"> Codificacion </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let row\\\"> {{row.codificacion}} </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <ng-container matColumnDef=\\\"nombre\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"botonAzul text-white text-center\\\" style=\\\"font-size: 20px;\\\"> Nombre </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let row\\\"> {{row.nombre}} </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <ng-container matColumnDef=\\\"costo\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"botonAzul text-white text-center\\\" style=\\\"font-size: 20px;\\\"> Costo </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let row\\\"> {{row.costo}} </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <ng-container matColumnDef=\\\"acciones\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"botonAzul text-white text-center\\\" style=\\\"font-size: 20px;\\\"> Acciones </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let row\\\">\\r\\n\\r\\n                        <i class=\\\"material-icons colorAzul\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Editar Costo\\\" (click)=\\\"editar(row)\\\">edit</i>\\r\\n                        <i class=\\\"material-icons colorRojo\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Borrar Costo\\\" (click)=\\\"delete(row)\\\">delete</i>\\r\\n\\r\\n                    </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n                <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\r\\n                </tr>\\r\\n\\r\\n            </table>\\r\\n\\r\\n            <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\r\\n        </div>\\r\\n    </div>\\r\\n\"","export default \"<div class=\\\"row\\\">\\n    <form class=\\\"col-md-12\\\" #formAddEmpresa=\\\"ngForm\\\">\\n\\n        <h3 class=\\\"colorVerde col-md-12\\\" style=\\\"text-align: center;\\\">Agregar Costo</h3>\\n\\n        <div class=\\\"divider\\\"></div>\\n\\n        <!-- Loader -->\\n        <div style=\\\"padding: 5px 0px;\\\">\\n            <mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"preloaderActivo\\\"></mat-progress-bar>\\n        </div>\\n\\n        <div mat-dialog-content class=\\\"col-sm-12\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"form-group col-sm-12\\\">\\n                    <mat-form-field>\\n                        <mat-label>Norma</mat-label>\\n                        <mat-select [(ngModel)]=\\\"costo.idNorma\\\" name=\\\"idNorma\\\">\\n                            <mat-option *ngFor=\\\"let norma of normas\\\" [value]=\\\"norma.id\\\">\\n                                {{norma.codificacion}}\\n                            </mat-option>\\n                        </mat-select>\\n                    </mat-form-field>\\n                </div>\\n\\n                <div class=\\\"form-group col-sm-12\\\">\\n                    <mat-form-field>\\n                        <mat-label>Servicio</mat-label>\\n                        <mat-select [(ngModel)]=\\\"costo.idTipoServicio\\\" name=\\\"idTipoServicio\\\">\\n                            <mat-option *ngFor=\\\"let servicio of servicios\\\" [value]=\\\"servicio.id\\\">\\n                                {{servicio.nombre}}\\n                            </mat-option>\\n                        </mat-select>\\n                    </mat-form-field>\\n                </div>\\n\\n                <div class=\\\"form-group col-sm-12\\\">\\n                    <label for=\\\"costo\\\">Costo:</label>\\n                    <input type=\\\"number\\\" #nombre=\\\"ngModel\\\" [(ngModel)]=\\\"costo.costo\\\" name=\\\"costo\\\" id=\\\"costo\\\" required oninput=\\\"this.value = this.value.toUpperCase()\\\" class=\\\"form-control\\\">\\n                </div>\\n\\n            </div>\\n        </div>\\n\\n        <div mat-dialog-actions class=\\\"col-sm-12\\\">\\n            <div class=\\\"col-sm-12\\\" style=\\\"margin-bottom: 10px;\\\">\\n                <button class=\\\"btn botonCafe waves-effect\\\" (click)=\\\"cerrarModal()\\\" style=\\\"width: 100%;\\\">Cancelar</button>\\n            </div>\\n\\n            <div class=\\\"col-sm-12\\\">\\n                <input class=\\\"btn botonVerde\\\" type=\\\"submit\\\" style=\\\"width: 100%;\\\" value=\\\"Guardar\\\" [disabled]=\\\"!formAddEmpresa.form.valid || desactivado\\\" (click)=\\\"guardar()\\\">\\n            </div>\\n        </div>\\n\\n    </form>\\n</div>\"","export default \"<div class=\\\"row\\\">\\n  <form class=\\\"col-md-12\\\" #formAddEmpresa=\\\"ngForm\\\">\\n\\n    <h3 class=\\\"colorVerde col-md-12\\\" style=\\\"text-align: center;\\\">Editar Costo</h3>\\n\\n    <div class=\\\"divider\\\"></div>\\n\\n    <!-- Loader -->\\n    <div style=\\\"padding: 5px 0px;\\\">\\n      <mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"preloaderActivo\\\"></mat-progress-bar>\\n    </div>\\n\\n    <div mat-dialog-content class=\\\"col-sm-12\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"form-group col-sm-12\\\">\\n          <mat-form-field>\\n            <mat-label>Norma</mat-label>\\n            <mat-select [(ngModel)]=\\\"costo.idNorma\\\" name=\\\"idNorma\\\">\\n              <mat-option *ngFor=\\\"let norma of normas\\\" [value]=\\\"norma.id\\\">\\n                {{norma.codificacion}}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </div>\\n\\n        <div class=\\\"form-group col-sm-12\\\">\\n          <mat-form-field>\\n            <mat-label>Servicio</mat-label>\\n            <mat-select [(ngModel)]=\\\"costo.idTipoServicio\\\" name=\\\"idTipoServicio\\\">\\n              <mat-option *ngFor=\\\"let servicio of servicios\\\" [value]=\\\"servicio.id\\\">\\n                {{servicio.nombre}}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </div>\\n\\n        <div class=\\\"form-group col-sm-12\\\">\\n          <label for=\\\"costo\\\">Costo:</label>\\n          <input type=\\\"number\\\" #nombre=\\\"ngModel\\\" [(ngModel)]=\\\"costo.costo\\\" name=\\\"costo\\\" id=\\\"costo\\\" required oninput=\\\"this.value = this.value.toUpperCase()\\\" class=\\\"form-control\\\">\\n        </div>\\n\\n      </div>\\n    </div>\\n\\n    <div mat-dialog-actions class=\\\"col-sm-12\\\">\\n      <div class=\\\"col-sm-12\\\" style=\\\"margin-bottom: 10px;\\\">\\n        <button class=\\\"btn botonCafe waves-effect\\\" (click)=\\\"cerrarModal()\\\" style=\\\"width: 100%;\\\">Cancelar</button>\\n      </div>\\n\\n      <div class=\\\"col-sm-12\\\">\\n        <input class=\\\"btn botonVerde\\\" type=\\\"submit\\\" style=\\\"width: 100%;\\\" value=\\\"Guardar\\\" [disabled]=\\\"!formAddEmpresa.form.valid || desactivado\\\" (click)=\\\"guardar()\\\">\\n      </div>\\n    </div>\\n\\n  </form>\\n</div>\\n\"","export default \"<div class=\\\"container card mt-5\\\">\\r\\n    <div>\\r\\n\\r\\n        <!-- Loader -->\\r\\n        <div  style=\\\"padding: 5px 0px;\\\">\\r\\n            <mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"preloaderActivo\\\"></mat-progress-bar>\\r\\n        </div>\\r\\n    \\r\\n        <div class=\\\"w-100\\\">\\r\\n            <div class=\\\"text-center mt-3\\\">\\r\\n                <h3><strong class=\\\"colorAzul\\\">COTIZACIONES</strong></h3>\\r\\n            </div>\\r\\n        \\r\\n                \\r\\n\\r\\n            <div class=\\\"d-flex justify-content-between\\\">\\r\\n                <div class=\\\"d-flex\\\">\\r\\n                    <button class=\\\"btn\\\" (click)=\\\"conectarServidor()\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Recargar Cotizaciones\\\" [disabled]=\\\"desactivado\\\">\\r\\n                        <i class=\\\"material-icons\\\">replay</i>\\r\\n                    </button>\\r\\n                    <mat-form-field>\\r\\n                        <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n\\r\\n                <div>\\r\\n                    <button class=\\\"btn botonAzul white-text\\\" (click)=\\\"nuevo()\\\" [disabled]=\\\"desactivado\\\"> Nueva Cotizacion</button> \\r\\n                </div>\\r\\n            </div>\\r\\n    \\r\\n        </div>\\r\\n    \\r\\n    \\r\\n    <div>\\r\\n\\r\\n        <table mat-table [dataSource]=\\\"dataSource\\\">\\r\\n\\r\\n            <ng-container matColumnDef=\\\"prospecto\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef  class=\\\"botonAzul text-white text-center\\\" style=\\\"font-size: 20px;\\\"> Prospecto </th>\\r\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{ row.nombre }} </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container matColumnDef=\\\"fecha\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef  class=\\\"botonAzul text-white text-center\\\" style=\\\"font-size: 20px;\\\"> Fecha </th>\\r\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{ row.fecha }} </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container matColumnDef=\\\"comentario\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef  class=\\\"botonAzul text-white text-center\\\" style=\\\"font-size: 20px;\\\"> Comentario </th>\\r\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{ row.comentario }} </td>\\r\\n            </ng-container>\\r\\n\\r\\n\\r\\n            <ng-container matColumnDef=\\\"total\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef  class=\\\"botonAzul text-white text-center\\\" style=\\\"font-size: 20px;\\\"> Total </th>\\r\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{ row.total }} </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container matColumnDef=\\\"acciones\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef  class=\\\"botonAzul text-white text-center\\\" style=\\\"font-size: 20px;\\\"> Acciones </th>\\r\\n                <td mat-cell *matCellDef=\\\"let row\\\"> \\r\\n                    \\r\\n                     <i class=\\\"material-icons colorAzul\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Editar Cotización\\\" (click)=\\\"edit(row)\\\">edit</i>\\r\\n                  <i class=\\\"material-icons colorVerde\\\" data-placement=\\\"top\\\" title=\\\"Ver Informacion\\\" (click)=\\\"informacion(row)\\\">remove_red_eye</i>\\r\\n                  <i class=\\\"material-icons colorRojo\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Borrar Cotización\\\" (click)=\\\"borrar(row)\\\">delete</i>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\r\\n            </tr>\\r\\n\\r\\n        </table>\\r\\n\\r\\n        <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\r\\n    </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"row\\\">\\r\\n    <form class=\\\"col-md-12\\\" #formAddEmpresa=\\\"ngForm\\\">\\r\\n\\r\\n        <h3 class=\\\"colorVerde col-md-12\\\" style=\\\"text-align: center;\\\">Agregar Cotizacion</h3>\\r\\n\\r\\n        <div class=\\\"divider\\\"></div>\\r\\n\\r\\n        <div style=\\\"padding: 5px 0px;\\\">\\r\\n            <mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"preloaderActivo\\\"></mat-progress-bar>\\r\\n        </div>\\r\\n\\r\\n        <div mat-dialog-content class=\\\"col-sm-12\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"form-group col-sm-12\\\">\\r\\n                    <mat-form-field required>\\r\\n                        <mat-label>Prospecto</mat-label>\\r\\n                        <mat-select [(ngModel)]=\\\"cotizacion.idProspecto\\\" name=\\\"idNorma\\\" id=\\\"idNorma\\\" required>\\r\\n                            <mat-option *ngFor=\\\"let prospecto of prospectos\\\" [value]=\\\"prospecto.id\\\">\\r\\n                                {{ prospecto.nombre }}\\r\\n                            </mat-option>\\r\\n                        </mat-select>\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n      \\r\\n\\r\\n                <div *ngFor=\\\"let control of serviciosArray.controls; index as i\\\" class=\\\"m-3\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <mat-form-field>\\r\\n                            <mat-label>Norma</mat-label>\\r\\n                            <mat-select [formControl]=\\\"normasArray.controls[i]\\\"  (selectionChange)=\\\"buscarTipoServicio(i)\\\" required name=\\\"prueba\\\">\\r\\n                                <mat-option *ngFor=\\\"let norma of normas[i]\\\" [value]=\\\"norma.id\\\">\\r\\n                                    {{norma.codificacion}}\\r\\n                                </mat-option>\\r\\n                            </mat-select>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n    \\r\\n                    <div class=\\\"form-group \\\">\\r\\n                        <mat-form-field>\\r\\n                            <mat-label>Tipo Servicio</mat-label>\\r\\n                            <mat-select [formControl]=\\\"serviciosArray.controls[i]\\\" (selectionChange)=\\\"buscarCosto(i)\\\" name=\\\"prue\\\" required>\\r\\n                                <mat-option *ngFor=\\\"let tipo of tipoServicio[i]\\\" [value]=\\\"tipo.idTipoServicio\\\">\\r\\n                                    {{  tipo.nombre }}\\r\\n                                </mat-option>\\r\\n                            </mat-select>\\r\\n                        </mat-form-field>\\r\\n                    </div>  \\r\\n\\r\\n                    <button class=\\\"btn btn-outline-danger btn-block\\\" (click)=\\\"quitar(i)\\\">Eliminar</button>\\r\\n                </div>\\r\\n\\r\\n\\r\\n                <div class=\\\"form-group col-sm-12\\\">\\r\\n                    <label for=\\\"costo\\\">Total:</label>\\r\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"total\\\" name=\\\"costo\\\" id=\\\"costo\\\" class=\\\"form-control\\\" readonly>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group col-sm-12\\\">\\r\\n                    <label for=\\\"comentario\\\">Comentario:</label>\\r\\n                    <textarea [(ngModel)]=\\\"cotizacion.comentario\\\" name=\\\"comentario\\\" id=\\\"comentario\\\" class=\\\"form-control\\\" placeholder=\\\"Escribe un comentario para que te sea mas facil identificar esta cotización despues.\\\" required></textarea>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div mat-dialog-actions class=\\\"col-sm-12\\\">\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n                <button class=\\\"btn botonAzul btn-block text-white\\\" [disabled]=\\\"desactivado \\\"(click)=\\\"agregar()\\\">Nueva Fila</button>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n                <button class=\\\"btn botonCafe text-white\\\" (click)=\\\"cerrarModal()\\\" style=\\\"width: 100%;\\\">Cancelar</button>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n                <input class=\\\"btn botonVerde\\\" type=\\\"submit\\\" style=\\\"width: 100%;\\\" value=\\\"Guardar\\\" [disabled]=\\\"!formAddEmpresa.form.valid || desactivado\\\" (click)=\\\"guardar()\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </form>\\r\\n</div>\"","export default \"<div class=\\\"row\\\">\\r\\n  <form class=\\\"col-md-12\\\" #formAddEmpresa=\\\"ngForm\\\">\\r\\n\\r\\n    <h3 class=\\\"colorVerde col-md-12\\\" style=\\\"text-align: center;\\\">Editar Cotizacion</h3>\\r\\n\\r\\n    <div class=\\\"divider\\\"></div>\\r\\n\\r\\n    <div style=\\\"padding: 5px 0px;\\\">\\r\\n      <mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"preloaderActivo\\\"></mat-progress-bar>\\r\\n    </div>\\r\\n\\r\\n    <div mat-dialog-content class=\\\"col-sm-12\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group col-sm-12\\\">\\r\\n          <mat-form-field required>\\r\\n            <mat-label>Prospecto</mat-label>\\r\\n            <mat-select [(ngModel)]=\\\"cotizacion.idProspecto\\\" name=\\\"idNorma\\\" id=\\\"idNorma\\\" required>\\r\\n              <mat-option *ngFor=\\\"let prospecto of prospectos\\\" [value]=\\\"prospecto.id\\\">\\r\\n                {{ prospecto.nombre }}\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div *ngFor=\\\"let control of serviciosArray.controls; index as i\\\" class=\\\"m-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <mat-form-field>\\r\\n              <mat-label>Norma</mat-label>\\r\\n              <mat-select [formControl]=\\\"normasArray.controls[i]\\\"  (selectionChange)=\\\"buscarTipoServicio(i)\\\" required name=\\\"prueba\\\">\\r\\n                <mat-option *ngFor=\\\"let norma of normas[i]\\\" [value]=\\\"norma.id\\\">\\r\\n                  {{norma.codificacion}}\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group \\\">\\r\\n            <mat-form-field>\\r\\n              <mat-label>Tipo Servicio</mat-label>\\r\\n              <mat-select [formControl]=\\\"serviciosArray.controls[i]\\\" (selectionChange)=\\\"buscarCosto(i)\\\" name=\\\"prue\\\" required>\\r\\n                <mat-option *ngFor=\\\"let tipo of tipoServicio[i]\\\" [value]=\\\"tipo.idTipoServicio\\\">\\r\\n                  {{  tipo.nombre }}\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n\\r\\n          <button class=\\\"btn btn-outline-danger btn-block\\\" (click)=\\\"quitar(i)\\\">Eliminar</button>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"form-group col-sm-12\\\">\\r\\n          <label for=\\\"costo\\\">Total:</label>\\r\\n          <input type=\\\"text\\\" [(ngModel)]=\\\"total\\\" name=\\\"costo\\\" id=\\\"costo\\\" class=\\\"form-control\\\" readonly>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group col-sm-12\\\">\\r\\n          <label for=\\\"comentario\\\">Comentario:</label>\\r\\n          <textarea [(ngModel)]=\\\"cotizacion.comentario\\\" name=\\\"comentario\\\" id=\\\"comentario\\\" class=\\\"form-control\\\" placeholder=\\\"Escribe un comentario para que te sea mas facil identificar esta cotización despues.\\\" required></textarea>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div mat-dialog-actions class=\\\"col-sm-12\\\">\\r\\n      <div class=\\\"col-sm-12\\\">\\r\\n        <button class=\\\"btn botonAzul btn-block text-white\\\" [disabled]=\\\"desactivado \\\"(click)=\\\"agregar()\\\">Nueva Fila</button>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-sm-12\\\">\\r\\n        <button class=\\\"btn botonCafe text-white\\\" (click)=\\\"cerrarModal()\\\" style=\\\"width: 100%;\\\">Cancelar</button>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-sm-12\\\">\\r\\n        <input class=\\\"btn botonVerde\\\" type=\\\"submit\\\" style=\\\"width: 100%;\\\" value=\\\"Actualizar\\\" [disabled]=\\\"!formAddEmpresa.form.valid || desactivado\\\" (click)=\\\"guardar()\\\">\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </form>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"row\\\">\\n\\n  <!--<mat-spinner style=\\\"margin:0 auto;\\\"-->\\n                       <!--mode=\\\"indeterminate\\\"></mat-spinner>-->\\n  <mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"preloaderActivo\\\"></mat-progress-bar>\\n\\n  <h3 class=\\\"colorVerde col-md-12\\\" style=\\\"text-align: center;\\\">Información de la cotización</h3>\\n\\n  <div mat-dialog-content class=\\\"col-sm-12\\\">\\n    <div class=\\\"row\\\" id=\\\"pdfTable\\\" #pdfTable>\\n\\n      <div class=\\\"col-sm-12 col-md-6\\\">\\n        <b>Fecha:</b> {{ data.fecha }}\\n      </div>\\n\\n      <div class=\\\"col-sm-12 col-md-6\\\">\\n        <b>Empresa:</b> {{ prospecto.empresa }}\\n      </div>\\n\\n      <div class=\\\"col-sm-12 col-md-6\\\">\\n        <b>Prospecto:</b> {{ prospecto.nombre }}\\n      </div>\\n\\n      <div class=\\\"col-sm-12 col-md-6\\\">\\n        <b>Telefono:</b> {{ prospecto.telefono }}\\n      </div>\\n\\n      <div class=\\\"col-sm-12 col-md-6\\\">\\n        <b>Dirección:</b> {{ prospecto.direccion }}\\n      </div>\\n\\n      <table class=\\\"table\\\">\\n        <thead class=\\\"thead-dark\\\">\\n          <tr>\\n            <th scope=\\\"col\\\">Codificacion</th>\\n            <th scope=\\\"col\\\">Tipo Servicio</th>\\n            <th scope=\\\"col\\\">Costo</th>\\n          </tr>\\n        </thead>\\n\\n        <tbody>\\n          <tr *ngFor=\\\"let costo of costos\\\" class=\\\"col-sm-12\\\">\\n            <td >\\n              {{ costo.codificacion }}\\n            </td>\\n\\n              <td >\\n              {{ costo.nombre }}\\n            </td>\\n\\n              <td>\\n              ${{ costo.costo }}\\n            </td>\\n          </tr>\\n          <tr>\\n            <td > <b>Total:</b> </td >\\n            <td></td>\\n            <td>${{ data.total }}</td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n\\n  <div mat-dialog-actions class=\\\"col-sm-12\\\">\\n\\n    <div class=\\\"col-sm-12\\\">\\n      <button class=\\\"btn botonCafe text-white\\\" (click)=\\\"cerrarModal()\\\" [disabled]=\\\"desactivado\\\"  style=\\\"width: 100%;\\\">Cerrar</button>\\n    </div>\\n\\n    <div class=\\\"col-sm-12\\\">\\n      <input class=\\\"btn botonVerde\\\" type=\\\"submit\\\" style=\\\"width: 100%;\\\" value=\\\"Imprimir PDF\\\" (click)=\\\"imprimirPdf()\\\">\\n    </div>\\n  </div>\\n\\n</div>\\n\\n\"","export default \"<div class=\\\"container card mt-5\\\">\\r\\n    <div>\\r\\n\\r\\n        <!-- Loader -->\\r\\n        <div  style=\\\"padding: 5px 0px;\\\">\\r\\n            <mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"preloaderActivo\\\"></mat-progress-bar>\\r\\n        </div>\\r\\n    \\r\\n        <div class=\\\"w-100\\\">\\r\\n            <div class=\\\"text-center mt-3\\\">\\r\\n                <h3><strong class=\\\"colorAzul\\\">EMPRESAS</strong></h3>\\r\\n            </div>\\r\\n        \\r\\n                \\r\\n\\r\\n            <div class=\\\"d-flex justify-content-between\\\">\\r\\n                <div class=\\\"d-flex\\\">\\r\\n                    <button class=\\\"btn\\\" (click)=\\\"conectarServidor()\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Recargar Empresas\\\" [disabled]=\\\"desactivado\\\">\\r\\n                        <i class=\\\"material-icons\\\">replay</i>\\r\\n                    </button>\\r\\n                    <mat-form-field>\\r\\n                        <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n\\r\\n                <div>\\r\\n                    <button class=\\\"btn botonAzul white-text\\\" (click)=\\\"formAddEmpresa()\\\" [disabled]=\\\"desactivado\\\"> Nueva Empresa</button> \\r\\n                </div>\\r\\n            </div>\\r\\n    \\r\\n        </div>\\r\\n    \\r\\n    \\r\\n    <div>\\r\\n\\r\\n        <table mat-table [dataSource]=\\\"dataSource\\\">\\r\\n\\r\\n            <ng-container matColumnDef=\\\"nombre\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef  class=\\\"botonAzul text-white text-center\\\" style=\\\"font-size: 20px;\\\"> Nombre </th>\\r\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.nombre}} </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container matColumnDef=\\\"acciones\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef  class=\\\"botonAzul text-white text-center\\\" style=\\\"font-size: 20px;\\\"> Acciones </th>\\r\\n                <td mat-cell *matCellDef=\\\"let row\\\"> \\r\\n                    \\r\\n                    <i class=\\\"material-icons colorAzul\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Editar Empresa\\\" (click)=\\\"editEmpresa(row)\\\">edit</i>\\r\\n                    <i class=\\\"material-icons colorRojo\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Borrar Empresa\\\" (click)=\\\"deleteEmpresa(row)\\\"  >delete</i>\\r\\n                    \\r\\n                </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\r\\n            </tr>\\r\\n\\r\\n        </table>\\r\\n\\r\\n        <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\r\\n    </div>\\r\\n</div>\"","export default \"<div  class=\\\"row\\\">\\r\\n    <form class=\\\"col-md-12\\\"  #formAddEmpresa=\\\"ngForm\\\">\\r\\n        \\r\\n            <h3  class=\\\"colorVerde col-md-12\\\" style=\\\"text-align: center;\\\">Agregar Empresa</h3>\\r\\n\\r\\n            <div class=\\\"divider\\\"></div>\\r\\n\\r\\n            <!-- Loader -->\\r\\n            <div  style=\\\"padding: 5px 0px;\\\">\\r\\n                <mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"preloaderActivo\\\"></mat-progress-bar>\\r\\n            </div>\\r\\n\\r\\n            <div mat-dialog-content class=\\\"col-sm-12 \\\">\\r\\n                    <div class=\\\"form-group col-sm-12\\\">\\r\\n                        <label for=\\\"nombre\\\">Nombre:</label>\\r\\n                        <input type=\\\"text\\\" #nombre=\\\"ngModel\\\" [(ngModel)]=\\\"empresa.nombre\\\" name=\\\"nombre\\\" id=\\\"nombre\\\" required oninput=\\\"this.value = this.value.toUpperCase()\\\" class=\\\"form-control\\\">\\r\\n                    </div>\\r\\n            </div>  \\r\\n            \\r\\n            <div mat-dialog-actions class=\\\"col-sm-12\\\">\\r\\n                <div class=\\\"col-sm-12\\\" style=\\\"margin-bottom: 10px;\\\">\\r\\n                    <button class=\\\"btn botonCafe waves-effect\\\" (click)=\\\"cerrarModal()\\\" style=\\\"width: 100%;\\\">Cancelar</button>\\r\\n                </div>\\r\\n    \\r\\n                <div class=\\\"col-sm-12\\\">\\r\\n                    <input class=\\\"btn botonVerde\\\" type=\\\"submit\\\" style=\\\"width: 100%;\\\" value=\\\"Guardar\\\" [disabled]=\\\"!formAddEmpresa.form.valid || desactivado\\\" (click)=\\\"postEmpresa()\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n    </form>\\r\\n</div >\\r\\n\\r\\n\"","export default \"<div  class=\\\"row\\\">\\r\\n    <form class=\\\"col-sm-12\\\"  #formEditEmpresa=\\\"ngForm\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <h3  class=\\\"colorVerde col-sm-12\\\" style=\\\"text-align: center;\\\">Editar Empresa</h3>\\r\\n\\r\\n            <div class=\\\"divider\\\"></div>\\r\\n\\r\\n            <!-- Loader -->\\r\\n            <div  style=\\\"padding: 5px 0px;\\\">\\r\\n                <mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"preloaderActivo\\\"></mat-progress-bar>\\r\\n            </div>\\r\\n\\r\\n            <div mat-dialog-content class=\\\"col-sm-12\\\">\\r\\n                <div class=\\\"form-group col-sm-12 col-md-12\\\">\\r\\n                    <label for=\\\"nombre\\\">Nombre:</label> \\r\\n                    <input type=\\\"text\\\" #nombre=\\\"ngModel\\\" [(ngModel)]=\\\"data.empresa.nombre\\\" name=\\\"nombre\\\" id=\\\"nombre\\\" required class=\\\"form-control\\\" oninput=\\\"this.value = this.value.toUpperCase()\\\">\\r\\n                </div>\\r\\n            </div>  \\r\\n            \\r\\n            <div mat-dialog-actions class=\\\"col-sm-12\\\">\\r\\n                <div class=\\\"col-sm-12\\\" style=\\\"margin-bottom: 10px;\\\">\\r\\n                    <button class=\\\"btn botonCafe\\\" (click)=\\\"cerrarModal()\\\" style=\\\"width: 100%;\\\">Cancelar</button>\\r\\n                </div>\\r\\n    \\r\\n                <div class=\\\"col-sm-12\\\">\\r\\n                    <input class=\\\"btn botonVerde\\\" type=\\\"submit\\\" style=\\\"width: 100%;\\\" value=\\\"Guardar\\\" [disabled]=\\\"!formEditEmpresa.form.valid || desactivado\\\" (click)=\\\"putEmpresa()\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </form>\\r\\n</div >\\r\\n    \\r\\n    \"","export default \"<div class=\\\"card container mt-5\\\">\\r\\n  <div class=\\\"container py-5\\\">\\r\\n      <div class=\\\"card-title colorAzul \\\">\\r\\n          Bienvenido\\r\\n      </div>\\r\\n      \\r\\n      <div class=\\\"card-content\\\">\\r\\n        <p > Algunas de las actividades que puedes hacer son: </p>\\r\\n        \\r\\n        <div class=\\\"list-group\\\" >\\r\\n          <a [routerLink]=\\\"['/empresas']\\\"  class=\\\"list-group-item list-group-item-action\\\"> Ver todas las Empresas </a>\\r\\n          <a [routerLink]=\\\"['/prospectos']\\\" class=\\\"list-group-item list-group-item-action\\\">Ver todos los Prospectos</a>\\r\\n          <a [routerLink]=\\\"['/servicios']\\\" class=\\\"list-group-item list-group-item-action\\\">Ver todos los Servicios</a>\\r\\n\\r\\n          <span *ngIf=\\\"rol === 2 || rol === 3\\\">\\r\\n            <a [routerLink]=\\\"['/normas']\\\" class=\\\"list-group-item list-group-item-action\\\">Ver todas las Normas</a>\\r\\n            <a [routerLink]=\\\"['/tipo-servicio']\\\" class=\\\"list-group-item list-group-item-action\\\">Ver los tipos de servicios</a>\\r\\n            <a [routerLink]=\\\"['/costos']\\\" class=\\\"list-group-item list-group-item-action\\\">Ver todos los Costos</a>\\r\\n          </span>\\r\\n\\r\\n          <span *ngIf=\\\"rol === 3\\\">\\r\\n            <a [routerLink]=\\\"['/movimientos']\\\" class=\\\"list-group-item list-group-item-action\\\">Ver todos los Movimientos</a>\\r\\n          </span>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n  </div>\\r\\n</div>\"","export default \"<div class=\\\"container h-100\\\">\\r\\n\\t<div class=\\\"d-flex justify-content-center h-100\\\">\\r\\n\\t\\t<div class=\\\"user_card\\\">\\r\\n\\t\\t\\t<div class=\\\"d-flex justify-content-center\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"brand_logo_container\\\">\\r\\n\\t\\t\\t\\t\\t<img src=\\\"../../../assets/logo-AE.png\\\" alt=\\\"Logo Ae Intertrade\\\" class=\\\"brand_logo\\\">\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"d-flex justify-content-center form_container\\\">\\r\\n\\t\\t\\t\\t<form #formAddEmpleado=\\\"ngForm\\\">\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<!-- Loader -->\\r\\n\\t\\t\\t\\t\\t<div  style=\\\"padding: 5px 0px;\\\">\\r\\n\\t\\t\\t\\t\\t\\t<mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"preloaderActivo\\\"></mat-progress-bar>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t<div class=\\\"input-group mb-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-group-append\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"input-group-text\\\"><i class=\\\"fas fa-user\\\"></i></span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" name=\\\"userEmail\\\" class=\\\" form-control input_user\\\" placeholder=\\\"UserName o Email\\\" [(ngModel)]=\\\"usuario.username\\\" required >\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"input-group mb-2\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-group-append\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"input-group-text\\\"><i class=\\\"fas fa-key\\\"></i></span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"password\\\" name=\\\"password\\\" class=\\\" form-control input_pass\\\" placeholder=\\\"Password\\\" [(ngModel)]=\\\"usuario.password\\\" required>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"d-flex justify-content-center mt-3 login_container\\\">\\r\\n\\t\\t\\t\\t<button type=\\\"submit\\\" name=\\\"button\\\" class=\\\"btn login_btn botonCafe\\\" [disabled]=\\\"!formAddEmpleado.form.valid || desactivado\\\" (click)=\\\"login()\\\">Login</button>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"container card mt-5\\\">\\r\\n    <div>\\r\\n\\r\\n        <!-- Loader -->\\r\\n        <div  style=\\\"padding: 5px 0px;\\\">\\r\\n            <mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"preloaderActivo\\\"></mat-progress-bar>\\r\\n        </div>\\r\\n    \\r\\n        <div class=\\\"w-100\\\">\\r\\n            <div class=\\\"text-center mt-3\\\">\\r\\n                <h3><strong class=\\\"colorAzul\\\">Movimientos</strong></h3>\\r\\n            </div>\\r\\n        \\r\\n                \\r\\n\\r\\n            <div class=\\\"d-flex justify-content-between\\\">\\r\\n                <div class=\\\"d-flex\\\">\\r\\n                    <button class=\\\"btn\\\" (click)=\\\"conectarServidor()\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Recargar Movimientos\\\" [disabled]=\\\"desactivado\\\">\\r\\n                        <i class=\\\"material-icons\\\">replay</i>\\r\\n                    </button>\\r\\n                    <mat-form-field>\\r\\n                        <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n            </div>\\r\\n    \\r\\n        </div>\\r\\n    \\r\\n    \\r\\n    <div>\\r\\n\\r\\n        <table mat-table [dataSource]=\\\"dataSource\\\" matSort >\\r\\n\\r\\n            <ng-container matColumnDef=\\\"usuario\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef  class=\\\"botonAzul text-white text-center\\\" style=\\\"font-size: 20px;\\\" mat-sort-header> Usuario </th>\\r\\n                <td mat-cell *matCellDef=\\\"let row\\\" [ngClass]=\\\"{botonVerde: row.tipo === 1, botonAmarillo: row.tipo === 2, botonRojo: row.tipo === 3}\\\"> {{row.usuario}} </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container matColumnDef=\\\"tipo\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef  class=\\\"botonAzul text-white text-center\\\" style=\\\"font-size: 20px;\\\" mat-sort-header> Tipo Movimiento </th>\\r\\n                <td mat-cell *matCellDef=\\\"let row\\\" [ngClass]=\\\"{botonVerde: row.tipo === 1, botonAmarillo: row.tipo === 2, botonRojo: row.tipo === 3}\\\"> \\r\\n                    <div *ngIf=\\\"row.tipo === 1\\\"> INSERTAR </div>\\r\\n                    <div *ngIf=\\\"row.tipo === 2\\\"> ACTUALIZAR </div>\\r\\n                    <div *ngIf=\\\"row.tipo === 3\\\"> BORRAR </div>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container matColumnDef=\\\"descripcion\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef  class=\\\"botonAzul text-white text-center\\\" style=\\\"font-size: 20px;\\\" mat-sort-header> Descripcion </th>\\r\\n                <td mat-cell *matCellDef=\\\"let row\\\" [ngClass]=\\\"{botonVerde: row.tipo === 1, botonAmarillo: row.tipo === 2, botonRojo: row.tipo === 3}\\\"> {{row.descripcion}} </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container matColumnDef=\\\"fecha\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef  class=\\\"botonAzul text-white text-center\\\" style=\\\"font-size: 20px;\\\" mat-sort-header> Fecha </th>\\r\\n                <td mat-cell *matCellDef=\\\"let row\\\" [ngClass]=\\\"{botonVerde: row.tipo === 1, botonAmarillo: row.tipo === 2, botonRojo: row.tipo === 3}\\\"> {{row.fecha}} </td>\\r\\n            </ng-container>\\r\\n\\r\\n\\r\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\r\\n            </tr>\\r\\n\\r\\n        </table>\\r\\n\\r\\n        <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\r\\n    </div>\\r\\n</div>\"","export default \"<nav class=\\\"navbar navbar-expand-lg navbar-dark botonGrisFuerte\\\" *ngIf=\\\"showNavbar\\\">\\r\\n  <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/index']\\\">Seguimiento</a>\\r\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n  </button>\\r\\n\\r\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\r\\n    <ul class=\\\"navbar-nav ml-auto nav-flex-icons\\\" *ngIf=\\\"rol === 2\\\">\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/normas']\\\">Normas</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/tipo-servicio']\\\">Tipo de Servicios</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/costos']\\\">Costos</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/cotizacion']\\\">Cotizacion</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/empresas']\\\">Empresas</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/prospectos']\\\">Prospectos</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/servicios']\\\">Servicios</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/usuarios']\\\">Usuarios</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" (click)=\\\"logOut()\\\">Salir</a>\\r\\n      </li>\\r\\n    </ul>\\r\\n\\r\\n    <ul class=\\\"navbar-nav ml-auto nav-flex-icons\\\" *ngIf=\\\"rol === 1\\\">\\r\\n      <!-- <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/normas']\\\">Normas</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/tipo-servicio']\\\">Tipo de Servicios</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/costos']\\\">Costos</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/cotizacion']\\\">Cotizacion</a>\\r\\n      </li>\\r\\n     -->\\r\\n      <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/empresas']\\\">Empresas</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/prospectos']\\\">Prospectos</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/servicios']\\\">Servicios</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/usuarios']\\\">Usuarios</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" (click)=\\\"logOut()\\\">Salir</a>\\r\\n      </li>\\r\\n    </ul>\\r\\n\\r\\n    <ul class=\\\"navbar-nav ml-auto nav-flex-icons\\\" *ngIf=\\\"rol === 3\\\">\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/normas']\\\">Normas</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/tipo-servicio']\\\">Tipo de Servicios</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/costos']\\\">Costos</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/cotizacion']\\\">Cotizacion</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/empresas']\\\">Empresas</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/prospectos']\\\">Prospectos</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/servicios']\\\">Servicios</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/usuarios']\\\">Usuarios</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/movimientos']\\\">Movimientos</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" (click)=\\\"logOut()\\\">Salir</a>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n</nav>\\r\\n\"","export default \"<div class=\\\"row\\\">\\n    <form class=\\\"col-md-12\\\" #formAddEmpresa=\\\"ngForm\\\">\\n\\n        <h3 class=\\\"colorVerde col-md-12\\\" style=\\\"text-align: center;\\\">Agregar Norma</h3>\\n\\n        <div class=\\\"divider\\\"></div>\\n\\n        <!-- Loader -->\\n        <div style=\\\"padding: 5px 0px;\\\">\\n            <mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"preloaderActivo\\\"></mat-progress-bar>\\n        </div>\\n\\n        <div mat-dialog-content class=\\\"col-sm-12\\\">\\n            <div class=\\\"form-group col-sm-12\\\">\\n                <label for=\\\"codificacion\\\">Codificacion:</label>\\n                <input type=\\\"text\\\" #codificacion=\\\"ngModel\\\" [(ngModel)]=\\\"norma.codificacion\\\" name=\\\"codificacion\\\" id=\\\"codificacion\\\" required oninput=\\\"this.value = this.value.toUpperCase()\\\" class=\\\"form-control\\\">\\n            </div>\\n        </div>\\n\\n        <div mat-dialog-actions class=\\\"col-sm-12\\\">\\n            <div class=\\\"col-sm-12\\\" style=\\\"margin-bottom: 10px;\\\">\\n                <button class=\\\"btn botonCafe waves-effect\\\" (click)=\\\"cerrarModal()\\\" style=\\\"width: 100%;\\\">Cancelar</button>\\n            </div>\\n\\n            <div class=\\\"col-sm-12\\\">\\n                <input class=\\\"btn botonVerde\\\" type=\\\"submit\\\" style=\\\"width: 100%;\\\" value=\\\"Guardar\\\" [disabled]=\\\"!formAddEmpresa.form.valid || desactivado\\\" (click)=\\\"guardar()\\\">\\n            </div>\\n        </div>\\n\\n    </form>\\n</div>\"","export default \"<div class=\\\"row\\\">\\r\\n    <form class=\\\"col-md-12\\\" #formAddEmpresa=\\\"ngForm\\\">\\r\\n\\r\\n        <h3 class=\\\"colorVerde col-md-12\\\" style=\\\"text-align: center;\\\">Editar Norma</h3>\\r\\n\\r\\n        <div class=\\\"divider\\\"></div>\\r\\n\\r\\n        <!-- Loader -->\\r\\n        <div style=\\\"padding: 5px 0px;\\\">\\r\\n            <mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"preloaderActivo\\\"></mat-progress-bar>\\r\\n        </div>\\r\\n\\r\\n        <div mat-dialog-content class=\\\"col-sm-12\\\">\\r\\n            <div class=\\\"form-group col-sm-12\\\">\\r\\n                <label for=\\\"codificacion\\\">Codificacion:</label>\\r\\n                <input type=\\\"text\\\" #codificacion=\\\"ngModel\\\" [(ngModel)]=\\\"norma.codificacion\\\" name=\\\"codificacion\\\" id=\\\"codificacion\\\" required oninput=\\\"this.value = this.value.toUpperCase()\\\" class=\\\"form-control\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div mat-dialog-actions class=\\\"col-sm-12\\\">\\r\\n            <div class=\\\"col-sm-12\\\" style=\\\"margin-bottom: 10px;\\\">\\r\\n                <button class=\\\"btn botonCafe waves-effect\\\" (click)=\\\"cerrarModal()\\\" style=\\\"width: 100%;\\\">Cancelar</button>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n                <input class=\\\"btn botonVerde\\\" type=\\\"submit\\\" style=\\\"width: 100%;\\\" value=\\\"Guardar\\\" [disabled]=\\\"!formAddEmpresa.form.valid || desactivado\\\" (click)=\\\"guardar()\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </form>\\r\\n</div>\"","export default \"<div class=\\\"container card mt-5\\\">\\r\\n    <div>\\r\\n\\r\\n        <!-- Loader -->\\r\\n        <div style=\\\"padding: 5px 0px;\\\">\\r\\n            <mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"preloaderActivo\\\"></mat-progress-bar>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"w-100\\\">\\r\\n            <div class=\\\"text-center mt-3\\\">\\r\\n                <h3><strong class=\\\"colorAzul\\\">NORMAS</strong></h3>\\r\\n            </div>\\r\\n\\r\\n\\r\\n\\r\\n            <div class=\\\"d-flex justify-content-between\\\">\\r\\n                <div class=\\\"d-flex\\\">\\r\\n                    <button class=\\\"btn\\\" (click)=\\\"conectarServidor()\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Recargar Normas\\\" [disabled]=\\\"desactivado\\\">\\r\\n                        <i class=\\\"material-icons\\\">replay</i>\\r\\n                    </button>\\r\\n                    <mat-form-field>\\r\\n                        <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n\\r\\n                <div>\\r\\n                    <button class=\\\"btn botonAzul white-text\\\" (click)=\\\"nuevo()\\\" [disabled]=\\\"desactivado\\\"> Nueva Norma</button>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div>\\r\\n\\r\\n            <table mat-table [dataSource]=\\\"dataSource\\\">\\r\\n\\r\\n                <ng-container matColumnDef=\\\"codificacion\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"botonAzul text-white text-center\\\" style=\\\"font-size: 20px;\\\"> Nombre </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let row\\\"> {{row.codificacion}} </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <ng-container matColumnDef=\\\"acciones\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"botonAzul text-white text-center\\\" style=\\\"font-size: 20px;\\\"> Acciones </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let row\\\">\\r\\n\\r\\n                        <i class=\\\"material-icons colorAzul\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Editar Norma\\\" (click)=\\\"editar(row)\\\">edit</i>\\r\\n                        \\r\\n                        <i class=\\\"material-icons colorRojo\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Borrar Norma\\\" (click)=\\\"delete(row)\\\">delete</i>\\r\\n\\r\\n                    </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n                <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\r\\n                </tr>\\r\\n\\r\\n            </table>\\r\\n\\r\\n            <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\r\\n        </div>\\r\\n    </div>\"","export default \"<div  class=\\\"row\\\">\\r\\n    <form class=\\\"col-md-12\\\"  #formAddEmpresa=\\\"ngForm\\\">\\r\\n        \\r\\n            <h3  class=\\\"colorVerde col-md-12\\\" style=\\\"text-align: center;\\\">Agregar Prospecto</h3>\\r\\n\\r\\n            <div class=\\\"divider\\\"></div>\\r\\n\\r\\n            <!-- Loader -->\\r\\n            <div  style=\\\"padding: 5px 0px;\\\">\\r\\n                <mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"preloaderActivo\\\"></mat-progress-bar>\\r\\n            </div>\\r\\n\\r\\n            <div mat-dialog-content class=\\\"col-sm-12\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"form-group col-sm-12\\\">\\r\\n                        <mat-form-field>\\r\\n                            <mat-label>Empresa</mat-label>\\r\\n                            <mat-select [(ngModel)]=\\\"prospecto.idEmpresa\\\" name=\\\"empresa\\\">\\r\\n                              <mat-option *ngFor=\\\"let empresa of empresas\\\" [value]=\\\"empresa.id\\\">\\r\\n                                {{empresa.nombre}}\\r\\n                              </mat-option>\\r\\n                            </mat-select>\\r\\n                          </mat-form-field>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group col-sm-12\\\">\\r\\n                        <label for=\\\"nombre\\\">Nombre:</label>\\r\\n                        <input type=\\\"text\\\" #nombre=\\\"ngModel\\\" [(ngModel)]=\\\"prospecto.nombre\\\" name=\\\"nombre\\\" id=\\\"nombre\\\" required oninput=\\\"this.value = this.value.toUpperCase()\\\" class=\\\"form-control\\\">\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group col-sm-12\\\">\\r\\n                        <label for=\\\"telefono\\\">Telefono:</label>\\r\\n                        <input type=\\\"text\\\" #telefono=\\\"ngModel\\\" [(ngModel)]=\\\"prospecto.telefono\\\" name=\\\"telefono\\\" id=\\\"telefono\\\" required  class=\\\"form-control\\\">\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group col-sm-12\\\">\\r\\n                        <label for=\\\"correo\\\">Correo:</label>\\r\\n                        <input type=\\\"email\\\" #correo=\\\"ngModel\\\" [(ngModel)]=\\\"prospecto.correo\\\" name=\\\"correo\\\" id=\\\"correo\\\" required  class=\\\"form-control\\\">\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group col-sm-12\\\">\\r\\n                        <label for=\\\"direccion\\\">Direccion:</label>\\r\\n                        <input type=\\\"text\\\" #direccion=\\\"ngModel\\\" [(ngModel)]=\\\"prospecto.direccion\\\" name=\\\"direccion\\\" id=\\\"direccion\\\" required oninput=\\\"this.value = this.value.toUpperCase()\\\" class=\\\"form-control\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>  \\r\\n            \\r\\n            <div mat-dialog-actions class=\\\"col-sm-12\\\">\\r\\n                <div class=\\\"col-sm-12\\\" style=\\\"margin-bottom: 10px;\\\">\\r\\n                    <button class=\\\"btn botonCafe waves-effect\\\" (click)=\\\"cerrarModal()\\\" style=\\\"width: 100%;\\\">Cancelar</button>\\r\\n                </div>\\r\\n    \\r\\n                <div class=\\\"col-sm-12\\\">\\r\\n                    <input class=\\\"btn botonVerde\\\" type=\\\"submit\\\" style=\\\"width: 100%;\\\" value=\\\"Guardar\\\" [disabled]=\\\"!formAddEmpresa.form.valid || desactivado\\\" (click)=\\\"guardar()\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n    </form>\\r\\n</div >\\r\\n\\r\\n\"","export default \"<div  class=\\\"row\\\">\\r\\n    <form class=\\\"col-md-12\\\"  #formAddEmpresa=\\\"ngForm\\\">\\r\\n        \\r\\n            <h3  class=\\\"colorVerde col-md-12\\\" style=\\\"text-align: center;\\\">Editar Prospecto</h3>\\r\\n\\r\\n            <div class=\\\"divider\\\"></div>\\r\\n\\r\\n            <!-- Loader -->\\r\\n            <div  style=\\\"padding: 5px 0px;\\\">\\r\\n                <mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"preloaderActivo\\\"></mat-progress-bar>\\r\\n            </div>\\r\\n\\r\\n            <div mat-dialog-content class=\\\"col-sm-12\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"form-group col-sm-12\\\">\\r\\n                        <mat-form-field>\\r\\n                            <mat-label>Empresa</mat-label>\\r\\n                            <mat-select [(ngModel)]=\\\"prospecto.idEmpresa\\\" name=\\\"empresa\\\">\\r\\n                              <mat-option *ngFor=\\\"let empresa of empresas\\\" [value]=\\\"empresa.id\\\">\\r\\n                                {{empresa.nombre}}\\r\\n                              </mat-option>\\r\\n                            </mat-select>\\r\\n                          </mat-form-field>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group col-sm-12\\\">\\r\\n                        <label for=\\\"nombre\\\">Nombre:</label>\\r\\n                        <input type=\\\"text\\\" #nombre=\\\"ngModel\\\" [(ngModel)]=\\\"prospecto.nombre\\\" name=\\\"nombre\\\" id=\\\"nombre\\\" required oninput=\\\"this.value = this.value.toUpperCase()\\\" class=\\\"form-control\\\">\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group col-sm-12\\\">\\r\\n                        <label for=\\\"telefono\\\">Telefono:</label>\\r\\n                        <input type=\\\"text\\\" #telefono=\\\"ngModel\\\" [(ngModel)]=\\\"prospecto.telefono\\\" name=\\\"telefono\\\" id=\\\"telefono\\\" required  class=\\\"form-control\\\">\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group col-sm-12\\\">\\r\\n                        <label for=\\\"correo\\\">Correo:</label>\\r\\n                        <input type=\\\"email\\\" #correo=\\\"ngModel\\\" [(ngModel)]=\\\"prospecto.correo\\\" name=\\\"correo\\\" id=\\\"correo\\\" required  class=\\\"form-control\\\">\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group col-sm-12\\\">\\r\\n                        <label for=\\\"direccion\\\">Direccion:</label>\\r\\n                        <input type=\\\"text\\\" #direccion=\\\"ngModel\\\" [(ngModel)]=\\\"prospecto.direccion\\\" name=\\\"direccion\\\" id=\\\"direccion\\\" required oninput=\\\"this.value = this.value.toUpperCase()\\\" class=\\\"form-control\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>  \\r\\n            \\r\\n            <div mat-dialog-actions class=\\\"col-sm-12\\\">\\r\\n                <div class=\\\"col-sm-12\\\" style=\\\"margin-bottom: 10px;\\\">\\r\\n                    <button class=\\\"btn botonCafe waves-effect\\\" (click)=\\\"cerrarModal()\\\" style=\\\"width: 100%;\\\">Cancelar</button>\\r\\n                </div>\\r\\n    \\r\\n                <div class=\\\"col-sm-12\\\">\\r\\n                    <input class=\\\"btn botonVerde\\\" type=\\\"submit\\\" style=\\\"width: 100%;\\\" value=\\\"Guardar\\\" [disabled]=\\\"!formAddEmpresa.form.valid || desactivado\\\" (click)=\\\"guardar()\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n    </form>\\r\\n</div >\\r\\n\\r\\n\"","export default \"<div class=\\\"row\\\">\\r\\n    <form class=\\\"col-md-12\\\" #formAddEmpresa=\\\"ngForm\\\">\\r\\n\\r\\n        <h3 class=\\\"colorVerde col-md-12\\\" style=\\\"text-align: center;\\\">Validar Prospecto</h3>\\r\\n\\r\\n        <div class=\\\"divider\\\"></div>\\r\\n\\r\\n        <!-- Loader -->\\r\\n        <div style=\\\"padding: 5px 0px;\\\">\\r\\n            <mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"preloaderActivo\\\"></mat-progress-bar>\\r\\n        </div>\\r\\n\\r\\n        <div mat-dialog-content class=\\\"col-sm-12\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n\\r\\n                <div class=\\\"form-group col-sm-12\\\">\\r\\n                    <mat-checkbox [(ngModel)]=\\\"prospecto.contratos\\\" name=\\\"contrato\\\">Contrato Original UVA u OCP</mat-checkbox>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group col-sm-12\\\">\\r\\n                    <mat-checkbox [(ngModel)]=\\\"prospecto.acta\\\" name=\\\"acta\\\">Acta Constitutiva</mat-checkbox>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-sm-12\\\">\\r\\n                    <mat-checkbox [(ngModel)]=\\\"prospecto.rfc\\\" name=\\\"rfc\\\">RFC</mat-checkbox>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-sm-12\\\">\\r\\n                    <mat-checkbox [(ngModel)]=\\\"prospecto.carta\\\" name=\\\"carta\\\">Carta Poder</mat-checkbox>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div mat-dialog-actions class=\\\"col-sm-12\\\">\\r\\n            <div class=\\\"col-sm-12\\\" style=\\\"margin-bottom: 10px;\\\">\\r\\n                <button class=\\\"btn botonCafe waves-effect\\\" (click)=\\\"cerrarModal()\\\" style=\\\"width: 100%;\\\">Cancelar</button>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n                <input class=\\\"btn botonVerde\\\" type=\\\"submit\\\" style=\\\"width: 100%;\\\" value=\\\"Guardar\\\" [disabled]=\\\"!formAddEmpresa.form.valid || desactivado\\\" (click)=\\\"guardar()\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </form>\\r\\n</div>\"","export default \"<div class=\\\"container card mt-5\\\">\\r\\n    <div>\\r\\n\\r\\n        <!-- Loader -->\\r\\n        <div style=\\\"padding: 5px 0px;\\\">\\r\\n            <mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"preloaderActivo\\\"></mat-progress-bar>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"w-100\\\">\\r\\n            <div class=\\\"text-center mt-3\\\">\\r\\n                <h3><strong class=\\\"colorAzul\\\">PROSPECTOS</strong></h3>\\r\\n            </div>\\r\\n\\r\\n\\r\\n\\r\\n            <div class=\\\"d-flex justify-content-between\\\">\\r\\n                <div class=\\\"d-flex\\\">\\r\\n                    <button class=\\\"btn\\\" (click)=\\\"conectarServidor()\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Recargar Empresas\\\" [disabled]=\\\"desactivado\\\">\\r\\n                        <i class=\\\"material-icons\\\">replay</i>\\r\\n                    </button>\\r\\n                    <mat-form-field>\\r\\n                        <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n\\r\\n                <div>\\r\\n                    <button class=\\\"btn botonAzul white-text\\\" (click)=\\\"addProspecto()\\\" [disabled]=\\\"desactivado\\\"> Nuevo Prospecto</button>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div>\\r\\n\\r\\n            <table mat-table [dataSource]=\\\"dataSource\\\">\\r\\n\\r\\n                <ng-container matColumnDef=\\\"empresa\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"botonAzul text-white text-center\\\" style=\\\"font-size: 20px;\\\"> Empresa </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let row\\\"> {{row.empresa}} </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <ng-container matColumnDef=\\\"nombre\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"botonAzul text-white text-center\\\" style=\\\"font-size: 20px;\\\"> Nombre </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let row\\\"> {{row.nombre}} </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <ng-container matColumnDef=\\\"telefono\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"botonAzul text-white text-center\\\" style=\\\"font-size: 20px;\\\"> Telefono </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let row\\\"> {{row.telefono}} </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <ng-container matColumnDef=\\\"fecha\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"botonAzul text-white text-center\\\" style=\\\"font-size: 20px;\\\"> Ultima Fecha </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let row\\\"> {{row.fecha}} </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <ng-container matColumnDef=\\\"acciones\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"botonAzul text-white text-center\\\" style=\\\"font-size: 20px;\\\"> Acciones </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let row\\\">\\r\\n\\r\\n                            \\r\\n                        <i class=\\\"material-icons colorVerde\\\" data-toggle=\\\"tooltip\\\"   data-placement=\\\"top\\\" title=\\\"Validado\\\" *ngIf=\\\"row.acta === 1 && row.carta === 1 && row.contratos === 1 && row.rfc === 1; else noValidado\\\" (click)=\\\"validado()\\\">remove_red_eye</i>\\r\\n\\r\\n                        <ng-template #noValidado>\\r\\n                            <i class=\\\"material-icons colorAzul\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Validar\\\" (click)=\\\"validar(row)\\\">remove_red_eye</i>\\r\\n                        </ng-template>\\r\\n\\r\\n                        <i class=\\\"material-icons colorAzul\\\" data-toggle=\\\"tooltip\\\"   data-placement=\\\"top\\\" title=\\\"Editar Prospecto\\\" (click)=\\\"editar(row)\\\">edit</i>\\r\\n\\r\\n                        <i class=\\\"material-icons colorRojo\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Borrar Prospecto\\\" (click)=\\\"delete(row)\\\">delete</i>\\r\\n                    </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n                <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\r\\n                </tr>\\r\\n\\r\\n            </table>\\r\\n\\r\\n            <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\r\\n        </div>\\r\\n    </div>\"","export default \"<div class=\\\"row\\\">\\r\\n    <form class=\\\"col-md-12\\\" #formAddEmpresa=\\\"ngForm\\\">\\r\\n\\r\\n        <h3 class=\\\"colorVerde col-md-12\\\" style=\\\"text-align: center;\\\">Agregar Servicio</h3>\\r\\n\\r\\n        <div class=\\\"divider\\\"></div>\\r\\n\\r\\n        <!-- Loader -->\\r\\n        <div style=\\\"padding: 5px 0px;\\\">\\r\\n            <mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"preloaderActivo\\\"></mat-progress-bar>\\r\\n        </div>\\r\\n\\r\\n        <div mat-dialog-content class=\\\"col-sm-12\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"form-group col-sm-12\\\">\\r\\n                    <mat-form-field>\\r\\n                        <mat-label>Prospecto</mat-label>\\r\\n                        <mat-select [(ngModel)]=\\\"servicio.idProspecto\\\" name=\\\"idProspecto\\\">\\r\\n                            <mat-option *ngFor=\\\"let prospecto of prospectos\\\" [value]=\\\"prospecto.id\\\">\\r\\n                                {{prospecto.nombre}}\\r\\n                            </mat-option>\\r\\n                        </mat-select>\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group col-sm-12\\\">\\r\\n                    <mat-form-field>\\r\\n                        <mat-label>Norma</mat-label>\\r\\n                        <mat-select [(ngModel)]=\\\"servicio.idNorma\\\" name=\\\"idNorma\\\">\\r\\n                            <mat-option *ngFor=\\\"let norma of normas\\\" [value]=\\\"norma.id\\\">\\r\\n                                {{norma.codificacion}}\\r\\n                            </mat-option>\\r\\n                        </mat-select>\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n\\r\\n\\r\\n                <div class=\\\"form-group col-sm-12\\\">\\r\\n                    <mat-form-field>\\r\\n                        <mat-label>Tipo Servicio</mat-label>\\r\\n                        <mat-select [(ngModel)]=\\\"servicio.tipoServicio\\\" name=\\\"idNorma\\\">\\r\\n                            <mat-option [value]=\\\"1\\\">\\r\\n                                Constancia\\r\\n                            </mat-option>\\r\\n                            <mat-option [value]=\\\"2\\\">\\r\\n                                Dictamen\\r\\n                            </mat-option>\\r\\n                        </mat-select>\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div mat-dialog-actions class=\\\"col-sm-12\\\">\\r\\n            <div class=\\\"col-sm-12\\\" style=\\\"margin-bottom: 10px;\\\">\\r\\n                <button class=\\\"btn botonCafe waves-effect\\\" (click)=\\\"cerrarModal()\\\" style=\\\"width: 100%;\\\">Cancelar</button>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n                <input class=\\\"btn botonVerde\\\" type=\\\"submit\\\" style=\\\"width: 100%;\\\" value=\\\"Guardar\\\" [disabled]=\\\"!formAddEmpresa.form.valid || desactivado\\\" (click)=\\\"guardar()\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </form>\\r\\n</div>\"","export default \"<div class=\\\"row\\\">\\r\\n    <form class=\\\"col-md-12\\\" #formAddEmpresa=\\\"ngForm\\\">\\r\\n\\r\\n        <h3 class=\\\"colorVerde col-md-12\\\" style=\\\"text-align: center;\\\">Estatus Dos</h3>\\r\\n\\r\\n        <div class=\\\"divider\\\"></div>\\r\\n\\r\\n        <!-- Loader -->\\r\\n        <div style=\\\"padding: 5px 0px;\\\">\\r\\n            <mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"preloaderActivo\\\"></mat-progress-bar>\\r\\n        </div>\\r\\n\\r\\n        <div mat-dialog-content class=\\\"col-sm-12\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n\\r\\n                <div class=\\\"form-group col-sm-12\\\">\\r\\n                    <mat-checkbox [(ngModel)]=\\\"servicio.ingresado\\\" name=\\\"contrato\\\">Servicio Ingresado</mat-checkbox>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group col-sm-12\\\">\\r\\n                    <label for=\\\"nombre\\\">Numero de Referencia:</label>\\r\\n                    <input type=\\\"text\\\" #nombre=\\\"ngModel\\\" [(ngModel)]=\\\"servicio.referencia\\\" name=\\\"nombre\\\" id=\\\"nombre\\\" required oninput=\\\"this.value = this.value.toUpperCase()\\\" class=\\\"form-control\\\">\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group col-sm-12\\\">\\r\\n                    <mat-checkbox [(ngModel)]=\\\"servicio.facturado\\\" name=\\\"contrato\\\">Facturado</mat-checkbox>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div mat-dialog-actions class=\\\"col-sm-12\\\">\\r\\n            <div class=\\\"col-sm-12\\\" style=\\\"margin-bottom: 10px;\\\">\\r\\n                <button class=\\\"btn botonCafe waves-effect\\\" (click)=\\\"cerrarModal()\\\" style=\\\"width: 100%;\\\">Cancelar</button>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n                <input class=\\\"btn botonVerde\\\" type=\\\"submit\\\" style=\\\"width: 100%;\\\" value=\\\"Guardar\\\" [disabled]=\\\"!formAddEmpresa.form.valid || desactivado\\\" (click)=\\\"guardar()\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </form>\\r\\n</div>\"","export default \"<div class=\\\"row\\\">\\r\\n    <form class=\\\"col-md-12\\\" #formAddEmpresa=\\\"ngForm\\\">\\r\\n\\r\\n        <h3 class=\\\"colorVerde col-md-12\\\" style=\\\"text-align: center;\\\">Estatus Tres</h3>\\r\\n\\r\\n        <div class=\\\"divider\\\"></div>\\r\\n\\r\\n        <!-- Loader -->\\r\\n        <div style=\\\"padding: 5px 0px;\\\">\\r\\n            <mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"preloaderActivo\\\"></mat-progress-bar>\\r\\n        </div>\\r\\n\\r\\n        <div mat-dialog-content class=\\\"col-sm-12\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n\\r\\n                <div class=\\\"form-group col-sm-12\\\">\\r\\n                    <mat-checkbox [(ngModel)]=\\\"servicio.comunicado\\\" name=\\\"contrato\\\">Se emitio el Comunicado</mat-checkbox>\\r\\n                </div>\\r\\n\\r\\n\\r\\n                <div class=\\\"form-group col-sm-12\\\">\\r\\n                    <mat-checkbox [(ngModel)]=\\\"servicio.certificado\\\" name=\\\"contrato\\\">Se emitio el Certificado</mat-checkbox>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div mat-dialog-actions class=\\\"col-sm-12\\\">\\r\\n            <div class=\\\"col-sm-12\\\" style=\\\"margin-bottom: 10px;\\\">\\r\\n                <button class=\\\"btn botonCafe waves-effect\\\" (click)=\\\"cerrarModal()\\\" style=\\\"width: 100%;\\\">Cancelar</button>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n                <input class=\\\"btn botonVerde\\\" type=\\\"submit\\\" style=\\\"width: 100%;\\\" value=\\\"Guardar\\\" [disabled]=\\\"!formAddEmpresa.form.valid || desactivado\\\" (click)=\\\"guardar()\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </form>\\r\\n</div>\"","export default \"<div class=\\\"row\\\">\\r\\n    <form class=\\\"col-md-12\\\" #formAddEmpresa=\\\"ngForm\\\">\\r\\n\\r\\n        <h3 class=\\\"colorVerde col-md-12\\\" style=\\\"text-align: center;\\\">Estatus Uno</h3>\\r\\n\\r\\n        <div class=\\\"divider\\\"></div>\\r\\n\\r\\n        <!-- Loader -->\\r\\n        <div style=\\\"padding: 5px 0px;\\\">\\r\\n            <mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"preloaderActivo\\\"></mat-progress-bar>\\r\\n        </div>\\r\\n\\r\\n        <div mat-dialog-content class=\\\"col-sm-12\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n\\r\\n                <div class=\\\"form-group col-sm-12\\\">\\r\\n                    <mat-checkbox [(ngModel)]=\\\"servicio.contratos\\\" name=\\\"contrato\\\">Contratos y Convenios</mat-checkbox>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group col-sm-12\\\">\\r\\n                    <mat-form-field>\\r\\n                        <mat-label>Atendio</mat-label>\\r\\n                        <mat-select [(ngModel)]=\\\"servicio.idUsuario\\\" name=\\\"empresa\\\">\\r\\n                          <mat-option [value]=\\\"1\\\">\\r\\n                            Liliana Vargas\\r\\n                          </mat-option>\\r\\n\\r\\n                          <mat-option [value]=\\\"2\\\">\\r\\n                            Monica Gonzalez\\r\\n                          </mat-option>\\r\\n\\r\\n                          <mat-option [value]=\\\"3\\\">\\r\\n                            Seguimiento\\r\\n                          </mat-option>\\r\\n                        </mat-select>\\r\\n                      </mat-form-field>\\r\\n                </div>\\r\\n\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div mat-dialog-actions class=\\\"col-sm-12\\\">\\r\\n            <div class=\\\"col-sm-12\\\" style=\\\"margin-bottom: 10px;\\\">\\r\\n                <button class=\\\"btn botonCafe waves-effect\\\" (click)=\\\"cerrarModal()\\\" style=\\\"width: 100%;\\\">Cancelar</button>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n                <input class=\\\"btn botonVerde\\\" type=\\\"submit\\\" style=\\\"width: 100%;\\\" value=\\\"Guardar\\\" [disabled]=\\\"!formAddEmpresa.form.valid || desactivado\\\" (click)=\\\"guardar()\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </form>\\r\\n</div>\"","export default \"<div class=\\\"container card mt-5\\\">\\r\\n    <div>\\r\\n\\r\\n        <!-- Loader -->\\r\\n        <div style=\\\"padding: 5px 0px;\\\">\\r\\n            <mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"preloaderActivo\\\"></mat-progress-bar>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"w-100\\\">\\r\\n            <div class=\\\"text-center mt-3\\\">\\r\\n                <h3><strong class=\\\"colorAzul\\\">Servicios</strong></h3>\\r\\n            </div>\\r\\n\\r\\n\\r\\n\\r\\n            <div class=\\\"d-flex justify-content-between\\\">\\r\\n                <div class=\\\"d-flex\\\">\\r\\n                    <button class=\\\"btn\\\" (click)=\\\"conectarServidor()\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Recargar Servicios\\\" [disabled]=\\\"desactivado\\\">\\r\\n                        <i class=\\\"material-icons\\\">replay</i>\\r\\n                    </button>\\r\\n                    <mat-form-field>\\r\\n                        <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n\\r\\n                <div>\\r\\n                    <button class=\\\"btn botonAzul white-text\\\" (click)=\\\"nuevo()\\\" [disabled]=\\\"desactivado\\\"> Nuevo Servicio</button>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div>\\r\\n\\r\\n            <table mat-table [dataSource]=\\\"dataSource\\\">\\r\\n\\r\\n                <ng-container matColumnDef=\\\"nombre\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"botonAzul text-white text-center\\\" style=\\\"font-size: 20px;\\\"> Nombre </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let row\\\"> {{row.nombre}} </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <ng-container matColumnDef=\\\"fecha\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"botonAzul text-white text-center\\\" style=\\\"font-size: 20px;\\\"> Fecha </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let row\\\"> {{row.fecha}} </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <ng-container matColumnDef=\\\"codificacion\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"botonAzul text-white text-center\\\" style=\\\"font-size: 20px;\\\"> Codificacion </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let row\\\"> {{row.codificacion}} </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <ng-container matColumnDef=\\\"servicio\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"botonAzul text-white text-center\\\" style=\\\"font-size: 20px;\\\"> Servicio </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let row\\\">\\r\\n                        <p *ngIf=\\\"row.tipoServicio == 1; else noFinalizado\\\">Constancia</p>\\r\\n                        <ng-template #noFinalizado>Dictamen</ng-template>\\r\\n                    </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <ng-container matColumnDef=\\\"estatus\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"botonAzul text-white text-center\\\" style=\\\"font-size: 20px;\\\"> Estatus </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let row\\\">\\r\\n                        <p *ngIf=\\\"row.status === 4; else noFinalizado\\\" [ngClass]=\\\"{colorVerde: row.status === 4}\\\">Finalizado</p>\\r\\n                        <ng-template #noFinalizado >\\r\\n                            <p [ngClass]=\\\"{colorRojo: row.status !== 4}\\\">En proceso</p>\\r\\n                        </ng-template>\\r\\n                    </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <ng-container matColumnDef=\\\"acciones\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"botonAzul text-white text-center\\\" style=\\\"font-size: 20px;\\\"> Acciones </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let row\\\">\\r\\n\\r\\n                        <i *ngIf=\\\"row.status == 1\\\" class=\\\"material-icons colorVerde\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Fase 1\\\" (click)=\\\"validarUno(row)\\\">looks_one</i>\\r\\n                        <i *ngIf=\\\"row.status == 2\\\" class=\\\"material-icons colorAmarillo\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Fase 2\\\" (click)=\\\"validarDos(row)\\\">looks_two</i>\\r\\n                        <i *ngIf=\\\"row.status == 3\\\" class=\\\"material-icons colorAzul\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Fase Final\\\" (click)=\\\"validarTres(row)\\\">looks_3</i>\\r\\n                        <!-- <i class=\\\"material-icons colorAzul\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Editar Empresa\\\" (click)=\\\"editEmpresa(row)\\\" (click)=\\\"editEmpresa(row)\\\">edit</i>\\r\\n                        <i class=\\\"material-icons colorRojo\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Borrar Empresa\\\" (click)=\\\"deleteEmpresa(row.id)\\\">delete</i> -->\\r\\n\\r\\n                    </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n                <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\r\\n                </tr>\\r\\n\\r\\n            </table>\\r\\n\\r\\n            <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\r\\n        </div>\\r\\n    </div>\\r\\n\"","export default \"<div class=\\\"row\\\">\\n    <form class=\\\"col-md-12\\\" #formAddEmpresa=\\\"ngForm\\\">\\n\\n        <h3 class=\\\"colorVerde col-md-12\\\" style=\\\"text-align: center;\\\">Agregar Servicio</h3>\\n\\n        <div class=\\\"divider\\\"></div>\\n\\n        <!-- Loader -->\\n        <div style=\\\"padding: 5px 0px;\\\">\\n            <mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"preloaderActivo\\\"></mat-progress-bar>\\n        </div>\\n\\n        <div mat-dialog-content class=\\\"col-sm-12\\\">\\n            <div class=\\\"form-group col-sm-12\\\">\\n                <label for=\\\"nombre\\\">Nombre:</label>\\n                <input type=\\\"text\\\" #nombre=\\\"ngModel\\\" [(ngModel)]=\\\"tipoServicio.nombre\\\" name=\\\"nombre\\\" id=\\\"nombre\\\" required oninput=\\\"this.value = this.value.toUpperCase()\\\" class=\\\"form-control\\\">\\n            </div>\\n        </div>\\n\\n        <div mat-dialog-actions class=\\\"col-sm-12\\\">\\n            <div class=\\\"col-sm-12\\\" style=\\\"margin-bottom: 10px;\\\">\\n                <button class=\\\"btn botonCafe waves-effect\\\" (click)=\\\"cerrarModal()\\\" style=\\\"width: 100%;\\\">Cancelar</button>\\n            </div>\\n\\n            <div class=\\\"col-sm-12\\\">\\n                <input class=\\\"btn botonVerde\\\" type=\\\"submit\\\" style=\\\"width: 100%;\\\" value=\\\"Guardar\\\" [disabled]=\\\"!formAddEmpresa.form.valid || desactivado\\\" (click)=\\\"guardar()\\\">\\n            </div>\\n        </div>\\n\\n    </form>\\n</div>\"","export default \"<div class=\\\"row\\\">\\r\\n    <form class=\\\"col-md-12\\\" #formAddEmpresa=\\\"ngForm\\\">\\r\\n\\r\\n        <h3 class=\\\"colorVerde col-md-12\\\" style=\\\"text-align: center;\\\">Agregar Servicio</h3>\\r\\n\\r\\n        <div class=\\\"divider\\\"></div>\\r\\n\\r\\n        <!-- Loader -->\\r\\n        <div style=\\\"padding: 5px 0px;\\\">\\r\\n            <mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"preloaderActivo\\\"></mat-progress-bar>\\r\\n        </div>\\r\\n\\r\\n        <div mat-dialog-content class=\\\"col-sm-12\\\">\\r\\n            <div class=\\\"form-group col-sm-12\\\">\\r\\n                <label for=\\\"nombre\\\">Nombre:</label>\\r\\n                <input type=\\\"text\\\" #nombre=\\\"ngModel\\\" [(ngModel)]=\\\"tipoServicio.nombre\\\" name=\\\"nombre\\\" id=\\\"nombre\\\" required oninput=\\\"this.value = this.value.toUpperCase()\\\" class=\\\"form-control\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div mat-dialog-actions class=\\\"col-sm-12\\\">\\r\\n            <div class=\\\"col-sm-12\\\" style=\\\"margin-bottom: 10px;\\\">\\r\\n                <button class=\\\"btn botonCafe waves-effect\\\" (click)=\\\"cerrarModal()\\\" style=\\\"width: 100%;\\\">Cancelar</button>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n                <input class=\\\"btn botonVerde\\\" type=\\\"submit\\\" style=\\\"width: 100%;\\\" value=\\\"Guardar\\\" [disabled]=\\\"!formAddEmpresa.form.valid || desactivado\\\" (click)=\\\"guardar()\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </form>\\r\\n</div>\"","export default \"<div class=\\\"container card mt-5\\\">\\r\\n    <div>\\r\\n\\r\\n        <!-- Loader -->\\r\\n        <div style=\\\"padding: 5px 0px;\\\">\\r\\n            <mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"preloaderActivo\\\"></mat-progress-bar>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"w-100\\\">\\r\\n            <div class=\\\"text-center mt-3\\\">\\r\\n                <h3><strong class=\\\"colorAzul\\\">Tipos de Servicio</strong></h3>\\r\\n            </div>\\r\\n\\r\\n\\r\\n\\r\\n            <div class=\\\"d-flex justify-content-between\\\">\\r\\n                <div class=\\\"d-flex\\\">\\r\\n                    <button class=\\\"btn\\\" (click)=\\\"conectarServidor()\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Recargar Normas\\\" [disabled]=\\\"desactivado\\\">\\r\\n                        <i class=\\\"material-icons\\\">replay</i>\\r\\n                    </button>\\r\\n                    <mat-form-field>\\r\\n                        <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n\\r\\n                <div>\\r\\n                    <button class=\\\"btn botonAzul white-text\\\" (click)=\\\"nuevo()\\\" [disabled]=\\\"desactivado\\\"> Nuevo Servicio</button>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div>\\r\\n\\r\\n            <table mat-table [dataSource]=\\\"dataSource\\\">\\r\\n\\r\\n                <ng-container matColumnDef=\\\"nombre\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"botonAzul text-white text-center\\\" style=\\\"font-size: 20px;\\\"> Nombre </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let row\\\"> {{row.nombre}} </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <ng-container matColumnDef=\\\"acciones\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"botonAzul text-white text-center\\\" style=\\\"font-size: 20px;\\\"> Acciones </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let row\\\">\\r\\n\\r\\n                        <i class=\\\"material-icons colorAzul\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Editar Tipo de Servicio\\\" (click)=\\\"editar(row)\\\">edit</i>\\r\\n                        \\r\\n                        <i class=\\\"material-icons colorRojo\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Borrar Tipo de Servicio\\\" (click)=\\\"delete(row)\\\">delete</i> \\r\\n\\r\\n                    </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n                <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\r\\n                </tr>\\r\\n\\r\\n            </table>\\r\\n\\r\\n            <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\r\\n        </div>\\r\\n    </div>\"","export default \"<div class=\\\"row\\\">\\r\\n    <form class=\\\"col-md-12\\\"  #formAddEmpleado=\\\"ngForm\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\"><h3 class=\\\"colorAzul\\\" style=\\\"text-align: center;\\\">Agregar Usuario</h3></div>\\r\\n\\r\\n            <div class=\\\"divider\\\"></div>\\r\\n\\r\\n             <!-- Loader -->\\r\\n            <div class=\\\"col-md-12\\\" style=\\\"padding: 5px 0px;\\\">\\r\\n                <mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"preloaderActivo\\\"></mat-progress-bar>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-sm-12 col-md-6\\\">\\r\\n                <label for=\\\"nombre\\\">Nombre:</label>\\r\\n                <input type=\\\"text\\\" #userEmail=\\\"ngModel\\\" [(ngModel)]=\\\"usuario.nombre\\\" name=\\\"nombre\\\" required class=\\\"form-control\\\" id=\\\"nombre\\\"  oninput=\\\"this.value = this.value.toUpperCase()\\\">\\r\\n            </div>\\r\\n\\r\\n            \\r\\n            <div class=\\\"form-group col-sm-12 col-md-6\\\">\\r\\n                <label for=\\\"userEmail\\\">Username:</label>\\r\\n                <input type=\\\"text\\\" #userEmail=\\\"ngModel\\\" [(ngModel)]=\\\"usuario.username\\\" name=\\\"userEmail\\\" required class=\\\"form-control\\\" id=\\\"userEmail\\\"  oninput=\\\"this.value = this.value.toUpperCase()\\\">\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-sm-12 \\\">\\r\\n                <label for=\\\"select\\\">Rol:</label>\\r\\n                <select class=\\\"custom-select\\\" [(ngModel)]=\\\"usuario.rol\\\" required name=\\\"Id_Empleado\\\" id=\\\"select\\\">\\r\\n                    <option [value]=\\\"1\\\"> Usuario Normal </option>\\r\\n                    <option [value]=\\\"2\\\"> Usuario Administrador </option>\\r\\n                </select>\\r\\n            </div>\\r\\n            \\r\\n\\r\\n            <div class=\\\"col-sm-12\\\"></div>\\r\\n             \\r\\n            <div class=\\\"form-group col-sm-12 col-md-6\\\">\\r\\n                <label for=\\\"password\\\">Contraseña:</label>\\r\\n                <input type=\\\"password\\\" #password=\\\"ngModel\\\" [(ngModel)]=\\\"usuario.password\\\" name=\\\"password\\\" required class=\\\"form-control\\\" id=\\\"password\\\" >\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-sm-12 col-md-6\\\">\\r\\n                <label for=\\\"password2\\\">Confirmar Contraseña:</label>\\r\\n                <input type=\\\"password\\\"  name=\\\"password2\\\" required class=\\\"form-control\\\" id=\\\"password2\\\"  [(ngModel)]=\\\"confirm\\\" >\\r\\n            </div>\\r\\n\\r\\n            <h4 class=\\\"botonRojo white-text col-sm-12 text-center\\\"  *ngIf=\\\"confirm !== usuario.password && confirm.length > 0\\\"><strong>Las contraseñas no coinciden</strong></h4>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\" style=\\\"margin-bottom: 10px;\\\">\\r\\n                <button class=\\\"btn botonCafe waves-effect text-white\\\" style=\\\"width: 100%;\\\" (click)=\\\"cerrarModal()\\\" [disabled]=\\\"desactivado\\\">Cancelar</button>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n                <input class=\\\"btn botonVerde text-white\\\" type=\\\"submit\\\" style=\\\"width: 100%;\\\" value=\\\"Guardar\\\" [disabled]=\\\"!formAddEmpleado.form.valid || confirm !== usuario.password || desactivado\\\" (click)=\\\"agregarUsuario()\\\">\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </form>\\r\\n</div>\\r\\n    \"","export default \"<div class=\\\"row\\\">\\r\\n    <form class=\\\"col-sm-12\\\"  #formAddEmpleado=\\\"ngForm\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <h3 class=\\\"colorAzul col-sm-12\\\" style=\\\"text-align: center;\\\">Editar Contraseña</h3>\\r\\n\\r\\n            <div class=\\\"divider\\\"></div>\\r\\n\\r\\n            <!-- Loader -->\\r\\n            <div class=\\\"col-md-12\\\" style=\\\"padding: 5px 0px;\\\">\\r\\n                <mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"preloaderActivo\\\"></mat-progress-bar>\\r\\n            </div>\\r\\n\\r\\n            \\r\\n            <div class=\\\"form-group col-sm-12 col-md-6\\\">\\r\\n                <label for=\\\"password\\\">Nueva Contraseña:</label>\\r\\n                <input type=\\\"password\\\" #userPassword=\\\"ngModel\\\" [(ngModel)]=\\\"usuario.password\\\" name=\\\"password\\\" required class=\\\"form-control\\\" id=\\\"password\\\" >\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-sm-12 col-md-6\\\">\\r\\n                <label for=\\\"password2\\\">Confirmar Contraseña:</label>\\r\\n                <input type=\\\"password\\\" #userPassword2=\\\"ngModel\\\" [(ngModel)]=\\\"usuario.confirm\\\" name=\\\"password2\\\" required class=\\\"form-control\\\" id=\\\"password2\\\">\\r\\n            </div>\\r\\n             \\r\\n\\r\\n            <h4 class=\\\"botonRojo text-white col-sm-12 text-center\\\"  *ngIf=\\\"usuario.confirm !== usuario.password && usuario.confirm.length > 0\\\"><strong>Las contraseñas no coinciden</strong></h4>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\" style=\\\"margin-bottom: 10px;\\\">\\r\\n                <button class=\\\"btn botonCafe waves-effect\\\" style=\\\"width: 100%;\\\" (click)=\\\"cerrarModal()\\\" [disabled]=\\\"desactivado\\\">Cancelar</button>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n                <input class=\\\"btn waves-effect waves-light botonVerde\\\" type=\\\"submit\\\" style=\\\"width: 100%;\\\" value=\\\"Guardar\\\" [disabled]=\\\"!formAddEmpleado.form.valid || usuario.confirm !== usuario.password || desactivado\\\" (click)=\\\"editarPassword()\\\">\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </form>\\r\\n</div>\\r\\n    \\r\\n\"","export default \"<div class=\\\"row\\\">\\r\\n    <form class=\\\"col-md-12\\\"  #formAddEmpleado=\\\"ngForm\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\"><h3 class=\\\"colorAzul\\\" style=\\\"text-align: center;\\\">Editar Usuario</h3></div>\\r\\n\\r\\n            <div class=\\\"divider\\\"></div>\\r\\n\\r\\n             <!-- Loader -->\\r\\n            <div class=\\\"col-md-12\\\" style=\\\"padding: 5px 0px;\\\">\\r\\n                <mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"preloaderActivo\\\"></mat-progress-bar>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-sm-12 col-md-6\\\">\\r\\n                <label for=\\\"nombre\\\">Nombre:</label>\\r\\n                <input type=\\\"text\\\" #userEmail=\\\"ngModel\\\" [(ngModel)]=\\\"usuario.nombre\\\" name=\\\"nombre\\\" required class=\\\"form-control\\\" id=\\\"nombre\\\"  oninput=\\\"this.value = this.value.toUpperCase()\\\">\\r\\n            </div>\\r\\n\\r\\n            \\r\\n            <div class=\\\"form-group col-sm-12 col-md-6\\\">\\r\\n                <label for=\\\"userEmail\\\">Username:</label>\\r\\n                <input type=\\\"text\\\" #userEmail=\\\"ngModel\\\" [(ngModel)]=\\\"usuario.username\\\" name=\\\"userEmail\\\" required class=\\\"form-control\\\" id=\\\"userEmail\\\"  oninput=\\\"this.value = this.value.toUpperCase()\\\">\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-sm-12 \\\">\\r\\n                <label for=\\\"select\\\">Rol:</label>\\r\\n                <select class=\\\"custom-select\\\" [(ngModel)]=\\\"usuario.rol\\\" required name=\\\"Id_Empleado\\\" id=\\\"select\\\">\\r\\n                    <option [value]=\\\"1\\\"> Usuario Normal </option>\\r\\n                    <option [value]=\\\"2\\\"> Usuario Administrador </option>\\r\\n                </select>\\r\\n            </div>\\r\\n            \\r\\n\\r\\n            <div class=\\\"col-sm-12\\\"></div>\\r\\n             \\r\\n        \\r\\n            <div class=\\\"col-sm-12\\\" style=\\\"margin-bottom: 10px;\\\">\\r\\n                <button class=\\\"btn botonCafe waves-effect text-white\\\" style=\\\"width: 100%;\\\" (click)=\\\"cerrarModal()\\\" [disabled]=\\\"desactivado\\\">Cancelar</button>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n                <input class=\\\"btn botonVerde text-white\\\" type=\\\"submit\\\" style=\\\"width: 100%;\\\" value=\\\"Guardar\\\" [disabled]=\\\"!formAddEmpleado.form.valid || desactivado\\\" (click)=\\\"editar()\\\">\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </form>\\r\\n</div>\\r\\n    \"","export default \"<div class=\\\"container card mt-5\\\">\\r\\n    <div>\\r\\n         \\r\\n        <!-- Loader -->\\r\\n        <div  style=\\\"padding: 5px 0px;\\\">\\r\\n            <mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"preloaderActivo\\\"></mat-progress-bar>\\r\\n        </div>\\r\\n    \\r\\n        <div class=\\\"w-100\\\">\\r\\n            <div class=\\\"text-center mt-3\\\">\\r\\n                <h3><strong class=\\\"colorAzul\\\">USUARIOS</strong></h3>\\r\\n            </div>\\r\\n        \\r\\n            <div class=\\\"d-flex justify-content-between\\\">\\r\\n                <div class=\\\"d-flex\\\">\\r\\n                    <button class=\\\"btn\\\" (click)=\\\"conectarServidor()\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Recargar Usuario\\\" [disabled]=\\\"desactivado\\\">\\r\\n                        <i class=\\\"material-icons\\\">replay</i>\\r\\n                    </button>\\r\\n                    <mat-form-field>\\r\\n                        <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n\\r\\n                <div>\\r\\n                    <button class=\\\"btn botonAzul white-text\\\" (click)=\\\"addUsuario()\\\" [disabled]=\\\"desactivado\\\"> Nuevo Usuario</button> \\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    \\r\\n    \\r\\n    <div>\\r\\n        <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n    \\r\\n        <!-- ID Column -->\\r\\n        <ng-container matColumnDef=\\\"nombre\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef  class=\\\"botonAzul text-white text-center\\\" style=\\\"font-size: 20px;\\\" mat-sort-header>  Usuario </th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{ row.nombre }} </td>\\r\\n        </ng-container>\\r\\n    \\r\\n        <!-- Progress Column -->\\r\\n        <ng-container matColumnDef=\\\"username\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef  class=\\\"botonAzul text-white text-center\\\" style=\\\"font-size: 20px;\\\" mat-sort-header> Username </th>\\r\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{  row.username  }} </td>\\r\\n        </ng-container>\\r\\n    \\r\\n        <!-- Name Column -->\\r\\n        <ng-container matColumnDef=\\\"rol\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef class=\\\"botonAzul text-white text-center\\\" style=\\\"font-size: 20px;\\\" mat-sort-header> Rol </th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\">\\r\\n                <span *ngIf=\\\"row.rol == '1'; else rolAdmi\\\"> Usuario  </span>\\r\\n                <ng-template #rolAdmi>\\r\\n                    <span > Administrador  </span>\\r\\n                </ng-template>\\r\\n            </td>\\r\\n        </ng-container>\\r\\n    \\r\\n        <!-- Color Column -->\\r\\n        <ng-container matColumnDef=\\\"acciones\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef  class=\\\"botonAzul text-white text-center\\\" style=\\\"font-size: 20px;\\\"> Acciones </th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\" [style.color]=\\\"row.color\\\">\\r\\n                <i class=\\\"material-icons colorAzul\\\" (click)=\\\"editar(row)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Editar Usuario\\\">edit</i>\\r\\n\\r\\n                <i class=\\\"material-icons colorAmarillo\\\" (click)=\\\"editarPassword(row)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Cambiar Contraseña\\\">vpn_key</i>\\r\\n\\r\\n                <i class=\\\"material-icons colorRojo\\\" (click)=\\\"delete(row)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Borrar Usuario\\\">delete</i>\\r\\n            </td>\\r\\n        </ng-container>\\r\\n    \\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\r\\n        </tr>\\r\\n        </table>\\r\\n    \\r\\n        <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\r\\n    </div>\\r\\n \\r\\n    </div>\\r\\n</div> \\r\\n\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { EmpresasComponent } from './components/empresas/empresas.component';\r\nimport { ProspectosComponent } from './components/prospectos/prospectos.component';\r\nimport { NormasComponent } from './components/normas/normas.component';\r\nimport { TipoServicioComponent } from './components/tipo-servicio/tipo-servicio.component';\r\nimport { CostosComponent } from './components/costos/costos.component';\r\nimport { ServiciosComponent } from './components/servicios/servicios.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { IndexComponent } from './components/index/index.component';\r\nimport { UsuariosComponent } from './components/usuarios/usuarios.component';\r\nimport { MovimientosComponent } from './components/movimientos/movimientos.component';\r\nimport { CotizacionComponent } from './components/cotizacion/cotizacion.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: 'empresas', component: EmpresasComponent },\r\n  { path: 'prospectos', component: ProspectosComponent },\r\n  { path: 'normas', component: NormasComponent },\r\n  { path: 'tipo-servicio', component: TipoServicioComponent },\r\n  { path: 'costos', component: CostosComponent },\r\n  { path: 'servicios', component: ServiciosComponent },\r\n  { path: '', component: LoginComponent },\r\n  { path: 'index', component: IndexComponent },\r\n  { path: 'usuarios', component: UsuariosComponent },\r\n  { path: 'movimientos', component: MovimientosComponent },\r\n  { path: 'cotizacion', component: CotizacionComponent },\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport {LoginService} from './services/login.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  \r\n  constructor(){}\r\n  \r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { EmpresasComponent } from './components/empresas/empresas.component';\r\nimport { ProspectosComponent } from './components/prospectos/prospectos.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {CdkStepperModule} from '@angular/cdk/stepper';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {CdkTreeModule} from '@angular/cdk/tree';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatSnackBarModule, MAT_SNACK_BAR_DATA, MatSnackBarRef} from '@angular/material/snack-bar';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport { AddEmpresaComponent } from './components/empresas/modals/add-empresa/add-empresa.component';\r\nimport { EditEmpresaComponent } from './components/empresas/modals/edit-empresa/edit-empresa.component'; \r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AddProspectoComponent } from './components/prospectos/modals/add-prospecto/add-prospecto.component';\r\nimport { ValidarProspectoComponent } from './components/prospectos/modals/validar-prospecto/validar-prospecto.component';\r\nimport { NormasComponent } from './components/normas/normas.component';\r\nimport { TipoServicioComponent } from './components/tipo-servicio/tipo-servicio.component';\r\nimport { CostosComponent } from './components/costos/costos.component';\r\nimport { AddNormaComponent } from './components/normas/modals/add-norma/add-norma.component';\r\nimport { AddTipoServicioComponent } from './components/tipo-servicio/modals/add-tipo-servicio/add-tipo-servicio.component';\r\nimport { AddCostoComponent } from './components/costos/modals/add-costo/add-costo.component';\r\nimport { ServiciosComponent } from './components/servicios/servicios.component';\r\nimport { AddServicioComponent } from './components/servicios/modals/add-servicio/add-servicio.component';\r\nimport { ValidarUnoComponent } from './components/servicios/modals/validar-uno/validar-uno.component';\r\nimport { ValidarDosComponent } from './components/servicios/modals/validar-dos/validar-dos.component';\r\nimport { ValidarTresComponent } from './components/servicios/modals/validar-tres/validar-tres.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { IndexComponent } from './components/index/index.component';\r\nimport { UsuariosComponent } from './components/usuarios/usuarios.component';\r\nimport { AddUsuarioComponent } from './components/usuarios/modals/add-usuario/add-usuario.component';\r\n\r\nimport { SocketIoModule, SocketIoConfig } from 'ngx-socket-io';\r\nimport { MovimientosComponent } from './components/movimientos/movimientos.component';\r\nimport { EditProspectComponent } from './components/prospectos/modals/edit-prospect/edit-prospect.component';\r\nimport { EditNormaComponent } from './components/normas/modals/edit-norma/edit-norma.component';\r\nimport { EditTipoServicioComponent } from './components/tipo-servicio/modals/edit-tipo-servicio/edit-tipo-servicio.component';\r\nimport { EditCostoComponent } from './components/costos/modals/edit-costo/edit-costo.component';\r\nimport { CotizacionComponent } from './components/cotizacion/cotizacion.component';\r\nimport { AddCotizacionComponent } from './components/cotizacion/modals/add-cotizacion/add-cotizacion.component';\r\nimport { EditUsuarioComponent } from './components/usuarios/modals/edit-usuario/edit-usuario.component';\r\nimport { EditPasswordComponent } from './components/usuarios/modals/edit-password/edit-password.component';\r\nimport { InformacionCotizacionComponent } from './components/cotizacion/modals/informacion-cotizacion/informacion-cotizacion.component';\r\nimport { EditCotizacionComponent } from './components/cotizacion/modals/edit-cotizacion/edit-cotizacion.component';\r\n\r\nconst config: SocketIoConfig = { url: 'http://localhost:3000', options: {} };\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    EmpresasComponent,\r\n    ProspectosComponent,\r\n    AddEmpresaComponent,\r\n    EditEmpresaComponent,\r\n    AddProspectoComponent,\r\n    ValidarProspectoComponent,\r\n    NormasComponent,\r\n    TipoServicioComponent,\r\n    CostosComponent,\r\n    AddNormaComponent,\r\n    AddTipoServicioComponent,\r\n    AddCostoComponent,\r\n    ServiciosComponent,\r\n    AddServicioComponent,\r\n    ValidarUnoComponent,\r\n    ValidarDosComponent,\r\n    ValidarTresComponent,\r\n    NavbarComponent,\r\n    LoginComponent,\r\n    IndexComponent,\r\n    UsuariosComponent,\r\n    AddUsuarioComponent,\r\n    MovimientosComponent,\r\n    EditProspectComponent,\r\n    EditNormaComponent,\r\n    EditTipoServicioComponent,\r\n    EditCostoComponent,\r\n    CotizacionComponent,\r\n    AddCotizacionComponent,\r\n    EditUsuarioComponent,\r\n    EditPasswordComponent,\r\n    InformacionCotizacionComponent,\r\n    EditCotizacionComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    FormsModule, ReactiveFormsModule,\r\n    BrowserAnimationsModule,\r\n    MatPaginatorModule, MatSidenavModule,\r\n    A11yModule,\r\n    CdkStepperModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    SocketIoModule.forRoot(config)\r\n  ],\r\n  providers: [],\r\n  entryComponents: [\r\n    AddEmpresaComponent, EditEmpresaComponent, AddProspectoComponent,\r\n    ValidarProspectoComponent, AddNormaComponent, AddTipoServicioComponent, AddCostoComponent, AddServicioComponent, ValidarUnoComponent, ValidarDosComponent,\r\n    ValidarTresComponent, AddUsuarioComponent, EditProspectComponent, EditNormaComponent, EditTipoServicioComponent, EditCostoComponent, AddCotizacionComponent, EditUsuarioComponent, EditPasswordComponent, InformacionCotizacionComponent, EditCotizacionComponent\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY29zdG9zL2Nvc3Rvcy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport Swal from \"sweetalert2\";\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { CostosService } from '../../services/costos.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { AddCostoComponent } from './modals/add-costo/add-costo.component';\r\nimport { environment } from 'src/environments/environment';\r\nimport {EditCostoComponent} from './modals/edit-costo/edit-costo.component';\r\nimport { MovimientosService } from 'src/app/services/movimientos.service';\r\n\r\n@Component({\r\n  selector: 'app-costos',\r\n  templateUrl: './costos.component.html',\r\n  styleUrls: ['./costos.component.css']\r\n})\r\nexport class CostosComponent implements OnInit {\r\n\r\n \r\n  public costos : any = [];\r\n  public preloaderActivo = false;\r\n  public desactivado = false;\r\n\r\n  // Table\r\n  public displayedColumns: string[] = ['codificacion', 'nombre', 'costo', 'acciones'];\r\n  public dataSource = new MatTableDataSource();\r\n\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n\r\n  constructor(\r\n    public costosService: CostosService,\r\n    private router: Router,\r\n    public dialog: MatDialog,\r\n    public movimientosService: MovimientosService\r\n    ) { this.validarUsuario();}\r\n\r\n\r\n  // Al iniciar\r\n  ngOnInit() {\r\n    this.conectarServidor();\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  // get all norms\r\n  conectarServidor(){\r\n    this.preloaderActivo = true;\r\n    this.desactivado = true;\r\n    this.costosService.get()\r\n      .subscribe(\r\n        data => {\r\n          this.costos = data;\r\n          console.log(this.costos);\r\n          this.preloaderActivo = false;\r\n          this.desactivado = false;\r\n          this.dataSource.data = this.costos;\r\n        },\r\n        err => {\r\n          console.log(err);\r\n            Swal.fire({\r\n              icon: 'error',\r\n              title: 'Error',\r\n              text: err\r\n            });\r\n\r\n          this.preloaderActivo = false;\r\n          this.desactivado = false;\r\n        }\r\n      )\r\n  }\r\n\r\n  // Abrir formulario en modal\r\n  async nuevo(){\r\n    const dialogRef = this.dialog.open(AddCostoComponent, {\r\n      width: '700px'\r\n    });\r\n\r\n    await dialogRef.afterClosed().subscribe(result => {    \r\n      this.conectarServidor();\r\n    }); \r\n  }\r\n\r\n  // Update\r\n  async editar(data){\r\n    const dialogRef = this.dialog.open(EditCostoComponent, {\r\n      width: '700px',\r\n      data: {\r\n        id: data.id,\r\n        idNorma: data.idNorma,\r\n        idTipoServicio: data.idTipoServicio,\r\n        costo: data.costo\r\n      }\r\n    });\r\n\r\n    await dialogRef.afterClosed().subscribe(result => {\r\n      this.conectarServidor();\r\n    });\r\n  }\r\n\r\n  // Filtering\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  // Tine prmisos o esta autenticado\r\n  validarUsuario(){\r\n    let id = sessionStorage.id;\r\n    if(!id){\r\n      this.router.navigate(['/']);\r\n      Swal.fire({\r\n        title: 'Error',\r\n        text: 'Debes iniciar sesion primero',\r\n        icon: 'warning'\r\n      });\r\n    } else {\r\n      let rol = parseInt(sessionStorage.rol);\r\n      if(environment.permisos_Usuarios[rol].costos == false){\r\n        this.router.navigate(['/index']);\r\n        Swal.fire({\r\n          title: 'Error',\r\n          text: 'No tienes los permisos necesarios',\r\n          icon: 'warning'\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n   // Delete a empresa\r\n   async delete(data){\r\n    if(this.desactivado)\r\n      return false;\r\n\r\n    Swal.fire({\r\n      title: '¿Estas seguro que quieres borrar el costo?',\r\n      text: 'Esto eliminara todas cotizaciones y servicios que contengan el mismo.',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Si, Borrar',\r\n      cancelButtonText: 'No, Cancelar'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.preloaderActivo = true;\r\n        this.desactivado = true;\r\n\r\n        this.costosService.delete(data.id).toPromise()\r\n        .then(db => {\r\n          let movimiento = {\r\n            idUsuario: sessionStorage.id,\r\n            tipo: 3,\r\n            descripcion: `Se borro el costo de la norma: \"${data.codificacion}\", con el tipo de servicio: \"${data.nombre}\" y con un valor de: \"$${data.costo}\"`\r\n          }\r\n          this.movimientosService.post(movimiento).subscribe(() => {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              title: 'Se borro el costo.'\r\n            })\r\n            this.conectarServidor();\r\n          })\r\n        }).catch ( e => {\r\n          if(!e.error.mensaje)\r\n            Swal.fire({\r\n              icon: 'error',\r\n              title: 'Error',\r\n              text: 'El servidor no esta conectado'\r\n            })\r\n          else \r\n            Swal.fire({\r\n              icon: 'error',\r\n              title: 'Error',\r\n              text: e.error.mensaje\r\n            })\r\n        }).finally(() => {\r\n          this.preloaderActivo = false;\r\n          this.desactivado = false;\r\n        })\r\n      }\r\n    })\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY29zdG9zL21vZGFscy9hZGQtY29zdG8vYWRkLWNvc3RvLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { NormasService } from 'src/app/services/normas.service';\r\nimport { TipoServicioService } from '../../../../services/tipo-servicio.service';\r\nimport Swal from 'sweetalert2';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { CostosService } from '../../../../services/costos.service';\r\nimport { MovimientosService } from 'src/app/services/movimientos.service';\r\n\r\n@Component({\r\n  selector: 'app-add-costo',\r\n  templateUrl: './add-costo.component.html',\r\n  styleUrls: ['./add-costo.component.css']\r\n})\r\nexport class AddCostoComponent implements OnInit {\r\n\r\n  public costo = {\r\n    idNorma: 0,\r\n    idTipoServicio: 0,\r\n    costo: 0\r\n  }\r\n\r\n  public preloaderActivo = false;\r\n  public desactivado = false;\r\n  public normas: any = [];\r\n  public servicios: any = [];\r\n\r\n  constructor(\r\n    public normasService: NormasService,\r\n    public tipoServicioService: TipoServicioService,\r\n    public dialogRef: MatDialogRef<AddCostoComponent>,\r\n    public costosService: CostosService,\r\n    public movimientosService: MovimientosService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getNormas();\r\n    this.getServicios();\r\n  }\r\n\r\n  getNormas(){\r\n    this.normasService.get()\r\n    .subscribe(\r\n      data => {\r\n        this.normas = data;\r\n        console.log(this.normas);\r\n        this.preloaderActivo = false;\r\n        this.desactivado = false;\r\n      },\r\n      err => {\r\n        console.log(err);\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Error',\r\n            text: err\r\n          });\r\n\r\n        this.preloaderActivo = false;\r\n        this.desactivado = false;\r\n      }\r\n    )\r\n  }\r\n\r\n  getServicios(){\r\n    this.tipoServicioService.get()\r\n    .subscribe(\r\n      data => {\r\n        this.servicios = data;\r\n        console.log(this.servicios);\r\n        this.preloaderActivo = false;\r\n        this.desactivado = false;\r\n      },\r\n      err => {\r\n        console.log(err);\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Error',\r\n            text: err\r\n          });\r\n\r\n        this.preloaderActivo = false;\r\n        this.desactivado = false;\r\n      }\r\n    )\r\n  }\r\n\r\n   // Close the modal\r\n   cerrarModal(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  async guardar(){\r\n    console.log(this.costo);\r\n    await this.costosService.post(this.costo)\r\n      .subscribe(res => {\r\n        console.log(res);\r\n        let movimiento = {\r\n          idUsuario: sessionStorage.id,\r\n          tipo: 1,\r\n          descripcion: `Se creo un costo para la norma:  \"${res['codificacion']}\" y el tipo de servicio: \"${res['nombre']}\" con un valor de: \"$${res['costo']}\"`\r\n        }\r\n        this.movimientosService.post(movimiento).subscribe(() => {\r\n          Swal.fire({ \r\n            icon: 'success',\r\n            title: 'Se inserto el costo'\r\n          })\r\n          this.dialogRef.close('ok');\r\n        })\r\n      }, \r\n      e => {\r\n        if(!e.error.mensaje)\r\n          Swal.fire({ \r\n            icon: 'error',\r\n            title: 'Error',\r\n            text: 'El servidor no esta conectado'\r\n          })\r\n        else \r\n          Swal.fire({ \r\n            icon: 'error',\r\n            title: 'Error',\r\n            text: e.error.mensaje\r\n          })\r\n      }, \r\n      () => {\r\n        this.preloaderActivo = false;\r\n        this.desactivado = false;\r\n      });\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY29zdG9zL21vZGFscy9lZGl0LWNvc3RvL2VkaXQtY29zdG8uY29tcG9uZW50LmNzcyJ9 */\"","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {NormasService} from '../../../../services/normas.service';\r\nimport {TipoServicioService} from '../../../../services/tipo-servicio.service';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\r\nimport {CostosService} from '../../../../services/costos.service';\r\nimport {MovimientosService} from '../../../../services/movimientos.service';\r\nimport Swal from \"sweetalert2\";\r\n\r\n@Component({\r\n  selector: 'app-edit-costo',\r\n  templateUrl: './edit-costo.component.html',\r\n  styleUrls: ['./edit-costo.component.css']\r\n})\r\nexport class EditCostoComponent implements OnInit {\r\n\r\n  public costo = {\r\n    idNorma: 0,\r\n    idTipoServicio: 0,\r\n    costo: 0\r\n  }\r\n\r\n  public preloaderActivo = false;\r\n  public desactivado = false;\r\n  public normas: any = [];\r\n  public servicios: any = [];\r\n\r\n  constructor(\r\n    public normasService: NormasService,\r\n    public tipoServicioService: TipoServicioService,\r\n    public dialogRef: MatDialogRef<EditCostoComponent>,\r\n    public costosService: CostosService,\r\n    public movimientosService: MovimientosService,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.costo.idNorma = this.data.idNorma;\r\n    this.costo.idTipoServicio = this.data.idTipoServicio;\r\n    this.costo.costo = this.data.costo;\r\n    console.log(this.data, this.costo)\r\n    this.getNormas();\r\n    this.getServicios();\r\n  }\r\n\r\n  getNormas(){\r\n    this.normasService.get()\r\n      .subscribe(\r\n        data => {\r\n          this.normas = data;\r\n          console.log(this.normas);\r\n          this.preloaderActivo = false;\r\n          this.desactivado = false;\r\n        },\r\n        err => {\r\n          console.log(err);\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Error',\r\n            text: err\r\n          });\r\n\r\n          this.preloaderActivo = false;\r\n          this.desactivado = false;\r\n        }\r\n      )\r\n  }\r\n\r\n  getServicios(){\r\n    this.tipoServicioService.get()\r\n      .subscribe(\r\n        data => {\r\n          this.servicios = data;\r\n          console.log(this.servicios);\r\n          this.preloaderActivo = false;\r\n          this.desactivado = false;\r\n        },\r\n        err => {\r\n          console.log(err);\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Error',\r\n            text: err\r\n          });\r\n\r\n          this.preloaderActivo = false;\r\n          this.desactivado = false;\r\n        }\r\n      )\r\n  }\r\n\r\n  // Close the modal\r\n  cerrarModal(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  async guardar(){\r\n    console.log(this.costo);\r\n    this.costosService.get1Costo(this.data.id).subscribe({next: async resultado => {\r\n        await this.costosService.editar(this.costo, this.data.id)\r\n          .subscribe(res => {\r\n              console.log(res);\r\n              let movimiento = {\r\n                idUsuario: sessionStorage.id,\r\n                tipo: 2,\r\n                descripcion: `Se modifico un costo con  norma: \"${resultado['codificacion']}\", tipo de servicio: \"${resultado['nombre']}\" y costo: \"$${resultado['costo']}\" A norma: \"${res['codificacion']}\", tipo de servicio: \"${res['nombre']}\" y costo: \"$${res['costo']}\"`\r\n              }\r\n              this.movimientosService.post(movimiento).subscribe(() => {\r\n                Swal.fire({\r\n                  icon: 'success',\r\n                  title: 'Se inserto el costo'\r\n                })\r\n                this.dialogRef.close('ok');\r\n              })\r\n            },\r\n            e => {\r\n              if(!e.error.mensaje)\r\n                Swal.fire({\r\n                  icon: 'error',\r\n                  title: 'Error',\r\n                  text: 'El servidor no esta conectado'\r\n                })\r\n              else\r\n                Swal.fire({\r\n                  icon: 'error',\r\n                  title: 'Error',\r\n                  text: e.error.mensaje\r\n                })\r\n            },\r\n            () => {\r\n              this.preloaderActivo = false;\r\n              this.desactivado = false;\r\n            });\r\n      }});\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY290aXphY2lvbi9jb3RpemFjaW9uLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport Swal from \"sweetalert2\"\r\nimport { MatTableDataSource, MatPaginator, MatDialog } from '@angular/material';\r\nimport { CotizacionesService } from 'src/app/services/cotizaciones.service';\r\nimport { Router } from '@angular/router';\r\nimport { environment } from 'src/environments/environment';\r\nimport { AddCotizacionComponent } from './modals/add-cotizacion/add-cotizacion.component';\r\nimport {InformacionCotizacionComponent} from './modals/informacion-cotizacion/informacion-cotizacion.component';\r\nimport {MovimientosService} from '../../services/movimientos.service';\r\nimport {EditCotizacionComponent} from './modals/edit-cotizacion/edit-cotizacion.component';\r\n\r\n@Component({\r\n  selector: 'app-cotizacion',\r\n  templateUrl: './cotizacion.component.html',\r\n  styleUrls: ['./cotizacion.component.css']\r\n})\r\nexport class CotizacionComponent implements OnInit {\r\n  public cotizaciones : any = [];\r\n  public preloaderActivo = false;\r\n  public desactivado = false;\r\n\r\n\r\n  // Table\r\n  public displayedColumns: string[] = ['prospecto', 'fecha', 'comentario', 'total', 'acciones'];\r\n  public dataSource = new MatTableDataSource();\r\n\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n\r\n  constructor(\r\n    public cotizacionService: CotizacionesService,\r\n    private router: Router,\r\n    public dialog: MatDialog,\r\n    public movimientosService: MovimientosService\r\n    ) { this.validarUsuario(); }\r\n\r\n\r\n  // Al iniciar\r\n  ngOnInit() {\r\n    this.conectarServidor();\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  // get all norms\r\n  conectarServidor(){\r\n    this.preloaderActivo = true;\r\n    this.desactivado = true;\r\n    this.cotizacionService.get()\r\n      .subscribe(\r\n        db => {\r\n          this.cotizaciones = db;\r\n          this.cotizaciones.filter(data => data.fecha = data.fecha.substring(0, 10));\r\n          console.log(this.cotizaciones);\r\n          this.preloaderActivo = false;\r\n          this.desactivado = false;\r\n          this.dataSource.data = this.cotizaciones\r\n        },\r\n        err => {\r\n          console.log(err);\r\n            Swal.fire({\r\n              icon: 'error',\r\n              title: 'Error',\r\n              text: err\r\n            });\r\n\r\n          this.preloaderActivo = false;\r\n          this.desactivado = false;\r\n        }\r\n      )\r\n  }\r\n\r\n  // Abrir formulario en modal\r\n  async nuevo() {\r\n    const dialogRef = this.dialog.open(AddCotizacionComponent, {\r\n      width: '800px'\r\n    });\r\n\r\n    await dialogRef.afterClosed().subscribe(() => {\r\n      this.conectarServidor();\r\n    });\r\n  }\r\n\r\n  // Filtering\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n\r\n  // Put a Norm\r\n  async edit(data) {\r\n    if (this.desactivado)\r\n      return false;\r\n\r\n    const dialogRef = this.dialog.open(EditCotizacionComponent, {\r\n      data: data,\r\n      width: '600px'\r\n     });\r\n\r\n    await dialogRef.afterClosed().subscribe(() => {\r\n      this.conectarServidor();\r\n    });\r\n  }\r\n\r\n  // Tine prmisos o esta autenticado\r\n  validarUsuario() {\r\n    const id = sessionStorage.id;\r\n    if (!id) {\r\n      this.router.navigate(['/']);\r\n      Swal.fire({\r\n        title: 'Error',\r\n        text: 'Debes iniciar sesion primero',\r\n        icon: 'warning'\r\n      });\r\n    } else {\r\n      let rol = parseInt(sessionStorage.rol);\r\n      if (environment.permisos_Usuarios[rol].cotizacion === false) {\r\n        this.router.navigate(['/index']);\r\n        Swal.fire({\r\n          title: 'Error',\r\n          text: 'No tienes los permisos necesarios',\r\n          icon: 'warning'\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  // ver info de la cotizacion\r\n  async informacion(data) {\r\n    const dialogRef = this.dialog.open(InformacionCotizacionComponent, {\r\n      width: '800px',\r\n      data: data,\r\n      disableClose: true,\r\n    });\r\n\r\n    await dialogRef.afterClosed().subscribe(() => {\r\n      this.conectarServidor();\r\n    });\r\n  }\r\n\r\n  async borrar(data) {\r\n    if (this.desactivado)\r\n      return false;\r\n\r\n    Swal.fire({\r\n      title: '¿Estas seguro que quieres borrar la cotización?',\r\n      text: 'Esto significa que los servicios a los que se les haya asignado esta cotización, ya no la tendran.',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Si, Borrar',\r\n      cancelButtonText: 'No, Cancelar'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.preloaderActivo = true;\r\n        this.desactivado = true;\r\n\r\n        this.cotizacionService.putActivo(0, data.id).toPromise()\r\n          .then(() => {\r\n            let movimiento = {\r\n              idUsuario: sessionStorage.id,\r\n              tipo: 3,\r\n              descripcion: `Se borro la cotización para: \"${data.nombre}\", con el comentario:\r\n              \"${data.comentario}\", que se realizó en la fecha: \"${data.fecha}\", y era un total de: \"$${data.total}\"`\r\n            };\r\n            this.movimientosService.post(movimiento).subscribe(() => {\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: 'Se borro la cotización'\r\n              })\r\n              this.conectarServidor();\r\n            });\r\n          }).catch ( e => {\r\n          if (!e.error.mensaje)\r\n            Swal.fire({\r\n              icon: 'error',\r\n              title: 'Error',\r\n              text: 'El servidor no esta conectado'\r\n            })\r\n          else\r\n            Swal.fire({\r\n              icon: 'error',\r\n              title: 'Error',\r\n              text: e.error.mensaje\r\n            });\r\n        }).finally(() => {\r\n          this.preloaderActivo = false;\r\n          this.desactivado = false;\r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n","export default \"textarea {\\r\\n    resize: none;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jb3RpemFjaW9uL21vZGFscy9hZGQtY290aXphY2lvbi9hZGQtY290aXphY2lvbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtBQUNoQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY290aXphY2lvbi9tb2RhbHMvYWRkLWNvdGl6YWNpb24vYWRkLWNvdGl6YWNpb24uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRleHRhcmVhIHtcclxuICAgIHJlc2l6ZTogbm9uZTtcclxufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport Swal from 'sweetalert2';\r\nimport { CotizacionesService } from 'src/app/services/cotizaciones.service';\r\nimport { MatDialogRef } from '@angular/material';\r\nimport { CostosService } from 'src/app/services/costos.service';\r\nimport { MovimientosService } from 'src/app/services/movimientos.service';\r\nimport { ProspectosService } from 'src/app/services/prospectos.service';\r\nimport { NormasService } from 'src/app/services/normas.service';\r\nimport { FormArray, FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-add-cotizacion',\r\n  templateUrl: './add-cotizacion.component.html',\r\n  styleUrls: ['./add-cotizacion.component.css']\r\n})\r\nexport class AddCotizacionComponent implements OnInit {\r\n\r\n  public cotizacion = {\r\n    idProspecto: 0,\r\n    idCosto: [],\r\n    comentario: '',\r\n    costos: [],\r\n    total: 0,\r\n    codificacion: [],\r\n    nombre: []\r\n  };\r\n\r\n  public preloaderActivo = false;\r\n  public desactivado = false;\r\n  public prospectos: any = [];\r\n  public costos: any = [];\r\n  public tipoServicio: any = [];\r\n  public normas: any = [];\r\n  public total = 0;\r\n\r\n  public normasArray = new FormArray([]);\r\n  public serviciosArray = new FormArray([]);\r\n\r\n  constructor(\r\n    public cotizacionesService: CotizacionesService,\r\n    public dialogRef: MatDialogRef<AddCotizacionComponent>,\r\n    public costosService: CostosService,\r\n    public prospectosService: ProspectosService,\r\n    public movimientosService: MovimientosService,\r\n    public normasService: NormasService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getProspectos();\r\n    this.getCostos();\r\n    this.getNormas();\r\n  }\r\n\r\n  getProspectos() {\r\n    this.prospectosService.get()\r\n    .subscribe(\r\n      data => {\r\n        this.prospectos = data;\r\n        console.log(this.prospectos);\r\n        this.preloaderActivo = false;\r\n        this.desactivado = false;\r\n      },\r\n      err => {\r\n        console.log(err);\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: err\r\n        });\r\n\r\n        this.preloaderActivo = false;\r\n        this.desactivado = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  getCostos() {\r\n    this.costosService.get()\r\n    .subscribe(\r\n      data => {\r\n        this.costos = data;\r\n        console.log(this.costos);\r\n        this.preloaderActivo = false;\r\n        this.desactivado = false;\r\n      },\r\n      err => {\r\n        console.log(err);\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: err\r\n        });\r\n\r\n        this.preloaderActivo = false;\r\n        this.desactivado = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  getNormas() {\r\n    this.normasService.get()\r\n    .subscribe(\r\n      data => {\r\n        this.normas[0] = data;\r\n        console.log(this.normas);\r\n        this.preloaderActivo = false;\r\n        this.desactivado = false;\r\n      },\r\n      err => {\r\n        console.log(err);\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: err\r\n        });\r\n\r\n        this.preloaderActivo = false;\r\n        this.desactivado = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  buscarTipoServicio(i: number) {\r\n    const aux = this.normasArray.controls[i].value;\r\n    this.tipoServicio[i] = this.costos.filter((data) => {\r\n      return data.idNorma === aux;\r\n    });\r\n\r\n    if (this.tipoServicio[i].length === 0) {\r\n      this.total = 0;\r\n      this.cotizacion.costos[i] = 0;\r\n    }\r\n  }\r\n\r\n  buscarCosto(i: number) {\r\n    const norma = this.normasArray.controls[i].value;\r\n    const tipo = this.serviciosArray.controls[i].value;\r\n    const aux = this.costos.filter((data) => {\r\n      return data.idNorma === norma && data.idTipoServicio === tipo;\r\n    });\r\n    this.cotizacion.idCosto[i] = aux[0].id;\r\n    this.cotizacion.costos[i] = aux[0].costo;\r\n    this.cotizacion.codificacion[i] = aux[0].codificacion;\r\n    this.cotizacion.nombre[i] = aux[0].nombre;\r\n    this.sumaCosto();\r\n    console.log(this.cotizacion);\r\n  }\r\n\r\n  sumaCosto() {\r\n    this.total = 0;\r\n    for (let i = 0; i < this.cotizacion.costos.length; i++) {\r\n      this.total += i;\r\n    }\r\n  }\r\n\r\n  // Close the modal\r\n  cerrarModal() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  async guardar() {\r\n    this.cotizacion.total = this.total;\r\n    console.log(this.cotizacion);\r\n    Swal.fire({\r\n      title: '¿Estas seguro que ya quieres guardar la cotización?',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Sí, guardar',\r\n      cancelButtonText: 'Cancelar'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.preloaderActivo = true;\r\n        this.desactivado = true;\r\n        this.cotizacion.idCosto[0] = this.cotizacion.idCosto.toString();\r\n\r\n        // Para obtener el nombre del prospecto\r\n        const prospecto = this.prospectos.filter(res => res.id === this.cotizacion.idProspecto);\r\n\r\n        // Para obtener la codificacion y tipo de servicio\r\n        let normas = '';\r\n        for (let i = 0; i < this.cotizacion.codificacion.length; i++) {\r\n          normas += `\"${this.cotizacion.nombre[i]}\" de la norma: \"${this.cotizacion.codificacion[i]}\", `;\r\n        }\r\n        this.cotizacionesService.post(this.cotizacion)\r\n          .subscribe({next: () => {\r\n          const movimiento = {\r\n            idUsuario: sessionStorage.id,\r\n            tipo: 1,\r\n            descripcion: `Se creo una cotizacion para: \"${prospecto[0].nombre}\"\r\n            con los siguientes datos: ${normas} y fue un total de: \"$${this.total}\"`\r\n          };\r\n          this.movimientosService.post(movimiento).subscribe(() => {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              title: 'Se inserto la cotizacion'\r\n            });\r\n            this.dialogRef.close('ok');\r\n          });\r\n        },\r\n          error: e => {\r\n            this.preloaderActivo = false;\r\n            this.desactivado = false;\r\n            if (!e.error.mensaje) {\r\n              Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: 'El servidor no esta conectado'\r\n              });\r\n            } else {\r\n              Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: e.error.mensaje\r\n              });\r\n            }\r\n          },\r\n            complete: () => {\r\n              this.preloaderActivo = false;\r\n              this.desactivado = false;\r\n              this.dialogRef.close('ok');\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  quitar(index: number) {\r\n    this.normasArray.removeAt(index);\r\n    this.serviciosArray.removeAt(index);\r\n    this.cotizacion.idCosto.splice(index, 1);\r\n    this.cotizacion.costos.splice(index, 1);\r\n    this.cotizacion.codificacion.splice(index, 1);\r\n    this.cotizacion.nombre.splice(index, 1);\r\n    this.normas.splice(index, 1);\r\n    this.tipoServicio.splice(index, 1);\r\n    this.sumaCosto();\r\n  }\r\n\r\n\r\n  agregar() {\r\n    this.normasArray.push(new FormControl(''));\r\n    this.serviciosArray.push(new FormControl(''));\r\n    this.normas[this.normas.length] = this.normas[this.normas.length - 1];\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY290aXphY2lvbi9tb2RhbHMvZWRpdC1jb3RpemFjaW9uL2VkaXQtY290aXphY2lvbi5jb21wb25lbnQuY3NzIn0= */\"","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormArray, FormControl} from '@angular/forms';\r\nimport {CotizacionesService} from '../../../../services/cotizaciones.service';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\r\nimport {CostosService} from '../../../../services/costos.service';\r\nimport {ProspectosService} from '../../../../services/prospectos.service';\r\nimport {MovimientosService} from '../../../../services/movimientos.service';\r\nimport {NormasService} from '../../../../services/normas.service';\r\nimport Swal from 'sweetalert2';\r\nimport {of} from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-edit-cotizacion',\r\n  templateUrl: './edit-cotizacion.component.html',\r\n  styleUrls: ['./edit-cotizacion.component.css']\r\n})\r\nexport class EditCotizacionComponent implements OnInit {\r\n\r\n  public cotizacion = {\r\n    idProspecto: 0,\r\n    idCosto: [],\r\n    comentario: '',\r\n    costos: [],\r\n    total: 0,\r\n    codificacion: [],\r\n    nombre: []\r\n  };\r\n\r\n  public preloaderActivo = false;\r\n  public desactivado = false;\r\n  public prospectos: any = [];\r\n  public costos: any = [];\r\n  public tipoServicio: any = [];\r\n  public normas: any = [];\r\n  public total = 0;\r\n\r\n  public normasArray = new FormArray([]);\r\n  public serviciosArray = new FormArray([]);\r\n\r\n  constructor(\r\n    public cotizacionesService: CotizacionesService,\r\n    public dialogRef: MatDialogRef<EditCotizacionComponent>,\r\n    public costosService: CostosService,\r\n    public prospectosService: ProspectosService,\r\n    public movimientosService: MovimientosService,\r\n    public normasService: NormasService,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getProspectos();\r\n    this.getCostos();\r\n  }\r\n\r\n  getProspectos() {\r\n    this.prospectosService.get()\r\n      .subscribe(\r\n        data => {\r\n          this.prospectos = data;\r\n          this.preloaderActivo = false;\r\n          this.desactivado = false;\r\n        },\r\n        err => {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Error',\r\n            text: err\r\n          });\r\n\r\n          this.preloaderActivo = false;\r\n          this.desactivado = false;\r\n        },\r\n        () => {\r\n          this.cotizacion.idProspecto = this.data.idProspecto;\r\n          this.cotizacion.comentario = this.data.comentario;\r\n        }\r\n      );\r\n  }\r\n\r\n  getCostos() {\r\n    this.preloaderActivo = true;\r\n    this.desactivado = true;\r\n    this.costosService.get()\r\n      .subscribe(\r\n        data => {\r\n          this.costos = data;\r\n        },\r\n        err => {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Error',\r\n            text: err\r\n          });\r\n          this.preloaderActivo = false;\r\n          this.desactivado = false;\r\n        },\r\n        () => {\r\n          // Complete getting normas\r\n          this.normasService.get()\r\n            .subscribe(\r\n              data => {\r\n                this.normas[0] = data;\r\n              },\r\n              err => {\r\n                Swal.fire({\r\n                  icon: 'error',\r\n                  title: 'Error',\r\n                  text: err\r\n                });\r\n              },\r\n              async () => {\r\n                const aux = this.data.idCosto.split(',');\r\n                for (let i = 0; i < aux.length; i++) {\r\n                  await this.agregar();\r\n                  const newData = this.costos.filter(data => {\r\n                    return data.id === parseInt(aux[i], 10);\r\n                  });\r\n                  this.normasArray.controls[i].setValue(newData[0].idNorma);\r\n                  await this.buscarTipoServicio(i);\r\n                  this.serviciosArray.controls[i].setValue(newData[0].idTipoServicio);\r\n                  await this.buscarCosto(i);\r\n                }\r\n                this.preloaderActivo = false;\r\n                this.desactivado = false;\r\n              }\r\n            );\r\n        }\r\n      );\r\n  }\r\n\r\n  buscarTipoServicio(i: number) {\r\n    const aux = this.normasArray.controls[i].value;\r\n    this.tipoServicio[i] = this.costos.filter((data) => {\r\n      return data.idNorma === aux;\r\n    });\r\n    if (this.tipoServicio[i].length === 0) {\r\n      this.total = 0;\r\n      this.cotizacion.costos[i] = 0;\r\n    }\r\n  }\r\n\r\n  buscarCosto(i: number) {\r\n    const norma = this.normasArray.controls[i].value;\r\n    const tipo = this.serviciosArray.controls[i].value;\r\n    const aux = this.costos.filter((data) => {\r\n      return data.idNorma === norma && data.idTipoServicio === tipo;\r\n    });\r\n    this.cotizacion.idCosto[i] = aux[0].id;\r\n    this.cotizacion.costos[i] = aux[0].costo;\r\n    this.cotizacion.codificacion[i] = aux[0].codificacion;\r\n    this.cotizacion.nombre[i] = aux[0].nombre;\r\n    this.sumaCosto();\r\n  }\r\n\r\n  sumaCosto() {\r\n    this.total = 0;\r\n    for (let i = 0; i < this.cotizacion.costos.length; i++) {\r\n      this.total += this.cotizacion.costos[i];\r\n    }\r\n  }\r\n\r\n  // Close the modal\r\n  cerrarModal() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  async guardar() {\r\n    this.cotizacion.total = this.total;\r\n    console.log(this.cotizacion);\r\n    Swal.fire({\r\n      title: '¿Estas seguro que quieres actualizar la cotización?',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Sí, guardar',\r\n      cancelButtonText: 'Cancelar'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.preloaderActivo = true;\r\n        this.desactivado = true;\r\n        this.cotizacion.idCosto[0] = this.cotizacion.idCosto.toString();\r\n\r\n        // Para obtener el nombre del prospecto\r\n        const prospecto = this.prospectos.filter(res => res.id === this.cotizacion.idProspecto);\r\n\r\n        // Para obtener la codificacion y tipo de servicio\r\n        let normas = '';\r\n        for (let i = 0; i < this.cotizacion.codificacion.length; i++) {\r\n          normas += `\"${this.cotizacion.nombre[i]}\" de la norma: \"${this.cotizacion.codificacion[i]}\", `;\r\n        }\r\n        this.cotizacionesService.put(this.cotizacion, this.data.id)\r\n          .subscribe({next: () => {\r\n              const movimiento = {\r\n                idUsuario: sessionStorage.id,\r\n                tipo: 1,\r\n                descripcion: `Se actualizó una cotizacion para: \"${prospecto[0].nombre}\"\r\n                con los siguientes datos: ${normas} y fue un total de: \"$${this.total}\"`\r\n              };\r\n              this.movimientosService.post(movimiento).subscribe(() => {\r\n                Swal.fire({\r\n                  icon: 'success',\r\n                  title: 'Se actualizó la cotizacion'\r\n                });\r\n                this.dialogRef.close('ok');\r\n              });\r\n            },\r\n            error: e => {\r\n              this.preloaderActivo = false;\r\n              this.desactivado = false;\r\n              if (!e.error.mensaje) {\r\n                Swal.fire({\r\n                  icon: 'error',\r\n                  title: 'Error',\r\n                  text: 'El servidor no esta conectado'\r\n                });\r\n              } else {\r\n                Swal.fire({\r\n                  icon: 'error',\r\n                  title: 'Error',\r\n                  text: e.error.mensaje\r\n                });\r\n              }\r\n            },\r\n            complete: () => {\r\n              this.preloaderActivo = false;\r\n              this.desactivado = false;\r\n              this.dialogRef.close('ok');\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  quitar(index: number) {\r\n    this.normasArray.removeAt(index);\r\n    this.serviciosArray.removeAt(index);\r\n    this.cotizacion.idCosto.splice(index, 1);\r\n    this.cotizacion.costos.splice(index, 1);\r\n    this.cotizacion.codificacion.splice(index, 1);\r\n    this.cotizacion.nombre.splice(index, 1);\r\n    this.normas.splice(index, 1);\r\n    this.tipoServicio.splice(index, 1);\r\n    this.sumaCosto();\r\n  }\r\n\r\n\r\n  agregar() {\r\n    this.normasArray.push(new FormControl(''));\r\n    this.serviciosArray.push(new FormControl(''));\r\n    this.normas[this.normas.length] = this.normas[this.normas.length - 1];\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY290aXphY2lvbi9tb2RhbHMvaW5mb3JtYWNpb24tY290aXphY2lvbi9pbmZvcm1hY2lvbi1jb3RpemFjaW9uLmNvbXBvbmVudC5jc3MifQ== */\"","import {Component, ElementRef, Inject, OnInit, ViewChild} from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {CostosService} from '../../../../services/costos.service';\nimport {ProspectosService} from '../../../../services/prospectos.service';\nimport jsPDF from 'jspdf';\n\n@Component({\n  selector: 'app-informacion-cotizacion',\n  templateUrl: './informacion-cotizacion.component.html',\n  styleUrls: ['./informacion-cotizacion.component.css']\n})\nexport class InformacionCotizacionComponent implements OnInit {\n  @ViewChild('pdfTable', {static: false}) pdfTable: ElementRef;\n\n  public costos;\n  public prospecto;\n  public preloaderActivo = false;\n\n  constructor(\n    public dialogRef: MatDialogRef<InformacionCotizacionComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private costosService: CostosService,\n    private prospectosService: ProspectosService\n  ) { }\n\n  ngOnInit() {\n    this.preloaderActivo = true;\n\n    this.data.idCosto = this.data.idCosto.split(',');\n    this.prospectosService.getOne(this.data.idProspecto).subscribe(res => {\n      this.prospecto = res;\n    });\n    this.costosService.get().subscribe({next: data => {\n      this.costos = data;\n    },\n    complete: () => {\n      let aux = [];\n      for (let i = 0; i < this.costos.length; i++) {\n        for (let j = 0; j < this.data.idCosto.length; j++) {\n          if (this.costos[i].id === parseInt(this.data.idCosto[j], 10)) {\n            aux.push(this.costos[i]);\n          }\n        }\n      }\n      this.costos = aux;\n      this.preloaderActivo = false;\n    }});\n  }\n\n  imprimirPdf() {\n    if (this.preloaderActivo) {\n      return false;\n    }\n    this.preloaderActivo = true;\n    setTimeout(() => {\n      const doc = new jsPDF();\n\n      const specialElementHandlers = {\n        '#editor': function (element, renderer) {\n          return true;\n        }\n      };\n\n      const pdfTable = this.pdfTable.nativeElement;\n\n      doc.fromHTML(pdfTable.innerHTML, 15, 15, {\n        width: 190,\n        'elementHandlers': specialElementHandlers\n      });\n\n      doc.save('tableToPdf.pdf');\n      this.preloaderActivo = false;\n    }, 3000);\n  }\n\n  // Close the modal\n  cerrarModal() {\n    if (this.preloaderActivo) {\n      return false;\n    }\n    this.dialogRef.close();\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZW1wcmVzYXMvZW1wcmVzYXMuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { EmpresasService } from 'src/app/services/empresas.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport Swal from \"sweetalert2\";\r\nimport { AddEmpresaComponent } from './modals/add-empresa/add-empresa.component';\r\nimport { EditEmpresaComponent } from './modals/edit-empresa/edit-empresa.component';\r\nimport { environment } from 'src/environments/environment';\r\nimport { MovimientosService } from 'src/app/services/movimientos.service';\r\n\r\n@Component({\r\n  selector: 'app-empresas',\r\n  templateUrl: './empresas.component.html',\r\n  styleUrls: ['./empresas.component.css']\r\n})\r\nexport class EmpresasComponent implements OnInit {\r\n\r\n  public empresas : any = [];\r\n  public preloaderActivo = false;\r\n  public desactivado = false;\r\n\r\n  // Table\r\n  public displayedColumns: string[] = ['nombre', 'acciones'];\r\n  public dataSource = new MatTableDataSource();\r\n\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n\r\n  constructor(\r\n    public empresasService: EmpresasService,\r\n    private router: Router,\r\n    public dialog: MatDialog,\r\n    public movimientosService: MovimientosService\r\n    ) { this.validarUsuario(); }\r\n\r\n\r\n  // Al iniciar\r\n  ngOnInit() {\r\n    this.conectarServidor();\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  // get all norms\r\n  conectarServidor(){\r\n    this.preloaderActivo = true;\r\n    this.desactivado = true;\r\n    this.empresasService.get()\r\n      .subscribe(\r\n        empresas => {\r\n          this.empresas = empresas;\r\n          console.log(this.empresas);\r\n          this.preloaderActivo = false;\r\n          this.desactivado = false;\r\n          this.dataSource.data = this.empresas\r\n        },\r\n        err => {\r\n          console.log(err);\r\n            Swal.fire({\r\n              icon: 'error',\r\n              title: 'Error',\r\n              text: err\r\n            });\r\n\r\n          this.preloaderActivo = false;\r\n          this.desactivado = false;\r\n        }\r\n      )\r\n  }\r\n\r\n  // Abrir formulario en modal\r\n  async formAddEmpresa(){\r\n    const dialogRef = this.dialog.open(AddEmpresaComponent, {\r\n      width: '700px'\r\n    });\r\n\r\n    await dialogRef.afterClosed().subscribe(result => {    \r\n      this.conectarServidor();\r\n    }); \r\n  }\r\n\r\n  // Filtering\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n   // Delete a empresa\r\n  async deleteEmpresa(empresa){\r\n    if(this.desactivado)\r\n      return false;\r\n\r\n    Swal.fire({\r\n      title: '¿Estas seguro que quieres borrar la empresa?',\r\n      text: 'Esto significa que se borraran todos los prospectos y servicios relacionados con la empresa',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Si, Borrar',\r\n      cancelButtonText: 'No, Cancelar'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.preloaderActivo = true;\r\n        this.desactivado = true;\r\n\r\n        this.empresasService.delete(empresa.id).toPromise()\r\n        .then(empresadb => {\r\n          let movimiento = {\r\n            idUsuario: sessionStorage.id,\r\n            tipo: 3,\r\n            descripcion: `Se borro la empresa: \"${empresa.nombre}\"`\r\n          }\r\n          this.movimientosService.post(movimiento).subscribe(() => {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              title: 'Se borro la empresa'\r\n            })\r\n            this.conectarServidor();\r\n          })\r\n        }).catch ( e => {\r\n          if(!e.error.mensaje)\r\n            Swal.fire({\r\n              icon: 'error',\r\n              title: 'Error',\r\n              text: 'El servidor no esta conectado'\r\n            })\r\n          else\r\n            Swal.fire({\r\n              icon: 'error',\r\n              title: 'Error',\r\n              text: e.error.mensaje\r\n            })\r\n        }).finally(() => {\r\n          this.preloaderActivo = false;\r\n          this.desactivado = false;\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  \r\n  // Put a Norm\r\n  async editEmpresa(empresa){\r\n    if(this.desactivado)\r\n      return false;\r\n\r\n    const dialogRef = this.dialog.open(EditEmpresaComponent, {\r\n      data: {\r\n        empresa\r\n      },\r\n      width: '600px'\r\n     });\r\n\r\n    await dialogRef.afterClosed().subscribe(result => {\r\n      this.conectarServidor();\r\n    })\r\n  }\r\n\r\n  // Tine prmisos o esta autenticado\r\n  validarUsuario(){\r\n    let id = sessionStorage.id;\r\n    if(!id){\r\n      this.router.navigate(['/']);\r\n      Swal.fire({\r\n        title: 'Error',\r\n        text: 'Debes iniciar sesion primero',\r\n        icon: 'warning'\r\n      });\r\n    } else {\r\n      let rol = parseInt(sessionStorage.rol);\r\n      if(environment.permisos_Usuarios[rol].empresas == false){\r\n        this.router.navigate(['/index']);\r\n        Swal.fire({\r\n          title: 'Error',\r\n          text: 'No tienes los permisos necesarios',\r\n          icon: 'warning'\r\n        });\r\n      }\r\n    }\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZW1wcmVzYXMvbW9kYWxzL2FkZC1lbXByZXNhL2FkZC1lbXByZXNhLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport Swal from \"sweetalert2\";\r\nimport { EmpresasService } from 'src/app/services/empresas.service';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MovimientosService } from 'src/app/services/movimientos.service';\r\n\r\n@Component({\r\n  selector: 'app-add-empresa',\r\n  templateUrl: './add-empresa.component.html',\r\n  styleUrls: ['./add-empresa.component.css']\r\n})\r\nexport class AddEmpresaComponent {\r\n\r\n  public empresa = {\r\n    nombre: \"\"\r\n  }\r\n\r\n  public preloaderActivo = false;\r\n  public desactivado = false;\r\n  \r\n  constructor(\r\n    public empresasService: EmpresasService,\r\n    public dialogRef: MatDialogRef<AddEmpresaComponent>,\r\n    public movimientosService: MovimientosService\r\n    ) { }\r\n\r\n\r\n  // Post a Norm\r\n  async postEmpresa(){\r\n    this.preloaderActivo = true;\r\n    this.desactivado = true;\r\n    await this.empresasService.post(this.empresa).toPromise()\r\n      .then(\r\n        empresaDb => {\r\n          let movimiento = {\r\n            idUsuario: sessionStorage.id,\r\n            tipo: 1,\r\n            descripcion: `Se creo la empresa:  \"${this.empresa.nombre}\"`\r\n          }\r\n          this.movimientosService.post(movimiento).subscribe(() => {\r\n            Swal.fire({ \r\n              icon: 'success',\r\n              title: 'Se inserto la empresa'\r\n            })\r\n            this.dialogRef.close(empresaDb);\r\n          })\r\n        }\r\n      )\r\n      .catch(e => {\r\n        if(!e.error.mensaje)\r\n          Swal.fire({ \r\n            icon: 'error',\r\n            title: 'Error',\r\n            text: 'El servidor no esta conectado'\r\n          })\r\n        else \r\n          Swal.fire({ \r\n            icon: 'error',\r\n            title: 'Error',\r\n            text: e.error.mensaje\r\n          })\r\n      }).finally( () => {\r\n        this.preloaderActivo = false;\r\n        this.desactivado = false;\r\n      })\r\n    \r\n  }\r\n\r\n\r\n  // Close the modal\r\n  cerrarModal(){\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZW1wcmVzYXMvbW9kYWxzL2VkaXQtZW1wcmVzYS9lZGl0LWVtcHJlc2EuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport Swal from \"sweetalert2\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { EmpresasService } from 'src/app/services/empresas.service';\r\nimport { MovimientosService } from 'src/app/services/movimientos.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-empresa',\r\n  templateUrl: './edit-empresa.component.html',\r\n  styleUrls: ['./edit-empresa.component.css']\r\n})\r\nexport class EditEmpresaComponent implements OnInit {\r\n\r\n \r\n  public preloaderActivo = false;\r\n  public desactivado = false;\r\n  public oldEmpresa;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<EditEmpresaComponent>,\r\n    public empresasService: EmpresasService,\r\n    @Inject(MAT_DIALOG_DATA) public data:any,\r\n    public movimientosService: MovimientosService\r\n  ) {  }\r\n\r\n  // On init\r\n  ngOnInit() {\r\n    this.oldEmpresa = this.data.empresa.nombre\r\n    console.log(this.oldEmpresa)\r\n  }\r\n\r\n\r\n  // Close the modal\r\n  cerrarModal(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n\r\n  // Put a Norm\r\n  async putEmpresa(){\r\n    console.log(this.data.empresa, this.oldEmpresa);\r\n    this.preloaderActivo = true;\r\n    this.desactivado = true;\r\n    await this.empresasService.put(this.data.empresa).toPromise()\r\n      .then( empresadb => {\r\n        let movimiento = {\r\n          idUsuario: sessionStorage.id,\r\n          tipo: 2,\r\n          descripcion: `Se edito el nombre de la empresa de:  \"${this.oldEmpresa}\" A: \"${this.data.empresa.nombre}\"`\r\n        }\r\n        this.movimientosService.post(movimiento).subscribe(() => {\r\n          this.dialogRef.close();\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Se edito la empresa'\r\n          })\r\n        })\r\n      })\r\n      .catch(e => {\r\n        if(!e.error.mensaje)\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Error',\r\n            text: 'El servidor no esta conectado'\r\n          })\r\n        else \r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Error',\r\n            text: e.error.mensaje\r\n          })\r\n      }).finally(() => {\r\n        this.preloaderActivo = false;\r\n        this.desactivado = false;\r\n      });\r\n  }\r\n}\r\n","export default \".list-group a.list-group-item:hover{\\r\\n    color: white;\\r\\n    background-color: #4d4d4d;\\r\\n}\\r\\n\\r\\n.list-group a.list-group-item{\\r\\n    -webkit-transition: .1s;\\r\\n    transition: .1s;\\r\\n}\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9pbmRleC9pbmRleC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtJQUNaLHlCQUF5QjtBQUM3Qjs7QUFFQTtJQUNJLHVCQUFlO0lBQWYsZUFBZTtBQUNuQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaW5kZXgvaW5kZXguY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5saXN0LWdyb3VwIGEubGlzdC1ncm91cC1pdGVtOmhvdmVye1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzRkNGQ0ZDtcclxufVxyXG5cclxuLmxpc3QtZ3JvdXAgYS5saXN0LWdyb3VwLWl0ZW17XHJcbiAgICB0cmFuc2l0aW9uOiAuMXM7XHJcbn1cclxuXHJcbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport Swal from \"sweetalert2\";\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-index',\r\n  templateUrl: './index.component.html',\r\n  styleUrls: ['./index.component.css']\r\n})\r\nexport class IndexComponent implements OnInit {\r\n\r\n  public rol;\r\n\r\n  constructor(private router: Router) { this.validarUsuario(); }\r\n\r\n  ngOnInit() {\r\n    this.rol = parseInt(sessionStorage.rol);\r\n  }\r\n\r\n  // Tine prmisos o esta autenticado\r\n  validarUsuario(){\r\n    let id = sessionStorage.id;\r\n    if(!id){\r\n      this.router.navigate(['/']);\r\n      Swal.fire({\r\n        title: 'Error',\r\n        text: 'Debes iniciar sesion primero',\r\n        icon: 'warning'\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n","export default \"body{\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n    height: 100%;\\r\\n    background: #CCC;\\r\\n}\\r\\n.user_card {\\r\\n    height: 400px;\\r\\n    width: 350px;\\r\\n    margin-top: auto;\\r\\n    margin-bottom: auto;\\r\\n    background: #2ab7ca;\\r\\n    position: relative;\\r\\n    display: -webkit-box;\\r\\n    display: flex;\\r\\n    -webkit-box-pack: center;\\r\\n            justify-content: center;\\r\\n    -webkit-box-orient: vertical;\\r\\n    -webkit-box-direction: normal;\\r\\n            flex-direction: column;\\r\\n    padding: 10px;\\r\\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\r\\n    border-radius: 5px;\\r\\n\\r\\n}\\r\\n.brand_logo_container {\\r\\n    position: absolute;\\r\\n    height: 170px;\\r\\n    width: 170px;\\r\\n    top: -75px;\\r\\n    border-radius: 50%;\\r\\n    background: #CCC;\\r\\n    padding: 10px;\\r\\n    text-align: center;\\r\\n}\\r\\n.brand_logo {\\r\\n    height: 150px;\\r\\n    width: 150px;\\r\\n    border-radius: 50%;\\r\\n    border: 2px solid white;\\r\\n}\\r\\n.form_container {\\r\\n    margin-top: 100px;\\r\\n}\\r\\n.login_btn {\\r\\n    width: 100%;\\r\\n    background: #41393E !important;\\r\\n    color: white !important;\\r\\n}\\r\\n.login_btn:focus {\\r\\n    box-shadow: none !important;\\r\\n    outline: 0px !important;\\r\\n}\\r\\n.login_container {\\r\\n    padding: 0 2rem;\\r\\n}\\r\\n.input-group-text {\\r\\n    background: #41393E  !important;\\r\\n    color: white !important;\\r\\n    border: 0 !important;\\r\\n    border-radius: 0.25rem 0 0 0.25rem !important;\\r\\n}\\r\\n.input_user,\\r\\n.input_pass:focus {\\r\\n    box-shadow: none !important;\\r\\n    outline: 0px !important;\\r\\n}\\r\\n.custom-checkbox .custom-control-input:checked~.custom-control-label::before {\\r\\n    background-color: #41393E !important;\\r\\n}\\r\\na {\\r\\ncolor: white;\\r\\ntext-decoration: none;\\r\\nbackground-color: transparent;\\r\\n-webkit-text-decoration-skip: objects;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksU0FBUztJQUNULFVBQVU7SUFDVixZQUFZO0lBQ1osZ0JBQWdCO0FBQ3BCO0FBQ0E7SUFDSSxhQUFhO0lBQ2IsWUFBWTtJQUNaLGdCQUFnQjtJQUNoQixtQkFBbUI7SUFDbkIsbUJBQW1CO0lBQ25CLGtCQUFrQjtJQUNsQixvQkFBYTtJQUFiLGFBQWE7SUFDYix3QkFBdUI7WUFBdkIsdUJBQXVCO0lBQ3ZCLDRCQUFzQjtJQUF0Qiw2QkFBc0I7WUFBdEIsc0JBQXNCO0lBQ3RCLGFBQWE7SUFDYiw0RUFBNEU7SUFDNUUsa0JBQWtCOztBQUV0QjtBQUNBO0lBQ0ksa0JBQWtCO0lBQ2xCLGFBQWE7SUFDYixZQUFZO0lBQ1osVUFBVTtJQUNWLGtCQUFrQjtJQUNsQixnQkFBZ0I7SUFDaEIsYUFBYTtJQUNiLGtCQUFrQjtBQUN0QjtBQUNBO0lBQ0ksYUFBYTtJQUNiLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsdUJBQXVCO0FBQzNCO0FBQ0E7SUFDSSxpQkFBaUI7QUFDckI7QUFDQTtJQUNJLFdBQVc7SUFDWCw4QkFBOEI7SUFDOUIsdUJBQXVCO0FBQzNCO0FBQ0E7SUFDSSwyQkFBMkI7SUFDM0IsdUJBQXVCO0FBQzNCO0FBQ0E7SUFDSSxlQUFlO0FBQ25CO0FBQ0E7SUFDSSwrQkFBK0I7SUFDL0IsdUJBQXVCO0lBQ3ZCLG9CQUFvQjtJQUNwQiw2Q0FBNkM7QUFDakQ7QUFDQTs7SUFFSSwyQkFBMkI7SUFDM0IsdUJBQXVCO0FBQzNCO0FBQ0E7SUFDSSxvQ0FBb0M7QUFDeEM7QUFDQTtBQUNBLFlBQVk7QUFDWixxQkFBcUI7QUFDckIsNkJBQTZCO0FBQzdCLHFDQUFxQztBQUNyQyIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImJvZHl7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgYmFja2dyb3VuZDogI0NDQztcclxufVxyXG4udXNlcl9jYXJkIHtcclxuICAgIGhlaWdodDogNDAwcHg7XHJcbiAgICB3aWR0aDogMzUwcHg7XHJcbiAgICBtYXJnaW4tdG9wOiBhdXRvO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogYXV0bztcclxuICAgIGJhY2tncm91bmQ6ICMyYWI3Y2E7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgcGFkZGluZzogMTBweDtcclxuICAgIGJveC1zaGFkb3c6IDAgNHB4IDhweCAwIHJnYmEoMCwgMCwgMCwgMC4yKSwgMCA2cHggMjBweCAwIHJnYmEoMCwgMCwgMCwgMC4xOSk7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcblxyXG59XHJcbi5icmFuZF9sb2dvX2NvbnRhaW5lciB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBoZWlnaHQ6IDE3MHB4O1xyXG4gICAgd2lkdGg6IDE3MHB4O1xyXG4gICAgdG9wOiAtNzVweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIGJhY2tncm91bmQ6ICNDQ0M7XHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcbi5icmFuZF9sb2dvIHtcclxuICAgIGhlaWdodDogMTUwcHg7XHJcbiAgICB3aWR0aDogMTUwcHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICBib3JkZXI6IDJweCBzb2xpZCB3aGl0ZTtcclxufVxyXG4uZm9ybV9jb250YWluZXIge1xyXG4gICAgbWFyZ2luLXRvcDogMTAwcHg7XHJcbn1cclxuLmxvZ2luX2J0biB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGJhY2tncm91bmQ6ICM0MTM5M0UgIWltcG9ydGFudDtcclxuICAgIGNvbG9yOiB3aGl0ZSAhaW1wb3J0YW50O1xyXG59XHJcbi5sb2dpbl9idG46Zm9jdXMge1xyXG4gICAgYm94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xyXG4gICAgb3V0bGluZTogMHB4ICFpbXBvcnRhbnQ7XHJcbn1cclxuLmxvZ2luX2NvbnRhaW5lciB7XHJcbiAgICBwYWRkaW5nOiAwIDJyZW07XHJcbn1cclxuLmlucHV0LWdyb3VwLXRleHQge1xyXG4gICAgYmFja2dyb3VuZDogIzQxMzkzRSAgIWltcG9ydGFudDtcclxuICAgIGNvbG9yOiB3aGl0ZSAhaW1wb3J0YW50O1xyXG4gICAgYm9yZGVyOiAwICFpbXBvcnRhbnQ7XHJcbiAgICBib3JkZXItcmFkaXVzOiAwLjI1cmVtIDAgMCAwLjI1cmVtICFpbXBvcnRhbnQ7XHJcbn1cclxuLmlucHV0X3VzZXIsXHJcbi5pbnB1dF9wYXNzOmZvY3VzIHtcclxuICAgIGJveC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDtcclxuICAgIG91dGxpbmU6IDBweCAhaW1wb3J0YW50O1xyXG59XHJcbi5jdXN0b20tY2hlY2tib3ggLmN1c3RvbS1jb250cm9sLWlucHV0OmNoZWNrZWR+LmN1c3RvbS1jb250cm9sLWxhYmVsOjpiZWZvcmUge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzQxMzkzRSAhaW1wb3J0YW50O1xyXG59XHJcbmEge1xyXG5jb2xvcjogd2hpdGU7XHJcbnRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbi13ZWJraXQtdGV4dC1kZWNvcmF0aW9uLXNraXA6IG9iamVjdHM7XHJcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { LoginService } from 'src/app/services/login.service';\r\nimport { Router } from '@angular/router';\r\nimport Swal from \"sweetalert2\"\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent  {\r\n\r\n  public usuario = {\r\n    username: '',\r\n    password: ''\r\n  }\r\n\r\n  public preloaderActivo = false;\r\n  public desactivado = false;\r\n\r\n  constructor(private loginServices: LoginService, private router: Router, private loginService: LoginService) { }\r\n\r\n  async login() {\r\n    console.log(this.usuario)\r\n    this.preloaderActivo = true;\r\n    this.desactivado = true;\r\n    await this.loginServices.validarUsuario(this.usuario).toPromise()\r\n      .then( res => {\r\n          sessionStorage.setItem('id', res.id.toString());\r\n          sessionStorage.setItem('rol', res.rol.toString());\r\n          this.loginService.putStatusNavbar(true, res.rol);\r\n          Swal.fire({\r\n            title: 'Bienvenido de nuevo',\r\n            confirmButtonText: 'Seguir'\r\n          });\r\n          this.router.navigate(['/index']);\r\n        }\r\n      )\r\n      .catch(e => {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Hubo un error',\r\n          text: e.error.mensaje\r\n        });\r\n        this.loginService.putStatusNavbar(false, 0);\r\n      }).finally(() => {\r\n        this.preloaderActivo = false;\r\n        this.desactivado = false;\r\n      });\r\n  }\r\n\r\n}\r\n","export default \"::ng-deep .mat-sort-header-container {\\r\\n    display:-webkit-box;\\r\\n    display:flex;\\r\\n    -webkit-box-pack:center;\\r\\n            justify-content:center;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9tb3ZpbWllbnRvcy9tb3ZpbWllbnRvcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksbUJBQVk7SUFBWixZQUFZO0lBQ1osdUJBQXNCO1lBQXRCLHNCQUFzQjtFQUN4QiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbW92aW1pZW50b3MvbW92aW1pZW50b3MuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIjo6bmctZGVlcCAubWF0LXNvcnQtaGVhZGVyLWNvbnRhaW5lciB7XHJcbiAgICBkaXNwbGF5OmZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO1xyXG4gIH0iXX0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport Swal from \"sweetalert2\"\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport {MatSort} from '@angular/material/sort';\r\nimport { MovimientosService } from 'src/app/services/movimientos.service';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-movimientos',\r\n  templateUrl: './movimientos.component.html',\r\n  styleUrls: ['./movimientos.component.css']\r\n})\r\nexport class MovimientosComponent implements OnInit {\r\n  public movimientos : any = [];\r\n  public preloaderActivo = false;\r\n  public desactivado = false;\r\n\r\n  // Table\r\n  public displayedColumns: string[] = ['usuario', 'tipo', 'descripcion', 'fecha'];\r\n  public dataSource = new MatTableDataSource();\r\n\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n\r\n  constructor(\r\n    public movimientosService: MovimientosService,\r\n    public router: Router\r\n    ) { this.validarUsuario(); }\r\n\r\n\r\n  // Al iniciar\r\n  ngOnInit() {\r\n    this.conectarServidor();\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  // get all norms\r\n  conectarServidor(){\r\n    this.preloaderActivo = true;\r\n    this.desactivado = true;\r\n    this.movimientosService.get()\r\n      .subscribe(\r\n        data => {\r\n          this.movimientos = data;\r\n          for(let i = 0; i < this.movimientos.length; i++){\r\n            this.movimientos[i].fecha = this.movimientos[i]['fecha'].substring(0,10);\r\n          }\r\n          console.log(data);\r\n          this.preloaderActivo = false;\r\n          this.desactivado = false;\r\n          this.dataSource.data = this.movimientos\r\n        },\r\n        err => {\r\n          console.log(err);\r\n            Swal.fire({\r\n              icon: 'error',\r\n              title: 'Error',\r\n              text: err\r\n            });\r\n\r\n          this.preloaderActivo = false;\r\n          this.desactivado = false;\r\n        }\r\n      )\r\n  }\r\n\r\n  // Filtering\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  // Tine prmisos o esta autenticado\r\n  validarUsuario(){\r\n    let id = sessionStorage.id;\r\n    if(!id){\r\n      this.router.navigate(['/']);\r\n      Swal.fire({\r\n        title: 'Error',\r\n        text: 'Debes iniciar sesion primero',\r\n        icon: 'warning'\r\n      });\r\n    } else {\r\n      let rol = parseInt(sessionStorage.rol);\r\n      if(environment.permisos_Usuarios[rol].movimientos == false){\r\n        this.router.navigate(['/index']);\r\n        Swal.fire({\r\n          title: 'Error',\r\n          text: 'No tienes los permisos necesarios',\r\n          icon: 'warning'\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbmF2YmFyL25hdmJhci5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport Swal from 'sweetalert2';\r\nimport {Router} from '@angular/router';\r\nimport { LoginService } from 'src/app/services/login.service';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  public showNavbar = false;\r\n  public rol = 0\r\n\r\n  constructor(private router: Router, private loginService: LoginService) { }\r\n\r\n  ngOnInit() {\r\n    this.loginService.getStatusNavbar().subscribe(data => {\r\n      if(sessionStorage.getItem('id') && sessionStorage.rol){\r\n        this.showNavbar = true;\r\n        this.rol = parseInt(sessionStorage.rol);\r\n      } else {\r\n        this.showNavbar = data.status;\r\n        this.rol = data.rol;\r\n        console.log(data)\r\n      }\r\n    })\r\n  }\r\n\r\n  logOut(){\r\n    Swal.fire({\r\n      title: '¿Estas seguro que quieres cerrar sesion?',\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Si, ya me voy',\r\n      cancelButtonText: 'No, todavia no'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        Swal.fire({\r\n          title: 'Cerraste tu sesion',\r\n          icon: 'success'\r\n        });\r\n        sessionStorage.removeItem('id');\r\n        sessionStorage.removeItem('rol');\r\n        this.loginService.putStatusNavbar(false, 0);\r\n        this.router.navigate(['/']);\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbm9ybWFzL21vZGFscy9hZGQtbm9ybWEvYWRkLW5vcm1hLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { NormasService } from '../../../../services/normas.service';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport Swal from \"sweetalert2\";\r\nimport { MovimientosService } from 'src/app/services/movimientos.service';\r\n\r\n@Component({\r\n  selector: 'app-add-norma',\r\n  templateUrl: './add-norma.component.html',\r\n  styleUrls: ['./add-norma.component.css']\r\n})\r\nexport class AddNormaComponent {\r\n\r\n  public norma = {\r\n    codificacion: \"\"\r\n  }\r\n\r\n  public preloaderActivo = false;\r\n  public desactivado = false;\r\n  \r\n  constructor(\r\n    public normasService: NormasService,\r\n    public dialogRef: MatDialogRef<AddNormaComponent>,\r\n    public movimientosService: MovimientosService\r\n    ) { }\r\n\r\n\r\n  // Post a Norm\r\n  async guardar(){\r\n    this.preloaderActivo = true;\r\n    this.desactivado = true;\r\n    await this.normasService.post(this.norma).toPromise()\r\n      .then(\r\n        empresaDb => {\r\n          let movimiento = {\r\n            idUsuario: sessionStorage.id,\r\n            tipo: 1,\r\n            descripcion: `Se creo la Norma:  \"${this.norma.codificacion}\"`\r\n          }\r\n          this.movimientosService.post(movimiento).subscribe(() => {\r\n            Swal.fire({ \r\n              icon: 'success',\r\n              title: 'Se inserto la norma'\r\n            })\r\n            this.dialogRef.close(empresaDb);\r\n          })\r\n        }\r\n      )\r\n      .catch(e => {\r\n        if(!e.error.mensaje)\r\n          Swal.fire({ \r\n            icon: 'error',\r\n            title: 'Error',\r\n            text: 'El servidor no esta conectado'\r\n          })\r\n        else \r\n          Swal.fire({ \r\n            icon: 'error',\r\n            title: 'Error',\r\n            text: e.error.mensaje\r\n          })\r\n      }).finally( () => {\r\n        this.preloaderActivo = false;\r\n        this.desactivado = false;\r\n      })\r\n    \r\n  }\r\n\r\n\r\n  // Close the modal\r\n  cerrarModal(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbm9ybWFzL21vZGFscy9lZGl0LW5vcm1hL2VkaXQtbm9ybWEuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { NormasService } from 'src/app/services/normas.service';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MovimientosService } from 'src/app/services/movimientos.service';\r\nimport Swal from \"sweetalert2\"\r\n\r\n@Component({\r\n  selector: 'app-edit-norma',\r\n  templateUrl: './edit-norma.component.html',\r\n  styleUrls: ['./edit-norma.component.css']\r\n})\r\nexport class EditNormaComponent implements OnInit {\r\n\r\n  public norma = {\r\n    codificacion: \"\"\r\n  }\r\n\r\n\r\n\r\n  ngOnInit(){\r\n    this.norma.codificacion = this.data.codificacion;\r\n  }\r\n\r\n  public preloaderActivo = false;\r\n  public desactivado = false;\r\n  \r\n  constructor(\r\n    public normasService: NormasService,\r\n    public dialogRef: MatDialogRef<EditNormaComponent>,\r\n    public movimientosService: MovimientosService,\r\n    @Inject(MAT_DIALOG_DATA) public data:any,\r\n    ) { }\r\n\r\n\r\n  // Post a Norm\r\n  async guardar(){\r\n    this.preloaderActivo = true;\r\n    this.desactivado = true;\r\n    await this.normasService.editar(this.norma, this.data.id).toPromise()\r\n      .then(\r\n        empresaDb => {\r\n          let movimiento = {\r\n            idUsuario: sessionStorage.id,\r\n            tipo: 2,\r\n            descripcion: `Se edito la codificacion de la Norma de: \"${this.data.codificacion}\" A: \"${this.norma.codificacion}\"`\r\n          }\r\n          this.movimientosService.post(movimiento).subscribe(() => {\r\n            Swal.fire({ \r\n              icon: 'success',\r\n              title: 'Se inserto la norma'\r\n            })\r\n            this.dialogRef.close(empresaDb);\r\n          })\r\n        }\r\n      )\r\n      .catch(e => {\r\n        if(!e.error.mensaje)\r\n          Swal.fire({ \r\n            icon: 'error',\r\n            title: 'Error',\r\n            text: 'El servidor no esta conectado'\r\n          })\r\n        else \r\n          Swal.fire({ \r\n            icon: 'error',\r\n            title: 'Error',\r\n            text: e.error.mensaje\r\n          })\r\n      }).finally( () => {\r\n        this.preloaderActivo = false;\r\n        this.desactivado = false;\r\n      })\r\n    \r\n  }\r\n\r\n\r\n  // Close the modal\r\n  cerrarModal(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbm9ybWFzL25vcm1hcy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { NormasService } from '../../services/normas.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport Swal from \"sweetalert2\"\r\nimport { AddNormaComponent } from './modals/add-norma/add-norma.component';\r\nimport { environment } from 'src/environments/environment';\r\nimport { EditNormaComponent } from './modals/edit-norma/edit-norma.component';\r\nimport { MovimientosService } from 'src/app/services/movimientos.service';\r\n\r\n@Component({\r\n  selector: 'app-normas',\r\n  templateUrl: './normas.component.html',\r\n  styleUrls: ['./normas.component.css']\r\n})\r\nexport class NormasComponent implements OnInit {\r\n\r\n  public normas : any = [];\r\n  public preloaderActivo = false;\r\n  public desactivado = false;\r\n\r\n  // Table\r\n  public displayedColumns: string[] = ['codificacion', 'acciones'];\r\n  public dataSource = new MatTableDataSource();\r\n\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n\r\n  constructor(\r\n    public normasService: NormasService,\r\n    private router: Router,\r\n    public dialog: MatDialog,\r\n    public movimientosService: MovimientosService\r\n    ) { this.validarUsuario(); }\r\n\r\n\r\n  // Al iniciar\r\n  ngOnInit() {\r\n    this.conectarServidor();\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  // get all norms\r\n  conectarServidor(){\r\n    this.preloaderActivo = true;\r\n    this.desactivado = true;\r\n    this.normasService.get()\r\n      .subscribe(\r\n        data => {\r\n          this.normas = data;\r\n          console.log(this.normas);\r\n          this.preloaderActivo = false;\r\n          this.desactivado = false;\r\n          this.dataSource.data = this.normas;\r\n        },\r\n        err => {\r\n          console.log(err);\r\n            Swal.fire({\r\n              icon: 'error',\r\n              title: 'Error',\r\n              text: err\r\n            });\r\n\r\n          this.preloaderActivo = false;\r\n          this.desactivado = false;\r\n        }\r\n      )\r\n  }\r\n\r\n  // Abrir formulario en modal\r\n  async nuevo(){\r\n    const dialogRef = this.dialog.open(AddNormaComponent, {\r\n      width: '700px'\r\n    });\r\n\r\n    await dialogRef.afterClosed().subscribe(result => {    \r\n      this.conectarServidor();\r\n    }); \r\n  }\r\n\r\n   // Delete a empresa\r\n   async delete(data){\r\n    if(this.desactivado)\r\n      return false;\r\n\r\n    Swal.fire({\r\n      title: '¿Estas seguro que quieres borrar la norma?',\r\n      text: 'Esto eliminara todos los costos, cotizaciones y servicios que contengan la norma.',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Si, Borrar',\r\n      cancelButtonText: 'No, Cancelar'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.preloaderActivo = true;\r\n        this.desactivado = true;\r\n\r\n        this.normasService.delete(data.id).toPromise()\r\n        .then(db => {\r\n          let movimiento = {\r\n            idUsuario: sessionStorage.id,\r\n            tipo: 3,\r\n            descripcion: `Se borro la norma: \"${data.codificacion}\"`\r\n          }\r\n          this.movimientosService.post(movimiento).subscribe(() => {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              title: 'Se borro la morma.'\r\n            })\r\n            this.conectarServidor();\r\n          })\r\n        }).catch ( e => {\r\n          if(!e.error.mensaje)\r\n            Swal.fire({\r\n              icon: 'error',\r\n              title: 'Error',\r\n              text: 'El servidor no esta conectado'\r\n            })\r\n          else \r\n            Swal.fire({\r\n              icon: 'error',\r\n              title: 'Error',\r\n              text: e.error.mensaje\r\n            })\r\n        }).finally(() => {\r\n          this.preloaderActivo = false;\r\n          this.desactivado = false;\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  // Edit \r\n  async editar(data){\r\n    const dialogRef = this.dialog.open(EditNormaComponent, {\r\n      width: '700px',\r\n      data: {\r\n        id: data.id,\r\n        codificacion: data.codificacion\r\n      }\r\n    });\r\n\r\n    await dialogRef.afterClosed().subscribe(result => {    \r\n      this.conectarServidor();\r\n    }); \r\n  }\r\n\r\n  // Filtering\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  // Tine prmisos o esta autenticado\r\n  validarUsuario(){\r\n    let id = sessionStorage.id;\r\n    if(!id){\r\n      this.router.navigate(['/']);\r\n      Swal.fire({\r\n        title: 'Error',\r\n        text: 'Debes iniciar sesion primero',\r\n        icon: 'warning'\r\n      });\r\n    } else {\r\n      let rol = parseInt(sessionStorage.rol);\r\n      if(environment.permisos_Usuarios[rol].normas == false){\r\n        this.router.navigate(['/index']);\r\n        Swal.fire({\r\n          title: 'Error',\r\n          text: 'No tienes los permisos necesarios',\r\n          icon: 'warning'\r\n        });\r\n      }\r\n    }\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcHJvc3BlY3Rvcy9tb2RhbHMvYWRkLXByb3NwZWN0by9hZGQtcHJvc3BlY3RvLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { EmpresasService } from 'src/app/services/empresas.service';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport Swal from \"sweetalert2\";\r\nimport { ProspectosService } from 'src/app/services/prospectos.service';\r\nimport { MovimientosService } from 'src/app/services/movimientos.service';\r\n\r\n@Component({\r\n  selector: 'app-add-prospecto',\r\n  templateUrl: './add-prospecto.component.html',\r\n  styleUrls: ['./add-prospecto.component.css']\r\n})\r\nexport class AddProspectoComponent implements OnInit {\r\n\r\n  \r\n  public empresas;\r\n  public prospecto = {\r\n    idEmpresa : 0,\r\n    nombre: \"\",\r\n    telefono: \"\",\r\n    correo: \"\",\r\n    direccion: \"\"\r\n  }\r\n\r\n  public preloaderActivo = false;\r\n  public desactivado = false;\r\n  \r\n  constructor(\r\n    public empresasService: EmpresasService,\r\n    public dialogRef: MatDialogRef<AddProspectoComponent>,\r\n    public prospectosService: ProspectosService,\r\n    public movimientosService: MovimientosService\r\n    ) { }\r\n  \r\n\r\n  ngOnInit(){\r\n    this.getEmpresas();\r\n  }\r\n\r\n\r\n  // Post a Norm\r\n  async getEmpresas(){\r\n    this.preloaderActivo = true;\r\n    this.desactivado = true;\r\n    await this.empresasService.get().\r\n      subscribe(\r\n        empresaDb => {\r\n          this.empresas = empresaDb;\r\n          console.log(this.empresas);\r\n        },\r\n        e => {\r\n          if(!e.error.mensaje)\r\n          Swal.fire({ \r\n            icon: 'error',\r\n            title: 'Error',\r\n            text: 'El servidor no esta conectado'\r\n          })\r\n        else \r\n          Swal.fire({ \r\n            icon: 'error',\r\n            title: 'Error',\r\n            text: e.error.mensaje\r\n          })\r\n        }, \r\n        () => {\r\n          this.preloaderActivo = false;\r\n          this.desactivado = false;\r\n        }\r\n      );\r\n  }\r\n\r\n  async guardar(){\r\n    console.log(this.prospecto);\r\n    await this.prospectosService.post(this.prospecto)\r\n      .subscribe(res => {\r\n        let movimiento = {\r\n          idUsuario: sessionStorage.id,\r\n          tipo: 1,\r\n          descripcion: `Se creo el prospecto:  ${this.prospecto.nombre}`\r\n        }\r\n        this.movimientosService.post(movimiento).subscribe(() => {\r\n          Swal.fire({ \r\n            icon: 'success',\r\n            title: 'Se inserto el prospecto'\r\n          })\r\n          this.dialogRef.close('ok');\r\n        })\r\n      }, \r\n      e => {\r\n        if(!e.error.mensaje)\r\n          Swal.fire({ \r\n            icon: 'error',\r\n            title: 'Error',\r\n            text: 'El servidor no esta conectado'\r\n          })\r\n        else \r\n          Swal.fire({ \r\n            icon: 'error',\r\n            title: 'Error',\r\n            text: e.error.mensaje\r\n          })\r\n      }, \r\n      () => {\r\n        this.preloaderActivo = false;\r\n        this.desactivado = false;\r\n      });\r\n  }\r\n\r\n  // Close the modal\r\n  cerrarModal(){\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcHJvc3BlY3Rvcy9tb2RhbHMvZWRpdC1wcm9zcGVjdC9lZGl0LXByb3NwZWN0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { EmpresasService } from 'src/app/services/empresas.service';\r\nimport { AddProspectoComponent } from '../add-prospecto/add-prospecto.component';\r\nimport { ProspectosService } from 'src/app/services/prospectos.service';\r\nimport { MovimientosService } from 'src/app/services/movimientos.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-edit-prospect',\r\n  templateUrl: './edit-prospect.component.html',\r\n  styleUrls: ['./edit-prospect.component.css']\r\n})\r\nexport class EditProspectComponent implements OnInit {\r\n  \r\n  public empresas;\r\n  public prospecto = {\r\n    idEmpresa : 0,\r\n    nombre: \"\",\r\n    telefono: \"\",\r\n    correo: \"\",\r\n    direccion: \"\"\r\n  }\r\n\r\n  public preloaderActivo = false;\r\n  public desactivado = false;\r\n  \r\n  constructor(\r\n    public empresasService: EmpresasService,\r\n    public dialogRef: MatDialogRef<EditProspectComponent>,\r\n    public prospectosService: ProspectosService,\r\n    public movimientosService: MovimientosService,\r\n    @Inject(MAT_DIALOG_DATA) public data:any\r\n    ) { }\r\n  \r\n\r\n  ngOnInit(){\r\n    this.prospecto.idEmpresa = this.data.idEmpresa;\r\n    this.prospecto.nombre = this.data.nombre;\r\n    this.prospecto.telefono = this.data.telefono;\r\n    this.prospecto.correo = this.data.correo;\r\n    this.prospecto.direccion = this.data.direccion;\r\n    this.getEmpresas();\r\n  }\r\n\r\n\r\n  // Post a Norm\r\n  async getEmpresas(){\r\n    this.preloaderActivo = true;\r\n    this.desactivado = true;\r\n    await this.empresasService.get().\r\n      subscribe(\r\n        empresaDb => {\r\n          this.empresas = empresaDb;\r\n          console.log(this.empresas);\r\n        },\r\n        e => {\r\n          if(!e.error.mensaje)\r\n          Swal.fire({ \r\n            icon: 'error',\r\n            title: 'Error',\r\n            text: 'El servidor no esta conectado'\r\n          })\r\n        else \r\n          Swal.fire({ \r\n            icon: 'error',\r\n            title: 'Error',\r\n            text: e.error.mensaje\r\n          })\r\n        }, \r\n        () => {\r\n          this.preloaderActivo = false;\r\n          this.desactivado = false;\r\n        }\r\n      );\r\n  }\r\n\r\n  async guardar(){\r\n    let aux, aux2;\r\n    for(let i = 0; i < this.empresas.length; i++){\r\n      if(this.empresas[i].id == this.data.idEmpresa)\r\n        aux = this.empresas[i].nombre\r\n      if(this.empresas[i].id == this.prospecto.idEmpresa)\r\n        aux2 = this.empresas[i].nombre\r\n      if(aux && aux2)\r\n        break;\r\n    }\r\n  \r\n    await this.prospectosService.editar(this.prospecto, this.data.id )\r\n      .subscribe(res => {\r\n        let movimiento = {\r\n          idUsuario: sessionStorage.id,\r\n          tipo: 2,\r\n          descripcion: `Se modifico el prospecto de la empresa: \"${aux}\", con nombre: \"${this.data.nombre}\", telefono: \"${this.data.telefono}\", correo: \"${this.data.correo}\" y dirección: \"${this.data.direccion}\" A la empresa: \"${aux2}\", nombre: \"${this.prospecto.nombre}\", telefono: \"${this.prospecto.telefono}\", correo: \"${this.prospecto.correo}\" y dirección: \"${this.prospecto.direccion}\"`\r\n        }\r\n        this.movimientosService.post(movimiento).subscribe(() => {\r\n          Swal.fire({ \r\n            icon: 'success',\r\n            title: 'Se edito el prospecto'\r\n          })\r\n          this.dialogRef.close('ok');\r\n        })\r\n      }, \r\n      e => {\r\n        if(!e.error.mensaje)\r\n          Swal.fire({ \r\n            icon: 'error',\r\n            title: 'Error',\r\n            text: 'El servidor no esta conectado'\r\n          })\r\n        else \r\n          Swal.fire({ \r\n            icon: 'error',\r\n            title: 'Error',\r\n            text: e.error.mensaje\r\n          })\r\n      }, \r\n      () => {\r\n        this.preloaderActivo = false;\r\n        this.desactivado = false;\r\n      });\r\n  }\r\n\r\n  // Close the modal\r\n  cerrarModal(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcHJvc3BlY3Rvcy9tb2RhbHMvdmFsaWRhci1wcm9zcGVjdG8vdmFsaWRhci1wcm9zcGVjdG8uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { ProspectosService } from '../../../../services/prospectos.service';\r\nimport Swal from \"sweetalert2\";\r\nimport { MovimientosService } from 'src/app/services/movimientos.service';\r\n\r\n@Component({\r\n  selector: 'app-validar-prospecto',\r\n  templateUrl: './validar-prospecto.component.html',\r\n  styleUrls: ['./validar-prospecto.component.css']\r\n})\r\nexport class ValidarProspectoComponent implements OnInit {\r\n\r\n  public prospecto = {\r\n    contratos: false,\r\n    acta: false,\r\n    rfc: false,\r\n    carta: false\r\n  }\r\n\r\n  public preloaderActivo = false;\r\n  public desactivado = false;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data,\r\n    public dialogRef: MatDialogRef<ValidarProspectoComponent>,\r\n    public prospectosService: ProspectosService,\r\n    public movimientosService: MovimientosService\r\n    ) { }\r\n\r\n  ngOnInit() {\r\n    console.log(this.data);\r\n    this.prospecto = this.data\r\n  }\r\n\r\n  // Close the modal\r\n  cerrarModal(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  guardar(){\r\n    let aux = '';\r\n    if(this.prospecto.acta)\r\n      aux += 'Acta Constitutiva, '\r\n    if(this.prospecto.carta)\r\n      aux += 'Carta Poder, '\r\n    if(this.prospecto.contratos)\r\n      aux += 'Contrato Original UVA/OCP, '\r\n    if(this.prospecto.rfc)\r\n      aux += 'RFC, '\r\n      console.log(this.prospecto, aux);\r\n    this.prospectosService.put(this.prospecto, this.data.id)\r\n    .subscribe(res => {\r\n      let movimiento = {\r\n        idUsuario: sessionStorage.id,\r\n        tipo: 2,\r\n        descripcion: `A el prospecto: \"${this.data.nombre}\", se le validaron los siguientes documentos: \"${aux}\"`\r\n      }\r\n      this.movimientosService.post(movimiento).subscribe(() => {\r\n        this.dialogRef.close();\r\n        Swal.fire({ \r\n          icon: 'success',\r\n          title: 'Se actualizo el prospecto'\r\n        })\r\n      })\r\n    }, \r\n    e => {\r\n      if(!e.error.mensaje)\r\n        Swal.fire({ \r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: 'El servidor no esta conectado'\r\n        })\r\n      else \r\n        Swal.fire({ \r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: e.error.mensaje\r\n        })\r\n    }, \r\n    () => {\r\n      this.preloaderActivo = false;\r\n      this.desactivado = false;\r\n    });\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcHJvc3BlY3Rvcy9wcm9zcGVjdG9zLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { ProspectosService } from 'src/app/services/prospectos.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport Swal from \"sweetalert2\";\r\nimport { AddProspectoComponent } from './modals/add-prospecto/add-prospecto.component';\r\nimport { ValidarProspectoComponent } from './modals/validar-prospecto/validar-prospecto.component';\r\nimport { environment } from 'src/environments/environment';\r\nimport { EditProspectComponent } from './modals/edit-prospect/edit-prospect.component';\r\nimport { MovimientosService } from 'src/app/services/movimientos.service';\r\n\r\n@Component({\r\n  selector: 'app-prospectos',\r\n  templateUrl: './prospectos.component.html',\r\n  styleUrls: ['./prospectos.component.css']\r\n})\r\nexport class ProspectosComponent implements OnInit {\r\n\r\n  public prospectos : any = [];\r\n  public preloaderActivo = false;\r\n  public desactivado = false;\r\n\r\n    // Table\r\n  public displayedColumns: string[] = ['empresa', 'nombre', 'telefono', 'fecha', 'acciones'];\r\n  public dataSource = new MatTableDataSource();\r\n  \r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  \r\n  constructor(\r\n    public prospectosServices: ProspectosService,\r\n    private router: Router,\r\n    public dialog: MatDialog,\r\n    private movimientosService: MovimientosService\r\n    ) {this.validarUsuario() }\r\n\r\n\r\n  // Al iniciar\r\n  ngOnInit() {\r\n    this.conectarServidor();\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  // get all norms\r\n  conectarServidor(){\r\n    this.preloaderActivo = true;\r\n    this.desactivado = true;\r\n    this.prospectosServices.get()\r\n      .subscribe(\r\n        prospectos => {\r\n          this.prospectos = prospectos;\r\n          console.log(this.prospectos);\r\n          for(let i = 0; i < this.prospectos.length; i++){\r\n            this.prospectos[i].fecha = this.prospectos[i].fecha.substring(0,10);\r\n          }\r\n          this.preloaderActivo = false;\r\n          this.desactivado = false;\r\n          this.dataSource.data = this.prospectos\r\n        },\r\n        err => {\r\n          console.log(err);\r\n            Swal.fire({\r\n              icon: 'error',\r\n              title: 'Error',\r\n              text: err\r\n            });\r\n\r\n          this.preloaderActivo = false;\r\n          this.desactivado = false;\r\n        }\r\n      )\r\n  }\r\n\r\n  // Filtering\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  // Abrir formulario en modal\r\n  async addProspecto(){\r\n    const dialogRef = this.dialog.open(AddProspectoComponent, {\r\n      width: '700px'\r\n    });\r\n\r\n    await dialogRef.afterClosed().subscribe(() => {    \r\n      this.conectarServidor();\r\n    }); \r\n  }\r\n\r\n  async validar(data){\r\n    const dialogRef = this.dialog.open(ValidarProspectoComponent, {\r\n      width: '700px',\r\n      data: {\r\n        id: data.id,\r\n        acta: data.acta,\r\n        contratos: data.contratos,\r\n        carta: data.carta,\r\n        rfc: data.rfc,\r\n        nombre: data.nombre\r\n      }\r\n    });\r\n\r\n    await dialogRef.afterClosed().subscribe(res => {\r\n      this.conectarServidor();\r\n    })\r\n  }\r\n\r\n  // Tine prmisos o esta autenticado\r\n  validarUsuario(){\r\n    let id = sessionStorage.id;\r\n    if(!id){\r\n      this.router.navigate(['/']);\r\n      Swal.fire({\r\n        title: 'Error',\r\n        text: 'Debes iniciar sesion primero',\r\n        icon: 'warning'\r\n      });\r\n    } else {\r\n      let rol = parseInt(sessionStorage.rol);\r\n      if(environment.permisos_Usuarios[rol].prospectos == false){\r\n        this.router.navigate(['/index']);\r\n        Swal.fire({\r\n          title: 'Error',\r\n          text: 'No tienes los permisos necesarios',\r\n          icon: 'warning'\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  async editar(data){\r\n    const dialogRef = this.dialog.open(EditProspectComponent, {\r\n      width: '700px',\r\n      data: {\r\n        id: data.id,\r\n        nombre: data.nombre,\r\n        idEmpresa: data.idEmpresa,\r\n        telefono: data.telefono,\r\n        correo: data.correo,\r\n        direccion: data.direccion\r\n      }\r\n    });\r\n\r\n    await dialogRef.afterClosed().subscribe(res => {\r\n      this.conectarServidor();\r\n    })\r\n  }\r\n\r\n  validado(){\r\n    Swal.fire({\r\n      title: 'Listo',\r\n      text: 'El prospecto ya tiene validado los siguientes documentos: Acta Constitutiva, Contrato Original UVA / OCP, RFC, y Carta Poder',\r\n      icon: 'success'\r\n    });\r\n  }\r\n\r\n  delete(data){\r\n    if(this.desactivado)\r\n      return false;\r\n\r\n    Swal.fire({\r\n      title: '¿Estas seguro que quieres borrar el prospecto?',\r\n      text: 'Esto significa que se borraran todos los servicios relacionados con el prospecto',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Si, Borrar',\r\n      cancelButtonText: 'No, Cancelar'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.preloaderActivo = true;\r\n        this.desactivado = true;\r\n\r\n        this.prospectosServices.delete(data.id).toPromise()\r\n        .then(db => {\r\n          let movimiento = {\r\n            idUsuario: sessionStorage.id,\r\n            tipo: 3,\r\n            descripcion: `Se borro el prospecto: \"${data.nombre}\", que era de la empresa: \"${data.empresa}\" con el telefono: \"${data.telefono}\" y el correo: \"${data.correo}\"`\r\n          }\r\n          this.movimientosService.post(movimiento).subscribe(() => {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              title: 'Se borro el prospecto'\r\n            })\r\n            this.conectarServidor();\r\n          })\r\n        }).catch ( e => {\r\n          if(!e.error.mensaje)\r\n            Swal.fire({\r\n              icon: 'error',\r\n              title: 'Error',\r\n              text: 'El servidor no esta conectado'\r\n            })\r\n          else \r\n            Swal.fire({\r\n              icon: 'error',\r\n              title: 'Error',\r\n              text: e.error.mensaje\r\n            })\r\n        }).finally(() => {\r\n          this.preloaderActivo = false;\r\n          this.desactivado = false;\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2VydmljaW9zL21vZGFscy9hZGQtc2VydmljaW8vYWRkLXNlcnZpY2lvLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport Swal from \"sweetalert2\"\r\nimport { NormasService } from 'src/app/services/normas.service';\r\nimport { ProspectosService } from 'src/app/services/prospectos.service';\r\nimport { ServiciosService } from 'src/app/services/servicios.service';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MovimientosService } from 'src/app/services/movimientos.service';\r\n\r\n@Component({\r\n  selector: 'app-add-servicio',\r\n  templateUrl: './add-servicio.component.html',\r\n  styleUrls: ['./add-servicio.component.css']\r\n})\r\nexport class AddServicioComponent implements OnInit {\r\n\r\n  \r\n  public servicio = {\r\n    idNorma: 0,\r\n    idProspecto: 0,\r\n    tipoServicio: 0,\r\n  }\r\n\r\n  public preloaderActivo = false;\r\n  public desactivado = false;\r\n  public normas: any = [];\r\n  public prospectos: any = [];\r\n\r\n  constructor(\r\n    public normasService: NormasService,\r\n    public prospectosService: ProspectosService,\r\n    public dialogRef: MatDialogRef<AddServicioComponent>,\r\n    public serviciosService: ServiciosService,\r\n    public movimientosService: MovimientosService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getNormas();\r\n    this.getProspectos();\r\n  }\r\n\r\n  getNormas(){\r\n    this.normasService.get()\r\n    .subscribe(\r\n      data => {\r\n        this.normas = data;\r\n        console.log(this.normas);\r\n        this.preloaderActivo = false;\r\n        this.desactivado = false;\r\n      },\r\n      err => {\r\n        console.log(err);\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Error',\r\n            text: err\r\n          });\r\n\r\n        this.preloaderActivo = false;\r\n        this.desactivado = false;\r\n      }\r\n    )\r\n  }\r\n\r\n  getProspectos(){\r\n    this.prospectosService.get()\r\n    .subscribe(\r\n      data => {\r\n        this.prospectos = data;\r\n        console.log(this.prospectos);\r\n        this.preloaderActivo = false;\r\n        this.desactivado = false;\r\n      },\r\n      err => {\r\n        console.log(err);\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Error',\r\n            text: err\r\n          });\r\n\r\n        this.preloaderActivo = false;\r\n        this.desactivado = false;\r\n      }\r\n    )\r\n  }\r\n\r\n   // Close the modal\r\n   cerrarModal(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n   async guardar(){\r\n     console.log(this.servicio);\r\n    await this.serviciosService.post(this.servicio)\r\n      .subscribe(res => {\r\n        let movimiento = {\r\n          idUsuario: sessionStorage.id,\r\n          tipo: 1,\r\n          descripcion: `Se agrego un nuevo servicio para el prospecto:  ${res['nombre']},  en la norma: ${res['codificacion']}`\r\n        }\r\n        this.movimientosService.post(movimiento).subscribe(() => {\r\n          Swal.fire({ \r\n            icon: 'success',\r\n            title: 'Se inserto el servicio'\r\n          })\r\n          this.dialogRef.close('ok');\r\n        })\r\n      }, \r\n      e => {\r\n        if(!e.error.mensaje)\r\n          Swal.fire({ \r\n            icon: 'error',\r\n            title: 'Error',\r\n            text: 'El servidor no esta conectado'\r\n          })\r\n        else \r\n          Swal.fire({ \r\n            icon: 'error',\r\n            title: 'Error',\r\n            text: e.error.mensaje\r\n          })\r\n      }, \r\n      () => {\r\n        this.preloaderActivo = false;\r\n        this.desactivado = false;\r\n      });\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2VydmljaW9zL21vZGFscy92YWxpZGFyLWRvcy92YWxpZGFyLWRvcy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ServiciosService } from 'src/app/services/servicios.service';\r\nimport Swal from \"sweetalert2\"\r\n\r\n@Component({\r\n  selector: 'app-validar-dos',\r\n  templateUrl: './validar-dos.component.html',\r\n  styleUrls: ['./validar-dos.component.css']\r\n})\r\nexport class ValidarDosComponent  {\r\n\r\n  public servicio = {\r\n    ingresado: 0,\r\n    referencia: \"\",\r\n    facturado: 0\r\n  }\r\n  \r\n  public preloaderActivo = false;\r\n  public desactivado = false;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<ValidarDosComponent>,\r\n    public serviciosService: ServiciosService,\r\n    @Inject(MAT_DIALOG_DATA) public data:any\r\n  ) { }\r\n\r\n\r\n  // Close the modal\r\n  cerrarModal(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  guardar(){\r\n    this.servicio.ingresado = (this.servicio.ingresado) ? 1 : 0\r\n    this.servicio.facturado = (this.servicio.facturado) ? 1 : 0\r\n    console.log(this.servicio)\r\n    this.serviciosService.putEstatusDos(this.servicio, this.data.id)\r\n    .subscribe(res => {\r\n      Swal.fire({ \r\n        icon: 'success',\r\n        title: 'Se actualizo el servicio'\r\n      })\r\n      this.dialogRef.close('ok');\r\n    }, \r\n    e => {\r\n      if(!e.error.mensaje)\r\n        Swal.fire({ \r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: 'El servidor no esta conectado'\r\n        })\r\n      else \r\n        Swal.fire({ \r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: e.error.mensaje\r\n        })\r\n    }, \r\n    () => {\r\n      this.preloaderActivo = false;\r\n      this.desactivado = false;\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2VydmljaW9zL21vZGFscy92YWxpZGFyLXRyZXMvdmFsaWRhci10cmVzLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ServiciosService } from 'src/app/services/servicios.service';\r\nimport Swal from \"sweetalert2\"\r\n\r\n@Component({\r\n  selector: 'app-validar-tres',\r\n  templateUrl: './validar-tres.component.html',\r\n  styleUrls: ['./validar-tres.component.css']\r\n})\r\nexport class ValidarTresComponent  {\r\n\r\n  public servicio = {\r\n    comunicado: 0,\r\n    certificado: 0\r\n  }\r\n  \r\n  public preloaderActivo = false;\r\n  public desactivado = false;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<ValidarTresComponent>,\r\n    public serviciosService: ServiciosService,\r\n    @Inject(MAT_DIALOG_DATA) public data:any\r\n  ) { }\r\n\r\n\r\n  // Close the modal\r\n  cerrarModal(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  guardar(){\r\n    this.servicio.comunicado = (this.servicio.comunicado) ? 1 : 0\r\n    this.servicio.certificado = (this.servicio.certificado) ? 1 : 0\r\n    console.log(this.servicio)\r\n    this.serviciosService.putEstatusTres(this.servicio, this.data.id)\r\n    .subscribe(res => {\r\n      Swal.fire({ \r\n        icon: 'success',\r\n        title: 'Se actualizo el servicio'\r\n      })\r\n      this.dialogRef.close('ok');\r\n    }, \r\n    e => {\r\n      if(!e.error.mensaje)\r\n        Swal.fire({ \r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: 'El servidor no esta conectado'\r\n        })\r\n      else \r\n        Swal.fire({ \r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: e.error.mensaje\r\n        })\r\n    }, \r\n    () => {\r\n      this.preloaderActivo = false;\r\n      this.desactivado = false;\r\n    });\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2VydmljaW9zL21vZGFscy92YWxpZGFyLXVuby92YWxpZGFyLXVuby5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport Swal from \"sweetalert2\"\r\nimport { ServiciosService } from 'src/app/services/servicios.service';\r\n\r\n@Component({\r\n  selector: 'app-validar-uno',\r\n  templateUrl: './validar-uno.component.html',\r\n  styleUrls: ['./validar-uno.component.css']\r\n})\r\nexport class ValidarUnoComponent implements OnInit  {\r\n\r\n  public servicio = {\r\n    contratos: 0,\r\n    idUsuario: 0\r\n  }\r\n  \r\n  public preloaderActivo = false;\r\n  public desactivado = false;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<ValidarUnoComponent>,\r\n    public serviciosService: ServiciosService,\r\n    @Inject(MAT_DIALOG_DATA) public data:any\r\n  ) { }\r\n\r\n  // on init\r\n  ngOnInit(){\r\n    this.servicio.contratos = this.data.contratos;\r\n    this.servicio.idUsuario = this.data.idUsuario;\r\n  }\r\n\r\n  // Close the modal\r\n  cerrarModal(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  guardar(){\r\n    console.log(this.servicio);\r\n    if(!this.servicio.contratos || !this.servicio.idUsuario)\r\n      console.log('object');\r\n    return \r\n    this.servicio.contratos = (this.servicio.contratos) ? 1: 0;\r\n    console.log(this.servicio)\r\n    this.serviciosService.putEstatusUno(this.servicio, this.data.id)\r\n    .subscribe(res => {\r\n      Swal.fire({ \r\n        icon: 'success',\r\n        title: 'Se actualizo el servicio'\r\n      })\r\n      this.dialogRef.close('ok');\r\n    }, \r\n    e => {\r\n      if(!e.error.mensaje)\r\n        Swal.fire({ \r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: 'El servidor no esta conectado'\r\n        })\r\n      else \r\n        Swal.fire({ \r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: e.error.mensaje\r\n        })\r\n    }, \r\n    () => {\r\n      this.preloaderActivo = false;\r\n      this.desactivado = false;\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2VydmljaW9zL3NlcnZpY2lvcy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { ServiciosService } from 'src/app/services/servicios.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport Swal from \"sweetalert2\"\r\nimport { AddServicioComponent } from './modals/add-servicio/add-servicio.component';\r\nimport { ValidarUnoComponent } from './modals/validar-uno/validar-uno.component';\r\nimport { ValidarDosComponent } from './modals/validar-dos/validar-dos.component';\r\nimport { ValidarTresComponent } from './modals/validar-tres/validar-tres.component';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-servicios',\r\n  templateUrl: './servicios.component.html',\r\n  styleUrls: ['./servicios.component.css']\r\n})\r\nexport class ServiciosComponent implements OnInit {\r\n\r\n  \r\n  public servicios : any = [];\r\n  public preloaderActivo = false;\r\n  public desactivado = false;\r\n\r\n  // Table\r\n  public displayedColumns: string[] = ['nombre', 'fecha', 'codificacion', 'servicio', 'estatus', 'acciones'];\r\n  public dataSource = new MatTableDataSource();\r\n\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n\r\n  constructor(\r\n    public serviciosService: ServiciosService,\r\n    private router: Router,\r\n    public dialog: MatDialog\r\n    ) { this.validarUsuario(); }\r\n\r\n\r\n  // Al iniciar\r\n  ngOnInit() {\r\n    this.conectarServidor();\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  // get all norms\r\n  conectarServidor(){\r\n    this.preloaderActivo = true;\r\n    this.desactivado = true;\r\n    this.serviciosService.get()\r\n      .subscribe(\r\n        data => {\r\n          this.servicios = data;\r\n          for(let i = 0; i < this.servicios.length; i++){\r\n            this.servicios[i].fecha = this.servicios[i].fecha.substring(0,10);\r\n          }\r\n          console.log(this.servicios);\r\n          this.preloaderActivo = false;\r\n          this.desactivado = false;\r\n          this.dataSource.data = this.servicios;\r\n        },\r\n        err => {\r\n          console.log(err);\r\n            Swal.fire({\r\n              icon: 'error',\r\n              title: 'Error',\r\n              text: err\r\n            });\r\n\r\n          this.preloaderActivo = false;\r\n          this.desactivado = false;\r\n        }\r\n      )\r\n  }\r\n\r\n  // Abrir formulario en modal\r\n  async nuevo(){\r\n    const dialogRef = this.dialog.open(AddServicioComponent, {\r\n      width: '700px'\r\n    });\r\n\r\n    await dialogRef.afterClosed().subscribe(result => {    \r\n      this.conectarServidor();\r\n    }); \r\n  }\r\n\r\n  // Filtering\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  async validarUno(data){\r\n    const dialogRef = this.dialog.open(ValidarUnoComponent, {\r\n      width: '700px',\r\n      data: {\r\n        id: data.id,\r\n        contratos: data.contratos,\r\n        idUsuario: data.idUsuario\r\n      }\r\n    });\r\n\r\n    await dialogRef.afterClosed().subscribe(result => {    \r\n      this.conectarServidor();\r\n    }); \r\n  }\r\n\r\n  async validarDos(data){\r\n    const dialogRef = this.dialog.open(ValidarDosComponent, {\r\n      width: '700px',\r\n      data: {\r\n\r\n      }\r\n    });\r\n\r\n    await dialogRef.afterClosed().subscribe(result => {    \r\n      this.conectarServidor();\r\n    }); \r\n  }\r\n\r\n  async validarTres(data){\r\n    const dialogRef = this.dialog.open(ValidarTresComponent, {\r\n      width: '700px',\r\n      data: {\r\n\r\n      }\r\n    });\r\n\r\n    await dialogRef.afterClosed().subscribe(result => {    \r\n      this.conectarServidor();\r\n    }); \r\n  }\r\n\r\n  // Tine prmisos o esta autenticado\r\n  validarUsuario(){\r\n    let id = sessionStorage.id;\r\n    if(!id){\r\n      this.router.navigate(['/']);\r\n      Swal.fire({\r\n        title: 'Error',\r\n        text: 'Debes iniciar sesion primero',\r\n        icon: 'warning'\r\n      });\r\n    } else {\r\n      let rol = parseInt(sessionStorage.rol);\r\n      if(environment.permisos_Usuarios[rol].servicios == false){\r\n        this.router.navigate(['/index']);\r\n        Swal.fire({\r\n          title: 'Error',\r\n          text: 'No tienes los permisos necesarios',\r\n          icon: 'warning'\r\n        });\r\n      }\r\n    }\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdGlwby1zZXJ2aWNpby9tb2RhbHMvYWRkLXRpcG8tc2VydmljaW8vYWRkLXRpcG8tc2VydmljaW8uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport Swal from \"sweetalert2\"\r\nimport { TipoServicioService } from '../../../../services/tipo-servicio.service';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MovimientosService } from 'src/app/services/movimientos.service';\r\n\r\n@Component({\r\n  selector: 'app-add-tipo-servicio',\r\n  templateUrl: './add-tipo-servicio.component.html',\r\n  styleUrls: ['./add-tipo-servicio.component.css']\r\n})\r\nexport class AddTipoServicioComponent {\r\n\r\n \r\n  public tipoServicio = {\r\n    nombre: \"\"\r\n  }\r\n\r\n  public preloaderActivo = false;\r\n  public desactivado = false;\r\n  \r\n  constructor(\r\n    public tipoService: TipoServicioService,\r\n    public dialogRef: MatDialogRef<AddTipoServicioComponent>,\r\n    public movimientosService: MovimientosService\r\n    ) { }\r\n\r\n\r\n  // Post a Norm\r\n  async guardar(){\r\n    this.preloaderActivo = true;\r\n    this.desactivado = true;\r\n    await this.tipoService.post(this.tipoServicio).toPromise()\r\n      .then(\r\n        empresaDb => {\r\n\r\n          let movimiento = {\r\n            idUsuario: sessionStorage.id,\r\n            tipo: 1,\r\n            descripcion: `Se creo el tipo de servicio:  \"${this.tipoServicio.nombre}\"`\r\n          }\r\n          this.movimientosService.post(movimiento).subscribe(() => {\r\n            Swal.fire({ \r\n              icon: 'success',\r\n              title: 'Se inserto el servicio'\r\n            })\r\n            this.dialogRef.close(empresaDb);\r\n          })\r\n        }\r\n      )\r\n      .catch(e => {\r\n        if(!e.error.mensaje)\r\n          Swal.fire({ \r\n            icon: 'error',\r\n            title: 'Error',\r\n            text: 'El servidor no esta conectado'\r\n          })\r\n        else \r\n          Swal.fire({ \r\n            icon: 'error',\r\n            title: 'Error',\r\n            text: e.error.mensaje\r\n          })\r\n      }).finally( () => {\r\n        this.preloaderActivo = false;\r\n        this.desactivado = false;\r\n      })\r\n    \r\n  }\r\n\r\n\r\n  // Close the modal\r\n  cerrarModal(){\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdGlwby1zZXJ2aWNpby9tb2RhbHMvZWRpdC10aXBvLXNlcnZpY2lvL2VkaXQtdGlwby1zZXJ2aWNpby5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { TipoServicioService } from 'src/app/services/tipo-servicio.service';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MovimientosService } from 'src/app/services/movimientos.service';\r\nimport Swal from \"sweetalert2\";\r\n\r\n@Component({\r\n  selector: 'app-edit-tipo-servicio',\r\n  templateUrl: './edit-tipo-servicio.component.html',\r\n  styleUrls: ['./edit-tipo-servicio.component.css']\r\n})\r\nexport class EditTipoServicioComponent implements OnInit {\r\n\r\n \r\n \r\n  public tipoServicio = {\r\n    nombre: \"\"\r\n  }\r\n\r\n  public preloaderActivo = false;\r\n  public desactivado = false;\r\n  \r\n  constructor(\r\n    public tipoService: TipoServicioService,\r\n    public dialogRef: MatDialogRef<EditTipoServicioComponent>,\r\n    public movimientosService: MovimientosService,\r\n    @Inject(MAT_DIALOG_DATA) public data:any,\r\n    ) { }\r\n\r\n  // Ng on init\r\n  ngOnInit(){\r\n    this.tipoServicio.nombre = this.data.nombre;\r\n  }\r\n\r\n\r\n  // Post a Norm\r\n  async guardar(){\r\n    this.preloaderActivo = true;\r\n    this.desactivado = true;\r\n    await this.tipoService.editar(this.tipoServicio, this.data.id).toPromise()\r\n      .then(\r\n        empresaDb => {\r\n\r\n          let movimiento = {\r\n            idUsuario: sessionStorage.id,\r\n            tipo: 2,\r\n            descripcion: `Se Modifico el tipo de servicio de: \"${this.data.nombre}\" A: \"${this.tipoServicio.nombre}\"`\r\n          }\r\n          this.movimientosService.post(movimiento).subscribe(() => {\r\n            Swal.fire({ \r\n              icon: 'success',\r\n              title: 'Se inserto el servicio'\r\n            })\r\n            this.dialogRef.close(empresaDb);\r\n          })\r\n        }\r\n      )\r\n      .catch(e => {\r\n        if(!e.error.mensaje)\r\n          Swal.fire({ \r\n            icon: 'error',\r\n            title: 'Error',\r\n            text: 'El servidor no esta conectado'\r\n          })\r\n        else \r\n          Swal.fire({ \r\n            icon: 'error',\r\n            title: 'Error',\r\n            text: e.error.mensaje\r\n          })\r\n      }).finally( () => {\r\n        this.preloaderActivo = false;\r\n        this.desactivado = false;\r\n      })\r\n    \r\n  }\r\n\r\n\r\n  // Close the modal\r\n  cerrarModal(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdGlwby1zZXJ2aWNpby90aXBvLXNlcnZpY2lvLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport Swal from \"sweetalert2\"\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { TipoServicioService } from '../../services/tipo-servicio.service';\r\nimport { Router } from '@angular/router';\r\nimport { AddTipoServicioComponent } from './modals/add-tipo-servicio/add-tipo-servicio.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { environment } from 'src/environments/environment';\r\nimport { EditTipoServicioComponent } from './modals/edit-tipo-servicio/edit-tipo-servicio.component';\r\nimport { MovimientosService } from 'src/app/services/movimientos.service';\r\n\r\n@Component({\r\n  selector: 'app-tipo-servicio',\r\n  templateUrl: './tipo-servicio.component.html',\r\n  styleUrls: ['./tipo-servicio.component.css']\r\n})\r\nexport class TipoServicioComponent implements OnInit {\r\n\r\n  public tipoServicios : any = [];\r\n  public preloaderActivo = false;\r\n  public desactivado = false;\r\n\r\n  // Table\r\n  public displayedColumns: string[] = ['nombre', 'acciones'];\r\n  public dataSource = new MatTableDataSource();\r\n\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n\r\n  constructor(\r\n    public tipoServicioService: TipoServicioService,\r\n    private router: Router,\r\n    public dialog: MatDialog,\r\n    public movimientosService: MovimientosService\r\n    ) { this.validarUsuario() }\r\n\r\n\r\n  // Al iniciar\r\n  ngOnInit() {\r\n    this.conectarServidor();\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  // get all norms\r\n  conectarServidor(){\r\n    this.preloaderActivo = true;\r\n    this.desactivado = true;\r\n    this.tipoServicioService.get()\r\n      .subscribe(\r\n        data => {\r\n          this.tipoServicios = data;\r\n          console.log(this.tipoServicios);\r\n          this.preloaderActivo = false;\r\n          this.desactivado = false;\r\n          this.dataSource.data = this.tipoServicios;\r\n        },\r\n        err => {\r\n          console.log(err);\r\n            Swal.fire({\r\n              icon: 'error',\r\n              title: 'Error',\r\n              text: err\r\n            });\r\n\r\n          this.preloaderActivo = false;\r\n          this.desactivado = false;\r\n        }\r\n      )\r\n  }\r\n\r\n  // Abrir formulario en modal\r\n  async nuevo(){\r\n    const dialogRef = this.dialog.open(AddTipoServicioComponent, {\r\n      width: '700px'\r\n    });\r\n\r\n    await dialogRef.afterClosed().subscribe(result => {    \r\n      this.conectarServidor();\r\n    }); \r\n  }\r\n\r\n  // Editar\r\n  async editar(data){\r\n    const dialogRef = this.dialog.open(EditTipoServicioComponent, {\r\n      width: '700px',\r\n      data: {\r\n        id: data.id,\r\n        nombre: data.nombre\r\n      }\r\n    });\r\n\r\n    await dialogRef.afterClosed().subscribe(result => {    \r\n      this.conectarServidor();\r\n    }); \r\n  }\r\n\r\n   // Delete a empresa\r\n   async delete(data){\r\n    if(this.desactivado)\r\n      return false;\r\n\r\n    Swal.fire({\r\n      title: '¿Estas seguro que quieres borrar el tipo de servicio?',\r\n      text: 'Esto eliminara todos los costos, cotizaciones y servicios que contengan el mismo.',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Si, Borrar',\r\n      cancelButtonText: 'No, Cancelar'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.preloaderActivo = true;\r\n        this.desactivado = true;\r\n\r\n        this.tipoServicioService.delete(data.id).toPromise()\r\n        .then(db => {\r\n          let movimiento = {\r\n            idUsuario: sessionStorage.id,\r\n            tipo: 3,\r\n            descripcion: `Se borro el tipo de servicio: \"${data.nombre}\"`\r\n          }\r\n          this.movimientosService.post(movimiento).subscribe(() => {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              title: 'Se borro el tipo de servicio.'\r\n            })\r\n            this.conectarServidor();\r\n          })\r\n        }).catch ( e => {\r\n          if(!e.error.mensaje)\r\n            Swal.fire({\r\n              icon: 'error',\r\n              title: 'Error',\r\n              text: 'El servidor no esta conectado'\r\n            })\r\n          else \r\n            Swal.fire({\r\n              icon: 'error',\r\n              title: 'Error',\r\n              text: e.error.mensaje\r\n            })\r\n        }).finally(() => {\r\n          this.preloaderActivo = false;\r\n          this.desactivado = false;\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  // Filtering\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  // Tine prmisos o esta autenticado\r\n  validarUsuario(){\r\n    let id = sessionStorage.id;\r\n    if(!id){\r\n      this.router.navigate(['/']);\r\n      Swal.fire({\r\n        title: 'Error',\r\n        text: 'Debes iniciar sesion primero',\r\n        icon: 'warning'\r\n      });\r\n    } else {\r\n      let rol = parseInt(sessionStorage.rol);\r\n      if(environment.permisos_Usuarios[rol].tipo_servicio == false){\r\n        this.router.navigate(['/index']);\r\n        Swal.fire({\r\n          title: 'Error',\r\n          text: 'No tienes los permisos necesarios',\r\n          icon: 'warning'\r\n        });\r\n      }\r\n    }\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdXN1YXJpb3MvbW9kYWxzL2FkZC11c3VhcmlvL2FkZC11c3VhcmlvLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { UsuariosService } from 'src/app/services/usuarios.service';\r\nimport Swal from \"sweetalert2\"\r\nimport { MovimientosService } from 'src/app/services/movimientos.service';\r\n\r\n@Component({\r\n  selector: 'app-add-usuario',\r\n  templateUrl: './add-usuario.component.html',\r\n  styleUrls: ['./add-usuario.component.css']\r\n})\r\nexport class AddUsuarioComponent {\r\n\r\n  public preloaderActivo = false;\r\n  public desactivado = false;\r\n  public confirm='';\r\n\r\n  public usuario = {\r\n    nombre: '',\r\n    username: '',\r\n    password: '',\r\n    rol: 0\r\n  }\r\n  \r\n  constructor(\r\n    public dialogRef: MatDialogRef<AddUsuarioComponent>, \r\n    private usuariosService: UsuariosService,\r\n    public movimientosService: MovimientosService\r\n    ) { }\r\n\r\n\r\n  cerrarModal(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  async agregarUsuario (){\r\n    this.preloaderActivo = true;\r\n    this.desactivado = true;\r\n    await this.usuariosService.post(this.usuario).toPromise()\r\n      .then(\r\n        () => {\r\n          let aux;\r\n          aux = (this.usuario.rol == 1) ? \"Usuario Normal\": \"Usuario Administrador\";\r\n          let movimiento = {\r\n            idUsuario: sessionStorage.id,\r\n            tipo: 1,\r\n            descripcion: `Se creo el usuario:  \"${this.usuario.nombre}\" que es un: \"${aux}\", con el username \"${this.usuario.username}\"`\r\n          }\r\n          this.movimientosService.post(movimiento).subscribe(() => {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              title: 'Se inserto el usuario',\r\n            });\r\n            this.dialogRef.close(true);\r\n          })\r\n        }\r\n      )\r\n      .catch(e => {\r\n        if(!e.error.mensaje)\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Error',\r\n            text: 'El servidor no esta conectado'\r\n          });\r\n        else \r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Error',\r\n            text: e.error.mensaje\r\n          });\r\n      }).finally( () => {\r\n        this.preloaderActivo = false;\r\n        this.desactivado = false;\r\n      })\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdXN1YXJpb3MvbW9kYWxzL2VkaXQtcGFzc3dvcmQvZWRpdC1wYXNzd29yZC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { UsuariosService } from 'src/app/services/usuarios.service';\r\nimport Swal from \"sweetalert2\";\r\nimport { MovimientosService } from 'src/app/services/movimientos.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-password',\r\n  templateUrl: './edit-password.component.html',\r\n  styleUrls: ['./edit-password.component.css']\r\n})\r\nexport class EditPasswordComponent implements OnInit {\r\n  \r\n  public preloaderActivo = false;\r\n  public desactivado = false;\r\n  public isDifferent = false;\r\n  public usuario = {\r\n    password: '',\r\n    confirm: ''\r\n  }\r\n  \r\n  ngOnInit(){\r\n    console.log(this.data);\r\n  }\r\n  \r\n  constructor(\r\n    public dialogRef: MatDialogRef<EditPasswordComponent>, \r\n    private usuariosService: UsuariosService, \r\n    @Inject(MAT_DIALOG_DATA) public data:any,\r\n    public movimientosService: MovimientosService) { }\r\n\r\n\r\n  cerrarModal(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  \r\n  // Te quedaste aqui, ibas a editar\r\n  async editarPassword(){\r\n    console.log(this.usuario);\r\n    this.preloaderActivo = true;\r\n    this.desactivado = true;\r\n    await this.usuariosService.updatePassword(this.usuario, this.data.id).toPromise()\r\n      .then(\r\n        () => {\r\n          let movimiento = {\r\n            idUsuario: sessionStorage.id,\r\n            tipo: 2,\r\n            descripcion: `A el usuario:  \"${this.data.nombre}\" se le cambio la contraseña.`\r\n          }\r\n          this.movimientosService.post(movimiento).subscribe(() => {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              title: 'Se cambio la contraseña'\r\n            })\r\n            this.dialogRef.close(true);\r\n          })\r\n        }\r\n      )\r\n      .catch(e => {\r\n        if(!e.error.mensaje)\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Error',\r\n            text: 'El servidor no esta conectado'\r\n          })\r\n        else \r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Error',\r\n            text: e.error.mensaje\r\n          })\r\n      }).finally( () => {\r\n        this.preloaderActivo = false;\r\n        this.desactivado = false;\r\n      })\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdXN1YXJpb3MvbW9kYWxzL2VkaXQtdXN1YXJpby9lZGl0LXVzdWFyaW8uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\r\nimport { UsuariosService } from 'src/app/services/usuarios.service';\r\nimport { MovimientosService } from 'src/app/services/movimientos.service';\r\nimport Swal from \"sweetalert2\"\r\n\r\n@Component({\r\n  selector: 'app-edit-usuario',\r\n  templateUrl: './edit-usuario.component.html',\r\n  styleUrls: ['./edit-usuario.component.css']\r\n})\r\nexport class EditUsuarioComponent implements OnInit {\r\n  public preloaderActivo = false;\r\n  public desactivado = false;\r\n  public confirm='';\r\n\r\n  public usuario = {\r\n    nombre: '',\r\n    username: '',\r\n    password: '',\r\n    rol: 0\r\n  }\r\n  \r\n  constructor(\r\n    public dialogRef: MatDialogRef<EditUsuarioComponent>, \r\n    private usuariosService: UsuariosService,\r\n    public movimientosService: MovimientosService,\r\n    @Inject(MAT_DIALOG_DATA) public data:any,\r\n    ) { }\r\n\r\n  ngOnInit(){\r\n    console.log(this.data);\r\n    this.usuario.nombre = this.data.nombre;\r\n    this.usuario.username = this.data.username;\r\n    this.usuario.rol = this.data.rol;\r\n  }\r\n\r\n\r\n  cerrarModal(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  async editar (){\r\n    this.preloaderActivo = true;\r\n    this.desactivado = true;\r\n    await this.usuariosService.put(this.usuario, this.data.id).toPromise()\r\n      .then(\r\n        () => {\r\n          let aux; let auxold;\r\n          aux = (this.usuario.rol == 1) ? \"Usuario Normal\": \"Usuario Administrador\";\r\n          auxold = (this.data.rol == 1) ? \"Usuario Normal\": \"Usuario Administrador\";\r\n          let movimiento = {\r\n            idUsuario: sessionStorage.id,\r\n            tipo: 2,\r\n            descripcion: `Se actualizo el usuario de:  \"${this.data.nombre}\" que era: \"${auxold}\" y tenia el username: \"${this.data.username}\" A: \"${this.usuario.nombre}\" que es: \"${aux}\" y tiene el username: \"${this.usuario.username}\"`\r\n          }\r\n          this.movimientosService.post(movimiento).subscribe(() => {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              title: 'Se actualizo el usuario',\r\n            });\r\n            this.dialogRef.close(true);\r\n          })\r\n        }\r\n      )\r\n      .catch(e => {\r\n        if(!e.error.mensaje)\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Error',\r\n            text: 'El servidor no esta conectado'\r\n          });\r\n        else \r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Error',\r\n            text: e.error.mensaje\r\n          });\r\n      }).finally( () => {\r\n        this.preloaderActivo = false;\r\n        this.desactivado = false;\r\n      })\r\n  }\r\n}\r\n","export default \"::ng-deep .mat-sort-header-container {\\r\\n    display:-webkit-box;\\r\\n    display:flex;\\r\\n    -webkit-box-pack:center;\\r\\n            justify-content:center;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy91c3Vhcmlvcy91c3Vhcmlvcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksbUJBQVk7SUFBWixZQUFZO0lBQ1osdUJBQXNCO1lBQXRCLHNCQUFzQjtFQUN4QiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdXN1YXJpb3MvdXN1YXJpb3MuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIjo6bmctZGVlcCAubWF0LXNvcnQtaGVhZGVyLWNvbnRhaW5lciB7XHJcbiAgICBkaXNwbGF5OmZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO1xyXG4gIH0iXX0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Usuario } from 'src/app/models/usuario';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { UsuariosService } from 'src/app/services/usuarios.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { AddUsuarioComponent } from './modals/add-usuario/add-usuario.component';\r\nimport Swal from \"sweetalert2\"\r\nimport { environment } from 'src/environments/environment';\r\nimport { Router } from '@angular/router';\r\nimport { MatSort } from '@angular/material';\r\nimport { EditUsuarioComponent } from './modals/edit-usuario/edit-usuario.component';\r\nimport { MovimientosService } from 'src/app/services/movimientos.service';\r\nimport { EditPasswordComponent } from './modals/edit-password/edit-password.component';\r\n\r\n@Component({\r\n  selector: 'app-usuarios',\r\n  templateUrl: './usuarios.component.html',\r\n  styleUrls: ['./usuarios.component.css']\r\n})\r\nexport class UsuariosComponent implements OnInit {\r\n\r\n\r\n  // Constantes\r\n  public usuarios: Usuario[] = []\r\n  public preloaderActivo = false;\r\n  public desactivado = false;\r\n  \r\n  public displayedColumns: string[] = ['nombre', 'username', 'rol', 'acciones'];\r\n  public dataSource = new MatTableDataSource();\r\n\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n\r\n  // Constructor\r\n  constructor(\r\n    private usuariosService: UsuariosService, \r\n    public dialog: MatDialog,\r\n    public router: Router,\r\n    public movimientosService: MovimientosService\r\n    ) { this.validarUsuario(); }\r\n\r\n  // To Init\r\n  ngOnInit() {\r\n    this.conectarServidor();\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  // Filtering\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n\r\n  // get all norms\r\n  conectarServidor(){\r\n    this.preloaderActivo = true;\r\n    this.desactivado = true;\r\n\r\n    this.usuariosService.get()\r\n      .subscribe(\r\n        data => {\r\n          this.usuarios = data;\r\n          console.log(this.usuarios);\r\n          this.preloaderActivo = false;\r\n          this.desactivado = false;\r\n          this.dataSource.data = this.usuarios;\r\n        },\r\n        err => {\r\n          console.log(err);\r\n          if (err.status === 0) {\r\n            Swal.fire({\r\n              icon: 'error',\r\n              title: 'Error',\r\n              text: 'El servidor no esta conectado'\r\n            })\r\n          }  else {\r\n            Swal.fire({\r\n              icon: 'error',\r\n              title: 'Error',\r\n              text: err.error.mensaje\r\n            })\r\n          }\r\n          this.preloaderActivo = false;\r\n          this.desactivado = false;\r\n        }\r\n      );\r\n  }   \r\n  \r\n  // Agregar Un Usuario Tramitdor\r\n  async addUsuario() {\r\n    const dialogRef = this.dialog.open(AddUsuarioComponent, {\r\n      width: '700px'\r\n    });\r\n\r\n    await dialogRef.afterClosed().subscribe(res => {\r\n      if(res){\r\n        this.conectarServidor();\r\n      }\r\n    });\r\n  }\r\n  \r\n  // Edit the tramitador\r\n  async editar(user){\r\n    if(this.desactivado)\r\n      return false;\r\n\r\n    const dialogRef = this.dialog.open(EditUsuarioComponent, {\r\n      data: user,\r\n      width: '500px'\r\n    })\r\n\r\n    await dialogRef.afterClosed().subscribe(\r\n      res => {\r\n        this.conectarServidor();\r\n      }\r\n    )\r\n  }\r\n\r\n  // edit password\r\n  async editarPassword(usuario) {\r\n    if(this.desactivado)\r\n      return false;\r\n\r\n    const dialogRef = this.dialog.open(EditPasswordComponent, {\r\n      data: usuario,\r\n      width: '500px'\r\n    })\r\n\r\n    await dialogRef.afterClosed().subscribe(\r\n      res => {\r\n        this.conectarServidor();\r\n      })\r\n  }\r\n\r\n  // Delete a empresa\r\n  async delete(data){\r\n    if(this.desactivado)\r\n      return false;\r\n\r\n    Swal.fire({\r\n      title: '¿Estas seguro que quieres borrar el usuario?',\r\n      text: 'No podras recuperar su informacion despues.',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Si, Borrar',\r\n      cancelButtonText: 'No, Cancelar'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.preloaderActivo = true;\r\n        this.desactivado = true;\r\n\r\n        this.usuariosService.delete(data.id).toPromise()\r\n        .then(db => {\r\n          let aux = (data.rol == 1) ? \"Usuario Normal\": \"Usuario Administrador\";\r\n          let movimiento = {\r\n            idUsuario: sessionStorage.id,\r\n            tipo: 3,\r\n            descripcion: `Se borro el usuario: \"${data.nombre}\" con username: \"${data.username}\" y que era un \"${aux}\"`\r\n          }\r\n          this.movimientosService.post(movimiento).subscribe(() => {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              title: 'Se borro la empresa'\r\n            })\r\n            this.conectarServidor();\r\n          })\r\n        }).catch ( e => {\r\n          if(!e.error.mensaje)\r\n            Swal.fire({\r\n              icon: 'error',\r\n              title: 'Error',\r\n              text: 'El servidor no esta conectado'\r\n            })\r\n          else \r\n            Swal.fire({\r\n              icon: 'error',\r\n              title: 'Error',\r\n              text: e.error.mensaje\r\n            })\r\n        }).finally(() => {\r\n          this.preloaderActivo = false;\r\n          this.desactivado = false;\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  // Tine prmisos o esta autenticado\r\n  validarUsuario(){\r\n    let id = sessionStorage.id;\r\n    if(!id){\r\n      this.router.navigate(['/']);\r\n      Swal.fire({\r\n        title: 'Error',\r\n        text: 'Debes iniciar sesion primero',\r\n        icon: 'warning'\r\n      });\r\n    } else {\r\n      let rol = parseInt(sessionStorage.rol);\r\n      if(environment.permisos_Usuarios[rol].usuarios == false){\r\n        this.router.navigate(['/index']);\r\n        Swal.fire({\r\n          title: 'Error',\r\n          text: 'No tienes los permisos necesarios',\r\n          icon: 'warning'\r\n        });\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CostosService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  get() {\r\n    return this.http.get(environment.Url_Service + 'Costos/');\r\n  }\r\n\r\n  post(data) {\r\n    return this.http.post(environment.Url_Service + 'Costos/', data);\r\n  }\r\n\r\n  editar(data, id) {\r\n    return this.http.put(environment.Url_Service + 'Costos/' + id, data);\r\n  }\r\n\r\n  // Get 1\r\n  get1Costo(id) {\r\n    return this.http.get(environment.Url_Service + 'Costos/' + id);\r\n  }\r\n\r\n  // Delete\r\n  delete(id) {\r\n    return this.http.put(environment.Url_Service + 'Costos/activo/' + id, null);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CotizacionesService {\r\n\r\n  constructor(\r\n    public http: HttpClient\r\n  ) { }\r\n\r\n  // Get\r\n  get() {\r\n    return this.http.get(environment.Url_Service + 'Cotizaciones');\r\n  }\r\n\r\n  // Get\r\n  post(data) {\r\n    return this.http.post(environment.Url_Service + 'Cotizaciones', data);\r\n  }\r\n\r\n  // delete\r\n  putActivo(estado: number, id: number) {\r\n    return this.http.put(environment.Url_Service + 'Cotizaciones/activo/' + `${id}/${estado}`, null);\r\n  }\r\n\r\n  // Put\r\n  put(data, id) {\r\n    return this.http.put(environment.Url_Service + 'Cotizaciones/' + id, data);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\nimport { identifierModuleUrl } from '@angular/compiler';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EmpresasService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  get(){\r\n    return this.http.get(environment.Url_Service + 'Empresas/');\r\n  }\r\n\r\n  put(data){\r\n    return this.http.put(environment.Url_Service + 'Empresas/'+data.id, data);\r\n  }\r\n\r\n  post(data){\r\n    return this.http.post(environment.Url_Service + 'Empresas/', data);\r\n  }\r\n\r\n  getOne(id){\r\n    return this.http.get(environment.Url_Service + 'Empresas/'+id);\r\n  }\r\n\r\n  delete(id){\r\n    return this.http.put(environment.Url_Service + 'Empresas/activo/'+id, null);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {environment} from '../../environments/environment';\r\nimport {RespuestaUser} from '../models/respuestaUser';\r\nimport { Socket } from 'ngx-socket-io';\r\nimport {map} from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n\r\n  constructor( public http: HttpClient, private socket: Socket) { }\r\n\r\n  // Check if its true\r\n  validarUsuario(data) {\r\n    return this.http.put<RespuestaUser>(environment.Url_Service + 'Login/checkUser', data);\r\n  }\r\n\r\n  // Sockets\r\n  putStatusNavbar(status: boolean, rol: number){\r\n    this.socket.emit('navbarStatus', { status, rol });\r\n  }\r\n\r\n  getStatusNavbar() {\r\n    return this.socket\r\n      .fromEvent<any>('navbarStatus').pipe(map(data => data));\r\n  }\r\n}\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MovimientosService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // Insert movement\r\n  post(data){\r\n    return this.http.post(environment.Url_Service + 'Movimientos/', data);\r\n  }\r\n\r\n  // get\r\n  get(){\r\n    return this.http.get(environment.Url_Service + 'Movimientos/');\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NormasService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  get(){\r\n    return this.http.get(environment.Url_Service + 'Normas/');\r\n  }\r\n\r\n  post(data){\r\n    return this.http.post(environment.Url_Service + 'Normas/', data);\r\n  }\r\n\r\n  editar(data, id){\r\n    return this.http.put(environment.Url_Service + 'Normas/' + id, data);\r\n  }\r\n\r\n  delete(id){\r\n    return this.http.put(environment.Url_Service + 'Normas/activo/' + id, null);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProspectosService {\r\n\r\n  \r\n  constructor(private http: HttpClient) { }\r\n\r\n  get(){\r\n    return this.http.get(environment.Url_Service + 'Prospectos/');\r\n  }\r\n\r\n  // Validate the prospect\r\n  put(data, id){\r\n    return this.http.put(environment.Url_Service + 'Prospectos/' + id, data);\r\n  }\r\n\r\n  // Editar el prospect\r\n  editar(data, id){\r\n    return this.http.put(environment.Url_Service + 'Prospectos/editar/' + id, data);\r\n  }\r\n\r\n  post(data){\r\n    return this.http.post(environment.Url_Service + 'Prospectos/', data);\r\n  }\r\n\r\n  getOne(id){\r\n    return this.http.get(environment.Url_Service + 'Prospectos/'+id);\r\n  }\r\n\r\n  delete(id){\r\n    return this.http.put(environment.Url_Service + 'Prospectos/activo/'+id, null);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServiciosService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  get(){\r\n    return this.http.get(environment.Url_Service + 'Servicios/');\r\n  }\r\n\r\n  post(data){\r\n    return this.http.post(environment.Url_Service + 'Servicios/', data);\r\n  }\r\n\r\n  putEstatusUno(data, id){\r\n    return this.http.put(environment.Url_Service + 'Servicios/estatusUno/' + id, data);\r\n  }\r\n\r\n  putEstatusDos(data, id){\r\n    return this.http.put(environment.Url_Service + 'Servicios/estatusDos/' + id, data);\r\n  }\r\n\r\n  putEstatusTres(data, id){\r\n    return this.http.put(environment.Url_Service + 'Servicios/estatusTres/' + id, data);\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TipoServicioService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  get(){\r\n    return this.http.get(environment.Url_Service + 'TipoServicio/');\r\n  }\r\n\r\n  post(data){\r\n    return this.http.post(environment.Url_Service + 'TipoServicio/', data);\r\n  }\r\n\r\n  // Update\r\n  editar(data, id){\r\n    return this.http.put(environment.Url_Service + 'TipoServicio/' + id, data);\r\n  }\r\n\r\n  // borrar\r\n  delete(id){\r\n    return this.http.put(environment.Url_Service + 'TipoServicio/activo/' + id, null);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Usuario } from '../models/usuario';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UsuariosService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  post(data){\r\n    return this.http.post(environment.Url_Service + 'Usuarios/', data);\r\n  }\r\n\r\n  get(){\r\n    return this.http.get<Usuario[]>(environment.Url_Service + 'Usuarios/');\r\n  }\r\n\r\n  put(data, id){\r\n    return this.http.put(environment.Url_Service + 'Usuarios/' + id, data);\r\n  }\r\n\r\n  delete(id){\r\n    return this.http.put(environment.Url_Service + 'Usuarios/activo/'+id, null);\r\n  }\r\n\r\n  // Update PAssword\r\n  updatePassword(data, id) {\r\n    return this.http.put(environment.Url_Service + 'Usuarios/password/' + id, data);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  // Url_Service: 'http://localhost:3000/api/',\r\n  Url_Service: 'api/',\r\n  permisos_Usuarios:[\r\n\r\n    // 0\r\n    {\r\n\r\n    },\r\n    \r\n    // Normal user like monica\r\n    // 1\r\n    {\r\n      normas: false,\r\n      tipo_servicio: false,\r\n      costos: false,\r\n      cotizacion: false,\r\n      empresas: true,\r\n      prospectos: true,\r\n      servicios: true,\r\n      usuarios: true,\r\n      movimientos: false\r\n    },\r\n\r\n    // Admin user like liliana\r\n    // 2\r\n    {\r\n      normas: true,\r\n      tipo_servicio: true,\r\n      costos: true,\r\n      cotizacion: true,\r\n      empresas: true,\r\n      prospectos: true,\r\n      servicios: true,\r\n      usuarios: true,\r\n      movimientos: false\r\n    },\r\n\r\n    // super admin user like bruno\r\n    // 3\r\n    {\r\n      normas: true,\r\n      tipo_servicio: true,\r\n      costos: true,\r\n      cotizacion: true,\r\n      empresas: true,\r\n      prospectos: true,\r\n      servicios: true,\r\n      usuarios: true,\r\n      movimientos: true\r\n    }\r\n  ],\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","/* (ignored) */"],"sourceRoot":"webpack:///","file":"main-es5.js"}